{"ast":null,"code":"import { Axes as e, Grid as t, renderGridLinesToCanvas as a, renderAxesToCanvas as i } from \"@nivo/axes\";\nimport { useTheme as n, getPropertyAccessor as l, usePropertyAccessor as r, useValueFormatter as o, Container as d, useMotionConfig as u, useDimensions as c, bindDefs as s, CartesianMarkers as h, SvgWrapper as f, getRelativeCursor as b, isCursorInRect as v, ResponsiveWrapper as g } from \"@nivo/core\";\nimport { animated as m, to as p, useTransition as y } from \"@react-spring/web\";\nimport { useMemo as x, createElement as S, useCallback as k, useState as w, Fragment as L, forwardRef as C, useRef as V, useEffect as M } from \"react\";\nimport { useAnnotations as W, Annotation as T, useComputedAnnotations as B, renderAnnotationsToCanvas as I } from \"@nivo/annotations\";\nimport { jsx as O, Fragment as E, jsxs as R } from \"react/jsx-runtime\";\nimport { BoxLegendSvg as H, renderLegendToCanvas as P } from \"@nivo/legends\";\nimport { useOrdinalColorScale as F, useInheritedColor as X } from \"@nivo/colors\";\nimport { useTooltip as Y, BasicTooltip as D } from \"@nivo/tooltip\";\nimport { computeScale as A } from \"@nivo/scales\";\nimport { stack as G, stackOffsetDiverging as z } from \"d3-shape\";\nimport N from \"lodash/uniqBy\";\nfunction j() {\n  return j = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var a = arguments[t];\n      for (var i in a) Object.prototype.hasOwnProperty.call(a, i) && (e[i] = a[i]);\n    }\n    return e;\n  }, j.apply(this, arguments);\n}\nfunction q(e, t) {\n  if (null == e) return {};\n  var a,\n    i,\n    n = {},\n    l = Object.keys(e);\n  for (i = 0; i < l.length; i++) a = l[i], t.indexOf(a) >= 0 || (n[a] = e[a]);\n  return n;\n}\nvar K,\n  _ = function (e) {\n    var t = e.bars,\n      a = e.annotations,\n      i = W({\n        data: t,\n        annotations: a,\n        getPosition: function (e) {\n          return {\n            x: e.x + e.width / 2,\n            y: e.y + e.height / 2\n          };\n        },\n        getDimensions: function (e) {\n          var t = e.height,\n            a = e.width;\n          return {\n            width: a,\n            height: t,\n            size: Math.max(a, t)\n          };\n        }\n      });\n    return O(E, {\n      children: i.map(function (e, t) {\n        return O(T, j({}, e), t);\n      })\n    });\n  },\n  J = function (e) {\n    var t = e.width,\n      a = e.height,\n      i = e.legends,\n      n = e.toggleSerie;\n    return O(E, {\n      children: i.map(function (e, i) {\n        var l,\n          r = e[0],\n          o = e[1];\n        return O(H, j({}, r, {\n          containerWidth: t,\n          containerHeight: a,\n          data: null != (l = r.data) ? l : o,\n          toggleSerie: r.toggleSerie && \"keys\" === r.dataFrom ? n : void 0\n        }), i);\n      })\n    });\n  },\n  Q = [\"data\"],\n  U = function (e) {\n    var t,\n      a = e.bar,\n      i = a.data,\n      l = q(a, Q),\n      r = e.style,\n      o = r.borderColor,\n      d = r.color,\n      u = r.height,\n      c = r.labelColor,\n      s = r.labelOpacity,\n      h = r.labelX,\n      f = r.labelY,\n      b = r.transform,\n      v = r.width,\n      g = e.borderRadius,\n      y = e.borderWidth,\n      w = e.label,\n      L = e.shouldRenderLabel,\n      C = e.isInteractive,\n      V = e.onClick,\n      M = e.onMouseEnter,\n      W = e.onMouseLeave,\n      T = e.tooltip,\n      B = e.isFocusable,\n      I = e.ariaLabel,\n      E = e.ariaLabelledBy,\n      H = e.ariaDescribedBy,\n      P = n(),\n      F = Y(),\n      X = F.showTooltipFromEvent,\n      D = F.showTooltipAt,\n      A = F.hideTooltip,\n      G = x(function () {\n        return function () {\n          return S(T, j({}, l, i));\n        };\n      }, [T, l, i]),\n      z = k(function (e) {\n        null == V || V(j({\n          color: l.color\n        }, i), e);\n      }, [l, i, V]),\n      N = k(function (e) {\n        return X(G(), e);\n      }, [X, G]),\n      K = k(function (e) {\n        null == M || M(i, e), X(G(), e);\n      }, [i, M, X, G]),\n      _ = k(function (e) {\n        null == W || W(i, e), A();\n      }, [i, A, W]),\n      J = k(function () {\n        D(G(), [l.absX + l.width / 2, l.absY]);\n      }, [D, G, l]),\n      U = k(function () {\n        A();\n      }, [A]);\n    return R(m.g, {\n      transform: b,\n      children: [O(m.rect, {\n        width: p(v, function (e) {\n          return Math.max(e, 0);\n        }),\n        height: p(u, function (e) {\n          return Math.max(e, 0);\n        }),\n        rx: g,\n        ry: g,\n        fill: null != (t = i.fill) ? t : d,\n        strokeWidth: y,\n        stroke: o,\n        focusable: B,\n        tabIndex: B ? 0 : void 0,\n        \"aria-label\": I ? I(i) : void 0,\n        \"aria-labelledby\": E ? E(i) : void 0,\n        \"aria-describedby\": H ? H(i) : void 0,\n        onMouseEnter: C ? K : void 0,\n        onMouseMove: C ? N : void 0,\n        onMouseLeave: C ? _ : void 0,\n        onClick: C ? z : void 0,\n        onFocus: C && B ? J : void 0,\n        onBlur: C && B ? U : void 0\n      }), L && O(m.text, {\n        x: h,\n        y: f,\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        fillOpacity: s,\n        style: j({}, P.labels.text, {\n          pointerEvents: \"none\",\n          fill: c\n        }),\n        children: w\n      })]\n    });\n  },\n  Z = [\"color\", \"label\"],\n  $ = function (e) {\n    var t = e.color,\n      a = e.label,\n      i = q(e, Z);\n    return O(D, {\n      id: a,\n      value: i.formattedValue,\n      enableChip: !0,\n      color: t\n    });\n  },\n  ee = {\n    indexBy: \"id\",\n    keys: [\"value\"],\n    groupMode: \"stacked\",\n    layout: \"vertical\",\n    reverse: !1,\n    minValue: \"auto\",\n    maxValue: \"auto\",\n    valueScale: {\n      type: \"linear\"\n    },\n    indexScale: {\n      type: \"band\",\n      round: !0\n    },\n    padding: .1,\n    innerPadding: 0,\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: !1,\n    enableGridY: !0,\n    enableLabel: !0,\n    label: \"formattedValue\",\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: {\n      from: \"theme\",\n      theme: \"labels.text.fill\"\n    },\n    colorBy: \"id\",\n    colors: {\n      scheme: \"nivo\"\n    },\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\"\n    },\n    isInteractive: !0,\n    tooltip: $,\n    tooltipLabel: function (e) {\n      return e.id + \" - \" + e.indexValue;\n    },\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n    enableTotals: !1,\n    totalsOffset: 10\n  },\n  te = j({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"totals\", \"markers\", \"legends\", \"annotations\"],\n    barComponent: U,\n    defs: [],\n    fill: [],\n    animate: !0,\n    motionConfig: \"default\",\n    role: \"img\",\n    isFocusable: !1\n  }),\n  ae = j({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"totals\", \"legends\", \"annotations\"],\n    pixelRatio: \"undefined\" != typeof window && null != (K = window.devicePixelRatio) ? K : 1\n  }),\n  ie = function (e, t, a, i, n, l) {\n    return A(i, {\n      all: e.map(t),\n      min: 0,\n      max: 0\n    }, n, l).padding(a);\n  },\n  ne = function (e, t) {\n    return e.map(function (e) {\n      return j({}, t.reduce(function (e, t) {\n        return e[t] = null, e;\n      }, {}), e);\n    });\n  },\n  le = function (e) {\n    return Object.keys(e).reduce(function (t, a) {\n      return e[a] && (t[a] = e[a]), t;\n    }, {});\n  },\n  re = function (e) {\n    return [e, Number(e)];\n  },\n  oe = [\"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"innerPadding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  de = function (e, t) {\n    return e > t;\n  },\n  ue = function (e, t) {\n    return e < t;\n  },\n  ce = function (e, t) {\n    return Array.from(\" \".repeat(t - e), function (t, a) {\n      return e + a;\n    });\n  },\n  se = function (e) {\n    return de(e, 0) ? 0 : e;\n  },\n  he = function (e, t, a, i) {\n    var n = e.data,\n      l = e.formatValue,\n      r = e.getColor,\n      o = e.getIndex,\n      d = e.getTooltipLabel,\n      u = e.innerPadding,\n      c = void 0 === u ? 0 : u,\n      s = e.keys,\n      h = e.xScale,\n      f = e.yScale,\n      b = e.margin,\n      v = a ? ue : de,\n      g = n.map(le),\n      m = [];\n    return s.forEach(function (e, a) {\n      return ce(0, h.domain().length).forEach(function (u) {\n        var s,\n          p,\n          y,\n          x = re(n[u][e]),\n          S = x[0],\n          k = x[1],\n          w = o(n[u]),\n          L = (null != (s = h(w)) ? s : 0) + t * a + c * a,\n          C = v(p = k, 0) ? null != (y = f(p)) ? y : 0 : i,\n          V = function (e, t) {\n            var a;\n            return v(e, 0) ? i - t : (null != (a = f(e)) ? a : 0) - i;\n          }(k, C),\n          M = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: l(k),\n            hidden: !1,\n            index: u,\n            indexValue: w,\n            data: g[u]\n          };\n        m.push({\n          key: e + \".\" + M.indexValue,\n          index: m.length,\n          data: M,\n          x: L,\n          y: C,\n          absX: b.left + L,\n          absY: b.top + C,\n          width: t,\n          height: V,\n          color: r(M),\n          label: d(M)\n        });\n      });\n    }), m;\n  },\n  fe = function (e, t, a, i) {\n    var n = e.data,\n      l = e.formatValue,\n      r = e.getIndex,\n      o = e.getColor,\n      d = e.getTooltipLabel,\n      u = e.keys,\n      c = e.innerPadding,\n      s = void 0 === c ? 0 : c,\n      h = e.xScale,\n      f = e.yScale,\n      b = e.margin,\n      v = a ? ue : de,\n      g = n.map(le),\n      m = [];\n    return u.forEach(function (e, a) {\n      return ce(0, f.domain().length).forEach(function (u) {\n        var c,\n          p,\n          y,\n          x = re(n[u][e]),\n          S = x[0],\n          k = x[1],\n          w = r(n[u]),\n          L = v(p = k, 0) ? i : null != (y = h(p)) ? y : 0,\n          C = (null != (c = f(w)) ? c : 0) + t * a + s * a,\n          V = function (e, t) {\n            var a;\n            return v(e, 0) ? (null != (a = h(e)) ? a : 0) - i : i - t;\n          }(k, L),\n          M = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: l(k),\n            hidden: !1,\n            index: u,\n            indexValue: w,\n            data: g[u]\n          };\n        m.push({\n          key: e + \".\" + M.indexValue,\n          index: m.length,\n          data: M,\n          x: L,\n          y: C,\n          absX: b.left + L,\n          absY: b.top + C,\n          width: V,\n          height: t,\n          color: o(M),\n          label: d(M)\n        });\n      });\n    }), m;\n  },\n  be = function (e) {\n    var t,\n      a,\n      i = e.layout,\n      n = e.minValue,\n      l = e.maxValue,\n      r = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.innerPadding,\n      h = void 0 === s ? 0 : s,\n      f = e.valueScale,\n      b = e.indexScale,\n      v = e.hiddenIds,\n      g = void 0 === v ? [] : v,\n      m = q(e, oe),\n      p = m.keys.filter(function (e) {\n        return !g.includes(e);\n      }),\n      y = ne(m.data, p),\n      x = \"vertical\" === i ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      S = x[0],\n      k = x[1],\n      w = x[2],\n      L = ie(y, m.getIndex, c, b, w, k),\n      C = j({\n        max: l,\n        min: n,\n        reverse: r\n      }, f),\n      V = \"auto\" === C.min ? se : function (e) {\n        return e;\n      },\n      M = y.reduce(function (e, t) {\n        return [].concat(e, p.map(function (e) {\n          return t[e];\n        }));\n      }, []).filter(Boolean),\n      W = V(Math.min.apply(Math, M)),\n      T = (a = Math.max.apply(Math, M), isFinite(a) ? a : 0),\n      B = A(C, {\n        all: M,\n        min: W,\n        max: T\n      }, \"x\" === S ? o : d, S),\n      I = \"vertical\" === i ? [L, B] : [B, L],\n      O = I[0],\n      E = I[1],\n      R = (L.bandwidth() - h * (p.length - 1)) / p.length,\n      H = [j({}, m, {\n        data: y,\n        keys: p,\n        innerPadding: h,\n        xScale: O,\n        yScale: E\n      }), R, C.reverse, null != (t = B(0)) ? t : 0];\n    return {\n      xScale: O,\n      yScale: E,\n      bars: R > 0 ? \"vertical\" === i ? he.apply(void 0, H) : fe.apply(void 0, H) : []\n    };\n  },\n  ve = [\"data\", \"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  ge = function e(t) {\n    var a;\n    return t.some(Array.isArray) ? e((a = []).concat.apply(a, t)) : t;\n  },\n  me = function (e, t, a) {\n    var i = e.formatValue,\n      n = e.getColor,\n      l = e.getIndex,\n      r = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return u.domain().forEach(function (d, f) {\n        var b,\n          v,\n          g = e[f],\n          m = null != (b = u(l(g.data))) ? b : 0,\n          p = (null != (v = function (e) {\n            return c(e[a ? 0 : 1]);\n          }(g)) ? v : 0) + .5 * o,\n          y = function (e, t) {\n            var i;\n            return (null != (i = c(e[a ? 1 : 0])) ? i : 0) - t;\n          }(g, p) - o,\n          x = re(g.data[e.key]),\n          S = x[0],\n          k = x[1],\n          w = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: i(k),\n            hidden: !1,\n            index: f,\n            indexValue: d,\n            data: le(g.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: w,\n          x: m,\n          y: p,\n          absX: s.left + m,\n          absY: s.top + p,\n          width: t,\n          height: y,\n          color: n(w),\n          label: r(w)\n        });\n      });\n    }), h;\n  },\n  pe = function (e, t, a) {\n    var i = e.formatValue,\n      n = e.getColor,\n      l = e.getIndex,\n      r = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return c.domain().forEach(function (d, f) {\n        var b,\n          v,\n          g = e[f],\n          m = null != (b = c(l(g.data))) ? b : 0,\n          p = (null != (v = function (e) {\n            return u(e[a ? 1 : 0]);\n          }(g)) ? v : 0) + .5 * o,\n          y = function (e, t) {\n            var i;\n            return (null != (i = u(e[a ? 0 : 1])) ? i : 0) - t;\n          }(g, p) - o,\n          x = re(g.data[e.key]),\n          S = x[0],\n          k = x[1],\n          w = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: i(k),\n            hidden: !1,\n            index: f,\n            indexValue: d,\n            data: le(g.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: w,\n          x: p,\n          y: m,\n          absX: s.left + p,\n          absY: s.top + m,\n          width: y,\n          height: t,\n          color: n(w),\n          label: r(w)\n        });\n      });\n    }), h;\n  },\n  ye = function (e) {\n    var t,\n      a = e.data,\n      i = e.layout,\n      n = e.minValue,\n      l = e.maxValue,\n      r = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.valueScale,\n      h = e.indexScale,\n      f = e.hiddenIds,\n      b = void 0 === f ? [] : f,\n      v = q(e, ve),\n      g = v.keys.filter(function (e) {\n        return !b.includes(e);\n      }),\n      m = G().keys(g).offset(z)(ne(a, g)),\n      p = \"vertical\" === i ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      y = p[0],\n      x = p[1],\n      S = p[2],\n      k = ie(a, v.getIndex, c, h, S, x),\n      w = j({\n        max: l,\n        min: n,\n        reverse: r\n      }, s),\n      L = (t = ge(m), \"log\" === s.type ? t.filter(function (e) {\n        return 0 !== e;\n      }) : t),\n      C = Math.min.apply(Math, L),\n      V = Math.max.apply(Math, L),\n      M = A(w, {\n        all: L,\n        min: C,\n        max: V\n      }, \"x\" === y ? o : d, y),\n      W = \"vertical\" === i ? [k, M] : [M, k],\n      T = W[0],\n      B = W[1],\n      I = v.innerPadding > 0 ? v.innerPadding : 0,\n      O = k.bandwidth(),\n      E = [j({}, v, {\n        innerPadding: I,\n        stackedData: m,\n        xScale: T,\n        yScale: B\n      }), O, w.reverse];\n    return {\n      xScale: T,\n      yScale: B,\n      bars: O > 0 ? \"vertical\" === i ? me.apply(void 0, E) : pe.apply(void 0, E) : []\n    };\n  },\n  xe = function (e) {\n    var t = e.bars,\n      a = e.direction,\n      i = e.from,\n      n = e.groupMode,\n      r = e.layout,\n      o = e.legendLabel,\n      d = e.reverse,\n      u = l(null != o ? o : \"indexes\" === i ? \"indexValue\" : \"id\");\n    return \"indexes\" === i ? function (e, t, a) {\n      var i = N(e.map(function (e) {\n        var t, i;\n        return {\n          id: null != (t = e.data.indexValue) ? t : \"\",\n          label: a(e.data),\n          hidden: e.data.hidden,\n          color: null != (i = e.color) ? i : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return \"horizontal\" === t && i.reverse(), i;\n    }(t, r, u) : function (e, t, a, i, n, l) {\n      var r = N(e.map(function (e) {\n        var t;\n        return {\n          id: e.data.id,\n          label: l(e.data),\n          hidden: e.data.hidden,\n          color: null != (t = e.color) ? t : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return (\"vertical\" === t && \"stacked\" === i && \"column\" === a && !0 !== n || \"horizontal\" === t && \"stacked\" === i && !0 === n) && r.reverse(), r;\n    }(t, r, a, n, d, u);\n  },\n  Se = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, i + a);\n  },\n  ke = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, i + (a > 0 ? a : 0));\n  },\n  we = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, Math.max(i, Number(a)));\n  },\n  Le = function (e, t) {\n    var a = e.get(t) || 0;\n    e.set(t, a + 1);\n  },\n  Ce = function (e) {\n    var t = e.indexBy,\n      a = void 0 === t ? ee.indexBy : t,\n      i = e.keys,\n      l = void 0 === i ? ee.keys : i,\n      d = e.label,\n      u = void 0 === d ? ee.label : d,\n      c = e.tooltipLabel,\n      s = void 0 === c ? ee.tooltipLabel : c,\n      h = e.valueFormat,\n      f = e.colors,\n      b = void 0 === f ? ee.colors : f,\n      v = e.colorBy,\n      g = void 0 === v ? ee.colorBy : v,\n      m = e.borderColor,\n      p = void 0 === m ? ee.borderColor : m,\n      y = e.labelTextColor,\n      S = void 0 === y ? ee.labelTextColor : y,\n      L = e.groupMode,\n      C = void 0 === L ? ee.groupMode : L,\n      V = e.layout,\n      M = void 0 === V ? ee.layout : V,\n      W = e.reverse,\n      T = void 0 === W ? ee.reverse : W,\n      B = e.data,\n      I = e.minValue,\n      O = void 0 === I ? ee.minValue : I,\n      E = e.maxValue,\n      R = void 0 === E ? ee.maxValue : E,\n      H = e.margin,\n      P = e.width,\n      Y = e.height,\n      D = e.padding,\n      A = void 0 === D ? ee.padding : D,\n      G = e.innerPadding,\n      z = void 0 === G ? ee.innerPadding : G,\n      N = e.valueScale,\n      q = void 0 === N ? ee.valueScale : N,\n      K = e.indexScale,\n      _ = void 0 === K ? ee.indexScale : K,\n      J = e.initialHiddenIds,\n      Q = void 0 === J ? ee.initialHiddenIds : J,\n      U = e.enableLabel,\n      Z = void 0 === U ? ee.enableLabel : U,\n      $ = e.labelSkipWidth,\n      te = void 0 === $ ? ee.labelSkipWidth : $,\n      ae = e.labelSkipHeight,\n      ie = void 0 === ae ? ee.labelSkipHeight : ae,\n      ne = e.legends,\n      le = void 0 === ne ? ee.legends : ne,\n      re = e.legendLabel,\n      oe = e.totalsOffset,\n      de = void 0 === oe ? ee.totalsOffset : oe,\n      ue = w(null != Q ? Q : []),\n      ce = ue[0],\n      se = ue[1],\n      he = k(function (e) {\n        se(function (t) {\n          return t.indexOf(e) > -1 ? t.filter(function (t) {\n            return t !== e;\n          }) : [].concat(t, [e]);\n        });\n      }, []),\n      fe = r(a),\n      ve = r(u),\n      ge = r(s),\n      me = o(h),\n      pe = n(),\n      Ce = F(b, g),\n      Ve = X(p, pe),\n      Me = X(S, pe),\n      We = (\"grouped\" === C ? be : ye)({\n        layout: M,\n        reverse: T,\n        data: B,\n        getIndex: fe,\n        keys: l,\n        minValue: O,\n        maxValue: R,\n        width: P,\n        height: Y,\n        getColor: Ce,\n        padding: A,\n        innerPadding: z,\n        valueScale: q,\n        indexScale: _,\n        hiddenIds: ce,\n        formatValue: me,\n        getTooltipLabel: ge,\n        margin: H\n      }),\n      Te = We.bars,\n      Be = We.xScale,\n      Ie = We.yScale,\n      Oe = x(function () {\n        return Te.filter(function (e) {\n          return null !== e.data.value;\n        }).map(function (e, t) {\n          return j({}, e, {\n            index: t\n          });\n        });\n      }, [Te]),\n      Ee = k(function (e) {\n        var t = e.width,\n          a = e.height;\n        return !!Z && !(te > 0 && t < te) && !(ie > 0 && a < ie);\n      }, [Z, te, ie]),\n      Re = x(function () {\n        return l.map(function (e) {\n          var t = Te.find(function (t) {\n            return t.data.id === e;\n          });\n          return j({}, t, {\n            data: j({\n              id: e\n            }, null == t ? void 0 : t.data, {\n              hidden: ce.includes(e)\n            })\n          });\n        });\n      }, [ce, l, Te]),\n      He = x(function () {\n        return le.map(function (e) {\n          return [e, xe({\n            bars: \"keys\" === e.dataFrom ? Re : Te,\n            direction: e.direction,\n            from: e.dataFrom,\n            groupMode: C,\n            layout: M,\n            legendLabel: re,\n            reverse: T\n          })];\n        });\n      }, [le, Re, Te, C, M, re, T]),\n      Pe = x(function () {\n        return function (e, t, a, i, n, l, r) {\n          void 0 === i && (i = ee.layout), void 0 === n && (n = ee.groupMode);\n          var o = [];\n          if (0 === e.length) return o;\n          var d = new Map(),\n            u = e[0].width,\n            c = e[0].height;\n          if (\"stacked\" === n) {\n            var s = new Map();\n            e.forEach(function (e) {\n              var t = e.data,\n                a = t.indexValue,\n                i = t.value;\n              Se(d, a, Number(i)), ke(s, a, Number(i));\n            }), s.forEach(function (e, n) {\n              var s,\n                h,\n                f,\n                b = d.get(n) || 0;\n              \"vertical\" === i ? (s = t(n), h = a(e), f = a(e / 2)) : (s = t(e), h = a(n), f = t(e / 2)), s += \"vertical\" === i ? u / 2 : l, h += \"vertical\" === i ? -l : c / 2, o.push({\n                key: \"total_\" + n,\n                x: s,\n                y: h,\n                value: b,\n                formattedValue: r(b),\n                animationOffset: f\n              });\n            });\n          } else if (\"grouped\" === n) {\n            var h = new Map(),\n              f = new Map();\n            e.forEach(function (e) {\n              var t = e.data,\n                a = t.indexValue,\n                i = t.value;\n              Se(d, a, Number(i)), we(h, a, Number(i)), Le(f, a);\n            }), h.forEach(function (e, n) {\n              var s,\n                h,\n                b,\n                v = d.get(n) || 0,\n                g = f.get(n);\n              \"vertical\" === i ? (s = t(n), h = a(e), b = a(e / 2)) : (s = t(e), h = a(n), b = t(e / 2)), s += \"vertical\" === i ? g * u / 2 : l, h += \"vertical\" === i ? -l : g * c / 2, o.push({\n                key: \"total_\" + n,\n                x: s,\n                y: h,\n                value: v,\n                formattedValue: r(v),\n                animationOffset: b\n              });\n            });\n          }\n          return o;\n        }(Te, Be, Ie, M, C, de, me);\n      }, [Te, Be, Ie, M, C, de, me]);\n    return {\n      bars: Te,\n      barsWithValue: Oe,\n      xScale: Be,\n      yScale: Ie,\n      getIndex: fe,\n      getLabel: ve,\n      getTooltipLabel: ge,\n      formatValue: me,\n      getColor: Ce,\n      getBorderColor: Ve,\n      getLabelColor: Me,\n      shouldRenderBarLabel: Ee,\n      hiddenIds: ce,\n      toggleSerie: he,\n      legendsWithData: He,\n      barTotals: Pe\n    };\n  },\n  Ve = function (e) {\n    var t = e.data,\n      a = e.springConfig,\n      i = e.animate,\n      l = e.layout,\n      r = void 0 === l ? te.layout : l,\n      o = n();\n    return y(t, {\n      keys: function (e) {\n        return e.key;\n      },\n      from: function (e) {\n        return {\n          x: \"vertical\" === r ? e.x : e.animationOffset,\n          y: \"vertical\" === r ? e.animationOffset : e.y,\n          labelOpacity: 0\n        };\n      },\n      enter: function (e) {\n        return {\n          x: e.x,\n          y: e.y,\n          labelOpacity: 1\n        };\n      },\n      update: function (e) {\n        return {\n          x: e.x,\n          y: e.y,\n          labelOpacity: 1\n        };\n      },\n      leave: function (e) {\n        return {\n          x: \"vertical\" === r ? e.x : e.animationOffset,\n          y: \"vertical\" === r ? e.animationOffset : e.y,\n          labelOpacity: 0\n        };\n      },\n      config: a,\n      immediate: !i,\n      initial: i ? void 0 : null\n    })(function (e, t) {\n      return O(m.text, {\n        x: e.x,\n        y: e.y,\n        fillOpacity: e.labelOpacity,\n        style: j({}, o.labels.text, {\n          pointerEvents: \"none\",\n          fill: o.text.fill\n        }),\n        fontWeight: \"bold\",\n        fontSize: o.labels.text.fontSize,\n        fontFamily: o.labels.text.fontFamily,\n        textAnchor: \"vertical\" === r ? \"middle\" : \"start\",\n        alignmentBaseline: \"vertical\" === r ? \"alphabetic\" : \"middle\",\n        children: t.formattedValue\n      }, t.key);\n    });\n  },\n  Me = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  We = function (a) {\n    var i = a.data,\n      n = a.indexBy,\n      l = a.keys,\n      r = a.margin,\n      o = a.width,\n      d = a.height,\n      b = a.groupMode,\n      v = a.layout,\n      g = a.reverse,\n      m = a.minValue,\n      p = a.maxValue,\n      k = a.valueScale,\n      w = a.indexScale,\n      C = a.padding,\n      V = a.innerPadding,\n      M = a.axisTop,\n      W = a.axisRight,\n      T = a.axisBottom,\n      B = void 0 === T ? te.axisBottom : T,\n      I = a.axisLeft,\n      E = void 0 === I ? te.axisLeft : I,\n      R = a.enableGridX,\n      H = void 0 === R ? te.enableGridX : R,\n      P = a.enableGridY,\n      F = void 0 === P ? te.enableGridY : P,\n      X = a.gridXValues,\n      Y = a.gridYValues,\n      D = a.layers,\n      A = void 0 === D ? te.layers : D,\n      G = a.barComponent,\n      z = void 0 === G ? te.barComponent : G,\n      N = a.enableLabel,\n      q = void 0 === N ? te.enableLabel : N,\n      K = a.label,\n      Q = a.labelSkipWidth,\n      U = void 0 === Q ? te.labelSkipWidth : Q,\n      Z = a.labelSkipHeight,\n      $ = void 0 === Z ? te.labelSkipHeight : Z,\n      ee = a.labelTextColor,\n      ae = a.markers,\n      ie = void 0 === ae ? te.markers : ae,\n      ne = a.colorBy,\n      le = a.colors,\n      re = a.defs,\n      oe = void 0 === re ? te.defs : re,\n      de = a.fill,\n      ue = void 0 === de ? te.fill : de,\n      ce = a.borderRadius,\n      se = void 0 === ce ? te.borderRadius : ce,\n      he = a.borderWidth,\n      fe = void 0 === he ? te.borderWidth : he,\n      be = a.borderColor,\n      ve = a.annotations,\n      ge = void 0 === ve ? te.annotations : ve,\n      me = a.legendLabel,\n      pe = a.tooltipLabel,\n      ye = a.valueFormat,\n      xe = a.isInteractive,\n      Se = void 0 === xe ? te.isInteractive : xe,\n      ke = a.tooltip,\n      we = void 0 === ke ? te.tooltip : ke,\n      Le = a.onClick,\n      Me = a.onMouseEnter,\n      We = a.onMouseLeave,\n      Te = a.legends,\n      Be = a.role,\n      Ie = void 0 === Be ? te.role : Be,\n      Oe = a.ariaLabel,\n      Ee = a.ariaLabelledBy,\n      Re = a.ariaDescribedBy,\n      He = a.isFocusable,\n      Pe = void 0 === He ? te.isFocusable : He,\n      Fe = a.barAriaLabel,\n      Xe = a.barAriaLabelledBy,\n      Ye = a.barAriaDescribedBy,\n      De = a.initialHiddenIds,\n      Ae = a.enableTotals,\n      Ge = void 0 === Ae ? te.enableTotals : Ae,\n      ze = a.totalsOffset,\n      Ne = void 0 === ze ? te.totalsOffset : ze,\n      je = u(),\n      qe = je.animate,\n      Ke = je.config,\n      _e = c(o, d, r),\n      Je = _e.outerWidth,\n      Qe = _e.outerHeight,\n      Ue = _e.margin,\n      Ze = _e.innerWidth,\n      $e = _e.innerHeight,\n      et = Ce({\n        indexBy: n,\n        label: K,\n        tooltipLabel: pe,\n        valueFormat: ye,\n        colors: le,\n        colorBy: ne,\n        borderColor: be,\n        labelTextColor: ee,\n        groupMode: b,\n        layout: v,\n        reverse: g,\n        data: i,\n        keys: l,\n        minValue: m,\n        maxValue: p,\n        margin: Ue,\n        width: Ze,\n        height: $e,\n        padding: C,\n        innerPadding: V,\n        valueScale: k,\n        indexScale: w,\n        enableLabel: q,\n        labelSkipWidth: U,\n        labelSkipHeight: $,\n        legends: Te,\n        legendLabel: me,\n        initialHiddenIds: De,\n        totalsOffset: Ne\n      }),\n      tt = et.bars,\n      at = et.barsWithValue,\n      it = et.xScale,\n      nt = et.yScale,\n      lt = et.getLabel,\n      rt = et.getTooltipLabel,\n      ot = et.getBorderColor,\n      dt = et.getLabelColor,\n      ut = et.shouldRenderBarLabel,\n      ct = et.toggleSerie,\n      st = et.legendsWithData,\n      ht = et.barTotals,\n      ft = y(at, {\n        keys: function (e) {\n          return e.key;\n        },\n        from: function (e) {\n          return j({\n            borderColor: ot(e),\n            color: e.color,\n            height: 0,\n            labelColor: dt(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === v ? {} : {\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        enter: function (e) {\n          return {\n            borderColor: ot(e),\n            color: e.color,\n            height: e.height,\n            labelColor: dt(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        update: function (e) {\n          return {\n            borderColor: ot(e),\n            color: e.color,\n            height: e.height,\n            labelColor: dt(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        leave: function (e) {\n          return j({\n            borderColor: ot(e),\n            color: e.color,\n            height: 0,\n            labelColor: dt(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: 0,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === v ? {} : {\n            labelX: 0,\n            labelY: e.height / 2,\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        config: Ke,\n        immediate: !qe,\n        initial: qe ? void 0 : null\n      }),\n      bt = x(function () {\n        return {\n          borderRadius: se,\n          borderWidth: fe,\n          enableLabel: q,\n          isInteractive: Se,\n          labelSkipWidth: U,\n          labelSkipHeight: $,\n          onClick: Le,\n          onMouseEnter: Me,\n          onMouseLeave: We,\n          getTooltipLabel: rt,\n          tooltip: we,\n          isFocusable: Pe,\n          ariaLabel: Fe,\n          ariaLabelledBy: Xe,\n          ariaDescribedBy: Ye\n        };\n      }, [se, fe, q, rt, Se, $, U, Le, Me, We, we, Pe, Fe, Xe, Ye]),\n      vt = s(oe, tt, ue, {\n        dataKey: \"data\",\n        targetKey: \"data.fill\"\n      }),\n      gt = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null\n      };\n    A.includes(\"annotations\") && (gt.annotations = O(_, {\n      bars: tt,\n      annotations: ge\n    }, \"annotations\")), A.includes(\"axes\") && (gt.axes = O(e, {\n      xScale: it,\n      yScale: nt,\n      width: Ze,\n      height: $e,\n      top: M,\n      right: W,\n      bottom: B,\n      left: E\n    }, \"axes\")), A.includes(\"bars\") && (gt.bars = O(L, {\n      children: ft(function (e, t) {\n        return S(z, j({}, bt, {\n          bar: t,\n          style: e,\n          shouldRenderLabel: ut(t),\n          label: lt(t.data)\n        }));\n      })\n    }, \"bars\")), A.includes(\"grid\") && (gt.grid = O(t, {\n      width: Ze,\n      height: $e,\n      xScale: H ? it : null,\n      yScale: F ? nt : null,\n      xValues: X,\n      yValues: Y\n    }, \"grid\")), A.includes(\"legends\") && (gt.legends = O(J, {\n      width: Ze,\n      height: $e,\n      legends: st,\n      toggleSerie: ct\n    }, \"legends\")), A.includes(\"markers\") && (gt.markers = O(h, {\n      markers: ie,\n      width: Ze,\n      height: $e,\n      xScale: it,\n      yScale: nt\n    }, \"markers\")), A.includes(\"totals\") && Ge && (gt.totals = O(Ve, {\n      data: ht,\n      springConfig: Ke,\n      animate: qe,\n      layout: v\n    }, \"totals\"));\n    var mt = x(function () {\n      return j({}, bt, {\n        margin: Ue,\n        width: o,\n        height: d,\n        innerWidth: Ze,\n        innerHeight: $e,\n        bars: tt,\n        legendData: st,\n        enableLabel: q,\n        xScale: it,\n        yScale: nt,\n        tooltip: we,\n        getTooltipLabel: rt,\n        onClick: Le,\n        onMouseEnter: Me,\n        onMouseLeave: We\n      });\n    }, [bt, Ue, o, d, Ze, $e, tt, st, q, it, nt, we, rt, Le, Me, We]);\n    return O(f, {\n      width: Je,\n      height: Qe,\n      margin: Ue,\n      defs: vt,\n      role: Ie,\n      ariaLabel: Oe,\n      ariaLabelledBy: Ee,\n      ariaDescribedBy: Re,\n      isFocusable: Pe,\n      children: A.map(function (e, t) {\n        var a;\n        return \"function\" == typeof e ? O(L, {\n          children: S(e, mt)\n        }, t) : null != (a = null == gt ? void 0 : gt[e]) ? a : null;\n      })\n    });\n  },\n  Te = function (e) {\n    var t = e.isInteractive,\n      a = void 0 === t ? te.isInteractive : t,\n      i = e.animate,\n      n = void 0 === i ? te.animate : i,\n      l = e.motionConfig,\n      r = void 0 === l ? te.motionConfig : l,\n      o = e.theme,\n      u = e.renderWrapper,\n      c = q(e, Me);\n    return O(d, {\n      animate: n,\n      isInteractive: a,\n      motionConfig: r,\n      renderWrapper: u,\n      theme: o,\n      children: O(We, j({\n        isInteractive: a\n      }, c))\n    });\n  },\n  Be = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Ie = function (e, t, a, i) {\n    return e.find(function (e) {\n      return v(e.x + t.left, e.y + t.top, e.width, e.height, a, i);\n    });\n  };\nvar Oe = function (e) {\n    var t = e.data,\n      l = e.indexBy,\n      r = e.keys,\n      d = e.margin,\n      u = e.width,\n      s = e.height,\n      h = e.groupMode,\n      f = e.layout,\n      v = e.reverse,\n      g = e.minValue,\n      m = e.maxValue,\n      p = e.valueScale,\n      y = e.indexScale,\n      w = e.padding,\n      L = e.innerPadding,\n      C = e.axisTop,\n      T = e.axisRight,\n      E = e.axisBottom,\n      R = void 0 === E ? ae.axisBottom : E,\n      H = e.axisLeft,\n      F = void 0 === H ? ae.axisLeft : H,\n      X = e.enableGridX,\n      D = void 0 === X ? ae.enableGridX : X,\n      A = e.enableGridY,\n      G = void 0 === A ? ae.enableGridY : A,\n      z = e.gridXValues,\n      N = e.gridYValues,\n      q = e.layers,\n      K = void 0 === q ? ae.layers : q,\n      _ = e.renderBar,\n      J = void 0 === _ ? function (e, t) {\n        var a = t.bar,\n          i = a.color,\n          n = a.height,\n          l = a.width,\n          r = a.x,\n          o = a.y,\n          d = t.borderColor,\n          u = t.borderRadius,\n          c = t.borderWidth,\n          s = t.label,\n          h = t.labelColor,\n          f = t.shouldRenderLabel;\n        if (e.fillStyle = i, c > 0 && (e.strokeStyle = d, e.lineWidth = c), e.beginPath(), u > 0) {\n          var b = Math.min(u, n);\n          e.moveTo(r + b, o), e.lineTo(r + l - b, o), e.quadraticCurveTo(r + l, o, r + l, o + b), e.lineTo(r + l, o + n - b), e.quadraticCurveTo(r + l, o + n, r + l - b, o + n), e.lineTo(r + b, o + n), e.quadraticCurveTo(r, o + n, r, o + n - b), e.lineTo(r, o + b), e.quadraticCurveTo(r, o, r + b, o), e.closePath();\n        } else e.rect(r, o, l, n);\n        e.fill(), c > 0 && e.stroke(), f && (e.textBaseline = \"middle\", e.textAlign = \"center\", e.fillStyle = h, e.fillText(s, r + l / 2, o + n / 2));\n      } : _,\n      Q = e.enableLabel,\n      U = void 0 === Q ? ae.enableLabel : Q,\n      Z = e.label,\n      $ = e.labelSkipWidth,\n      ee = void 0 === $ ? ae.labelSkipWidth : $,\n      te = e.labelSkipHeight,\n      ie = void 0 === te ? ae.labelSkipHeight : te,\n      ne = e.labelTextColor,\n      le = e.colorBy,\n      re = e.colors,\n      oe = e.borderRadius,\n      de = void 0 === oe ? ae.borderRadius : oe,\n      ue = e.borderWidth,\n      ce = void 0 === ue ? ae.borderWidth : ue,\n      se = e.borderColor,\n      he = e.annotations,\n      fe = void 0 === he ? ae.annotations : he,\n      be = e.legendLabel,\n      ve = e.tooltipLabel,\n      ge = e.valueFormat,\n      me = e.isInteractive,\n      pe = void 0 === me ? ae.isInteractive : me,\n      ye = e.tooltip,\n      xe = void 0 === ye ? ae.tooltip : ye,\n      Se = e.onClick,\n      ke = e.onMouseEnter,\n      we = e.onMouseLeave,\n      Le = e.legends,\n      Ve = e.pixelRatio,\n      Me = void 0 === Ve ? ae.pixelRatio : Ve,\n      We = e.canvasRef,\n      Te = e.enableTotals,\n      Be = void 0 === Te ? ae.enableTotals : Te,\n      Oe = e.totalsOffset,\n      Ee = void 0 === Oe ? ae.totalsOffset : Oe,\n      Re = V(null),\n      He = n(),\n      Pe = c(u, s, d),\n      Fe = Pe.margin,\n      Xe = Pe.innerWidth,\n      Ye = Pe.innerHeight,\n      De = Pe.outerWidth,\n      Ae = Pe.outerHeight,\n      Ge = Ce({\n        indexBy: l,\n        label: Z,\n        tooltipLabel: ve,\n        valueFormat: ge,\n        colors: re,\n        colorBy: le,\n        borderColor: se,\n        labelTextColor: ne,\n        groupMode: h,\n        layout: f,\n        reverse: v,\n        data: t,\n        keys: r,\n        minValue: g,\n        maxValue: m,\n        margin: Fe,\n        width: Xe,\n        height: Ye,\n        padding: w,\n        innerPadding: L,\n        valueScale: p,\n        indexScale: y,\n        enableLabel: U,\n        labelSkipWidth: ee,\n        labelSkipHeight: ie,\n        legends: Le,\n        legendLabel: be,\n        totalsOffset: Ee\n      }),\n      ze = Ge.bars,\n      Ne = Ge.barsWithValue,\n      je = Ge.xScale,\n      qe = Ge.yScale,\n      Ke = Ge.getLabel,\n      _e = Ge.getTooltipLabel,\n      Je = Ge.getBorderColor,\n      Qe = Ge.getLabelColor,\n      Ue = Ge.shouldRenderBarLabel,\n      Ze = Ge.legendsWithData,\n      $e = Ge.barTotals,\n      et = Y(),\n      tt = et.showTooltipFromEvent,\n      at = et.hideTooltip,\n      it = B({\n        annotations: W({\n          data: ze,\n          annotations: fe,\n          getPosition: function (e) {\n            return {\n              x: e.x,\n              y: e.y\n            };\n          },\n          getDimensions: function (e) {\n            var t = e.width,\n              a = e.height;\n            return {\n              width: t,\n              height: a,\n              size: Math.max(t, a)\n            };\n          }\n        })\n      }),\n      nt = x(function () {\n        return {\n          borderRadius: de,\n          borderWidth: ce,\n          isInteractive: pe,\n          isFocusable: !1,\n          labelSkipWidth: ee,\n          labelSkipHeight: ie,\n          margin: Fe,\n          width: u,\n          height: s,\n          innerWidth: Xe,\n          innerHeight: Ye,\n          bars: ze,\n          legendData: Ze,\n          enableLabel: U,\n          xScale: je,\n          yScale: qe,\n          tooltip: xe,\n          getTooltipLabel: _e,\n          onClick: Se,\n          onMouseEnter: ke,\n          onMouseLeave: we\n        };\n      }, [de, ce, pe, ee, ie, Fe, u, s, Xe, Ye, ze, Ze, U, je, qe, xe, _e, Se, ke, we]),\n      lt = o(ge);\n    M(function () {\n      var e,\n        t = null == (e = Re.current) ? void 0 : e.getContext(\"2d\");\n      Re.current && t && (Re.current.width = De * Me, Re.current.height = Ae * Me, t.scale(Me, Me), t.fillStyle = He.background, t.fillRect(0, 0, De, Ae), t.translate(Fe.left, Fe.top), K.forEach(function (e) {\n        \"grid\" === e ? \"number\" == typeof He.grid.line.strokeWidth && He.grid.line.strokeWidth > 0 && (t.lineWidth = He.grid.line.strokeWidth, t.strokeStyle = He.grid.line.stroke, D && a(t, {\n          width: Xe,\n          height: Ye,\n          scale: je,\n          axis: \"x\",\n          values: z\n        }), G && a(t, {\n          width: Xe,\n          height: Ye,\n          scale: qe,\n          axis: \"y\",\n          values: N\n        })) : \"axes\" === e ? i(t, {\n          xScale: je,\n          yScale: qe,\n          width: Xe,\n          height: Ye,\n          top: C,\n          right: T,\n          bottom: R,\n          left: F,\n          theme: He\n        }) : \"bars\" === e ? Ne.forEach(function (e) {\n          J(t, {\n            bar: e,\n            borderColor: Je(e),\n            borderRadius: de,\n            borderWidth: ce,\n            label: Ke(e.data),\n            labelColor: Qe(e),\n            shouldRenderLabel: Ue(e)\n          });\n        }) : \"legends\" === e ? Ze.forEach(function (e) {\n          var a = e[0],\n            i = e[1];\n          P(t, j({}, a, {\n            data: i,\n            containerWidth: Xe,\n            containerHeight: Ye,\n            theme: He\n          }));\n        }) : \"annotations\" === e ? I(t, {\n          annotations: it,\n          theme: He\n        }) : \"totals\" === e && Be ? function (e, t, a, i) {\n          void 0 === i && (i = ae.layout), e.fillStyle = a.text.fill, e.font = \"bold \" + a.labels.text.fontSize + \"px \" + a.labels.text.fontFamily, e.textBaseline = \"vertical\" === i ? \"alphabetic\" : \"middle\", e.textAlign = \"vertical\" === i ? \"center\" : \"start\", t.forEach(function (t) {\n            e.fillText(t.formattedValue, t.x, t.y);\n          });\n        }(t, $e, He, f) : \"function\" == typeof e && e(t, nt);\n      }), t.save());\n    }, [R, F, T, C, Ne, de, ce, it, D, G, Je, Ke, Qe, z, N, h, s, Ye, Xe, nt, K, f, Ze, Fe.left, Fe.top, Ae, De, Me, J, je, qe, v, Ue, He, u, $e, Be, lt]);\n    var rt = k(function (e) {\n        if (ze && Re.current) {\n          var t = b(Re.current, e),\n            a = t[0],\n            i = t[1],\n            n = Ie(ze, Fe, a, i);\n          void 0 !== n ? (tt(S(xe, j({}, n.data, {\n            color: n.color,\n            label: n.label,\n            value: Number(n.data.value)\n          })), e), \"mouseenter\" === e.type && (null == ke || ke(n.data, e))) : at();\n        }\n      }, [at, Fe, ke, ze, tt, xe]),\n      ot = k(function (e) {\n        if (ze && Re.current) {\n          at();\n          var t = b(Re.current, e),\n            a = t[0],\n            i = t[1],\n            n = Ie(ze, Fe, a, i);\n          n && (null == we || we(n.data, e));\n        }\n      }, [at, Fe, we, ze]),\n      dt = k(function (e) {\n        if (ze && Re.current) {\n          var t = b(Re.current, e),\n            a = t[0],\n            i = t[1],\n            n = Ie(ze, Fe, a, i);\n          void 0 !== n && (null == Se || Se(j({}, n.data, {\n            color: n.color\n          }), e));\n        }\n      }, [Fe, Se, ze]);\n    return O(\"canvas\", {\n      ref: function (e) {\n        Re.current = e, We && \"current\" in We && (We.current = e);\n      },\n      width: De * Me,\n      height: Ae * Me,\n      style: {\n        width: De,\n        height: Ae,\n        cursor: pe ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: pe ? rt : void 0,\n      onMouseMove: pe ? rt : void 0,\n      onMouseLeave: pe ? ot : void 0,\n      onClick: pe ? dt : void 0\n    });\n  },\n  Ee = C(function (e, t) {\n    var a = e.isInteractive,\n      i = e.renderWrapper,\n      n = e.theme,\n      l = q(e, Be);\n    return O(d, {\n      isInteractive: a,\n      renderWrapper: i,\n      theme: n,\n      animate: !1,\n      children: O(Oe, j({}, l, {\n        canvasRef: t\n      }))\n    });\n  }),\n  Re = function (e) {\n    return O(g, {\n      children: function (t) {\n        var a = t.width,\n          i = t.height;\n        return O(Te, j({\n          width: a,\n          height: i\n        }, e));\n      }\n    });\n  },\n  He = C(function (e, t) {\n    return O(g, {\n      children: function (a) {\n        var i = a.width,\n          n = a.height;\n        return O(Ee, j({\n          width: i,\n          height: n\n        }, e, {\n          ref: t\n        }));\n      }\n    });\n  });\nexport { Te as Bar, Ee as BarCanvas, U as BarItem, $ as BarTooltip, Ve as BarTotals, Re as ResponsiveBar, He as ResponsiveBarCanvas, ae as canvasDefaultProps, ee as defaultProps, te as svgDefaultProps };","map":{"version":3,"names":["K","_","BarAnnotations","e","t","bars","a","annotations","i","W","data","getPosition","x","width","y","height","getDimensions","size","Math","max","O","E","children","map","T","j","J","BarLegends","legends","n","toggleSerie","l","r","o","H","containerWidth","containerHeight","dataFrom","Q","U","BarItem","bar","q","style","borderColor","d","color","u","c","labelColor","s","labelOpacity","h","labelX","f","labelY","b","transform","v","g","borderRadius","borderWidth","w","label","L","shouldRenderLabel","C","isInteractive","V","onClick","M","onMouseEnter","onMouseLeave","tooltip","B","isFocusable","I","ariaLabel","ariaLabelledBy","ariaDescribedBy","P","F","Y","X","showTooltipFromEvent","D","showTooltipAt","A","hideTooltip","G","S","z","k","N","absX","absY","R","m","rect","p","rx","ry","fill","strokeWidth","stroke","focusable","tabIndex","onMouseMove","onFocus","onBlur","text","textAnchor","dominantBaseline","fillOpacity","labels","pointerEvents","Z","$","BarTooltip","id","value","formattedValue","enableChip","ee","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","from","theme","colorBy","colors","scheme","tooltipLabel","indexValue","initialHiddenIds","markers","enableTotals","totalsOffset","te","layers","barComponent","defs","animate","motionConfig","role","ae","pixelRatio","window","devicePixelRatio","ie","getIndexScale","all","min","ne","normalizeData","reduce","le","filterNullValues","Object","re","coerceValue","Number","oe","de","gt","ue","lt","ce","range","Array","repeat","se","clampToZero","he","generateVerticalGroupedBars","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","forEach","domain","length","hidden","index","push","key","left","top","fe","generateHorizontalGroupedBars","be","generateGroupedBars","hiddenIds","filter","includes","concat","Boolean","apply","isFinite","bandwidth","ve","ge","some","isArray","me","generateVerticalStackedBars","stackedData","pe","generateHorizontalStackedBars","ye","generateStackedBars","offset","xe","getLegendData","direction","legendLabel","Se","updateTotalsByIndex","get","set","ke","updateTotalsPositivesByIndex","we","updateGreatestValueByIndex","Le","updateNumberOfBarsByIndex","Ce","useBar","valueFormat","indexOf","Ve","Me","We","Te","Be","Ie","Oe","Ee","Re","find","He","Pe","Map","animationOffset","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","barTotals","BarTotals","springConfig","enter","update","leave","config","immediate","initial","fontWeight","fontSize","fontFamily","alignmentBaseline","InnerBar","axisTop","axisRight","gridXValues","gridYValues","Fe","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","De","Ae","Ge","ze","Ne","je","qe","Ke","_e","Je","outerWidth","Qe","outerHeight","Ue","Ze","innerWidth","$e","innerHeight","et","tt","at","it","nt","rt","ot","dt","ut","ct","st","ht","ft","bt","vt","dataKey","targetKey","axes","grid","totals","right","bottom","xValues","yValues","mt","legendData","Bar","renderWrapper","findBarUnderCursor","InnerBarCanvas","renderBar","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","textBaseline","textAlign","fillText","canvasRef","current","getContext","scale","background","fillRect","translate","line","axis","values","font","save","ref","cursor","ResponsiveBar","BarCanvas","ResponsiveBarCanvas","canvasDefaultProps","defaultProps","svgDefaultProps"],"sources":["C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\BarAnnotations.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\BarLegends.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\BarItem.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\BarTooltip.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\props.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\compute\\common.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\compute\\grouped.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\compute\\stacked.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\compute\\legends.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\compute\\totals.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\hooks.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\BarTotals.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\Bar.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\BarCanvas.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\ResponsiveBar.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\bar\\src\\ResponsiveBarCanvas.tsx"],"sourcesContent":["import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { BarCanvasLayerId, BarLayerId, ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n\n    enableTotals: false,\n    totalsOffset: 10,\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'markers', 'legends', 'annotations'] as BarLayerId[],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'legends', 'annotations'] as BarCanvasLayerId[],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: readonly RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: readonly RawDatum[], keys: readonly string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: readonly RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport uniqBy from 'lodash/uniqBy'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { AnyScale, ScaleBand } from '@nivo/scales'\nimport { defaultProps } from '../props'\nimport { BarCommonProps, BarDatum, ComputedBarDatum } from '../types'\n\nexport interface BarTotalsData {\n    key: string\n    x: number\n    y: number\n    value: number\n    formattedValue: string\n    animationOffset: number\n}\n\nexport const computeBarTotals = <RawDatum extends BarDatum>(\n    bars: ComputedBarDatum<RawDatum>[],\n    xScale: ScaleBand<string> | AnyScale,\n    yScale: ScaleBand<string> | AnyScale,\n    layout: BarCommonProps<RawDatum>['layout'] = defaultProps.layout,\n    groupMode: BarCommonProps<RawDatum>['groupMode'] = defaultProps.groupMode,\n    totalsOffset: number,\n    formatValue: (value: number) => string\n) => {\n    const totals = [] as BarTotalsData[]\n\n    if (bars.length === 0) return totals\n\n    const totalsByIndex = new Map<string | number, number>()\n\n    const barWidth = bars[0].width\n    const barHeight = bars[0].height\n\n    if (groupMode === 'stacked') {\n        const totalsPositivesByIndex = new Map<string | number, number>()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateTotalsPositivesByIndex(totalsPositivesByIndex, indexValue, Number(value))\n        })\n\n        totalsPositivesByIndex.forEach((totalsPositive, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(totalsPositive)\n                animationOffset = yScale(totalsPositive / 2)\n            } else {\n                xPosition = xScale(totalsPositive)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(totalsPositive / 2)\n            }\n\n            xPosition += layout === 'vertical' ? barWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : barHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    } else if (groupMode === 'grouped') {\n        const greatestValueByIndex = new Map<string | number, number>()\n        const numberOfBarsByIndex = new Map()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateGreatestValueByIndex(greatestValueByIndex, indexValue, Number(value))\n            updateNumberOfBarsByIndex(numberOfBarsByIndex, indexValue)\n        })\n\n        greatestValueByIndex.forEach((greatestValue, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n            const numberOfBars = numberOfBarsByIndex.get(indexValue)\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(greatestValue)\n                animationOffset = yScale(greatestValue / 2)\n            } else {\n                xPosition = xScale(greatestValue)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(greatestValue / 2)\n            }\n\n            const indexBarsWidth = numberOfBars * barWidth\n            const indexBarsHeight = numberOfBars * barHeight\n\n            xPosition += layout === 'vertical' ? indexBarsWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : indexBarsHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    }\n    return totals\n}\n\n// this function is used to compute the total value for the indexes. The total value is later rendered on the chart\nexport const updateTotalsByIndex = (\n    totalsByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsByIndex.get(indexValue) || 0\n    totalsByIndex.set(indexValue, currentIndexValue + value)\n}\n\n// this function is used to compute only the positive values of the indexes. Useful to position the text right above the last stacked bar. It prevents overlapping in case of negative values\nexport const updateTotalsPositivesByIndex = (\n    totalsPositivesByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsPositivesByIndex.get(indexValue) || 0\n    totalsPositivesByIndex.set(indexValue, currentIndexValue + (value > 0 ? value : 0))\n}\n\n// this function is used to keep track of the highest value for the indexes. Useful to position the text above the longest grouped bar\nexport const updateGreatestValueByIndex = (\n    greatestValueByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentGreatestValue = greatestValueByIndex.get(indexValue) || 0\n    greatestValueByIndex.set(indexValue, Math.max(currentGreatestValue, Number(value)))\n}\n\n// this function is used to save the number of bars for the indexes. Useful to position the text in the middle of the grouped bars\nexport const updateNumberOfBarsByIndex = (\n    numberOfBarsByIndex: Map<string | number, number>,\n    indexValue: string | number\n) => {\n    const currentNumberOfBars = numberOfBarsByIndex.get(indexValue) || 0\n    numberOfBarsByIndex.set(indexValue, currentNumberOfBars + 1)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport { computeBarTotals } from './compute/totals'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n    totalsOffset = defaultProps.totalsOffset,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n    totalsOffset?: BarCommonProps<RawDatum>['totalsOffset']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    const barTotals = useMemo(\n        () => computeBarTotals(bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue),\n        [bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n    }\n}\n","import { useTheme } from '@nivo/core'\nimport { AnimationConfig, animated, useTransition } from '@react-spring/web'\nimport { BarCommonProps, BarDatum } from './types'\nimport { svgDefaultProps } from './props'\nimport { BarTotalsData } from './compute/totals'\n\ninterface Props<RawDatum extends BarDatum> {\n    data: BarTotalsData[]\n    springConfig: Partial<AnimationConfig>\n    animate: boolean\n    layout?: BarCommonProps<RawDatum>['layout']\n}\n\nexport const BarTotals = <RawDatum extends BarDatum>({\n    data,\n    springConfig,\n    animate,\n    layout = svgDefaultProps.layout,\n}: Props<RawDatum>) => {\n    const theme = useTheme()\n    const totalsTransition = useTransition<\n        BarTotalsData,\n        {\n            x: number\n            y: number\n            labelOpacity: number\n        }\n    >(data, {\n        keys: barTotal => barTotal.key,\n        from: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        enter: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        update: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        leave: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    return totalsTransition((style, barTotal) => (\n        <animated.text\n            key={barTotal.key}\n            x={style.x}\n            y={style.y}\n            fillOpacity={style.labelOpacity}\n            style={{\n                ...theme.labels.text,\n                pointerEvents: 'none',\n                fill: theme.text.fill,\n            }}\n            fontWeight=\"bold\"\n            fontSize={theme.labels.text.fontSize}\n            fontFamily={theme.labels.text.fontFamily}\n            textAnchor={layout === 'vertical' ? 'middle' : 'start'}\n            alignmentBaseline={layout === 'vertical' ? 'alphabetic' : 'middle'}\n        >\n            {barTotal.formattedValue}\n        </animated.text>\n    ))\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { useTransition } from '@react-spring/web'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarLegends } from './BarLegends'\nimport { useBar } from './hooks'\nimport { svgDefaultProps } from './props'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarTotals } from './BarTotals'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as readonly BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n\n    enableTotals = svgDefaultProps.enableTotals,\n    totalsOffset = svgDefaultProps.totalsOffset,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n        totalsOffset,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    if (layers.includes('totals') && enableTotals) {\n        layerById.totals = (\n            <BarTotals\n                key=\"totals\"\n                data={barTotals}\n                springConfig={springConfig}\n                animate={animate}\n                layout={layout}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    CompleteTheme,\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\nimport { BarTotalsData } from './compute/totals'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nfunction renderTotalsToCanvas<RawDatum extends BarDatum>(\n    ctx: CanvasRenderingContext2D,\n    barTotals: BarTotalsData[],\n    theme: CompleteTheme,\n    layout: BarCommonProps<RawDatum>['layout'] = canvasDefaultProps.layout\n) {\n    ctx.fillStyle = theme.text.fill\n    ctx.font = `bold ${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n    ctx.textBaseline = layout === 'vertical' ? 'alphabetic' : 'middle'\n    ctx.textAlign = layout === 'vertical' ? 'center' : 'start'\n\n    barTotals.forEach(barTotal => {\n        ctx.fillText(barTotal.formattedValue, barTotal.x, barTotal.y)\n    })\n}\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n\n    enableTotals = canvasDefaultProps.enableTotals,\n    totalsOffset = canvasDefaultProps.totalsOffset,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n        barTotals,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        totalsOffset,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    const formatValue = useValueFormatter(valueFormat)\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (layer === 'totals' && enableTotals) {\n                renderTotalsToCanvas(ctx, barTotals, theme, layout)\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n        barTotals,\n        enableTotals,\n        formatValue,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarSvgProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: ResponsiveBarSvgProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: ResponsiveBarCanvasProps<RawDatum>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAAA,CAAA;EAAMC,CAAA,GAAiB,SAAAC,CAAHC,CAAA;IAAwE,IAAvDC,CAAA,GAAID,CAAA,CAAJE,IAAA;MAAMC,CAAA,GAAWH,CAAA,CAAXI,WAAA;MACxCC,CAAA,GAAmBC,CAAA,CAAe;QACpCC,IAAA,EAAMN,CAAA;QACNG,WAAA,EAAAD,CAAA;QACAK,WAAA,EAAa,SAAAA,CAAAR,CAAA;UAAG,OAAK;YACjBS,CAAA,EAAGT,CAAA,CAAIS,CAAA,GAAIT,CAAA,CAAIU,KAAA,GAAQ;YACvBC,CAAA,EAAGX,CAAA,CAAIW,CAAA,GAAIX,CAAA,CAAIY,MAAA,GAAS;UAAA,CAC1B;QAAA;QACFC,aAAA,EAAe,SAAAA,CAAAb,CAAA;UAAA,IAAGC,CAAA,GAAMD,CAAA,CAANY,MAAA;YAAQT,CAAA,GAAKH,CAAA,CAALU,KAAA;UAAK,OAAQ;YACnCA,KAAA,EAAAP,CAAA;YACAS,MAAA,EAAAX,CAAA;YACAa,IAAA,EAAMC,IAAA,CAAKC,GAAA,CAAIb,CAAA,EAAOF,CAAA;UAAA,CACzB;QAAA;MAAA;IAGL,OACIgB,CAAA,CAAAC,CAAA;MAAAC,QAAA,EACKd,CAAA,CAAiBe,GAAA,CAAI,UAACpB,CAAA,EAAYC,CAAA;QAAC,OAChCgB,CAAA,CAACI,CAAA,EAAUC,CAAA,CAAa,IAAAtB,CAAA,GAAPC,CAAA;MAAA;IAAA,EAIjC;EAAA;ECfasB,CAAA,GAAa,SAAAC,CAAHxB,CAAA;IAAA,IAAMC,CAAA,GAAKD,CAAA,CAALU,KAAA;MAAOP,CAAA,GAAMH,CAAA,CAANY,MAAA;MAAQP,CAAA,GAAOL,CAAA,CAAPyB,OAAA;MAASC,CAAA,GAAW1B,CAAA,CAAX2B,WAAA;IAAW,OAC5DV,CAAA,CAAAC,CAAA;MAAAC,QAAA,EACKd,CAAA,CAAQe,GAAA,CAAI,UAAApB,CAAA,EAAiBK,CAAA;QAAC,IAAAuB,CAAA;UAAhBC,CAAA,GAAM7B,CAAA;UAAE8B,CAAA,GAAI9B,CAAA;QAAA,OACvBiB,CAAA,CAACc,CAAA,EAAYT,CAAA,KAELO,CAAA,EAAM;UACVG,cAAA,EAAgB/B,CAAA;UAChBgC,eAAA,EAAiB9B,CAAA;UACjBI,IAAA,EAAiB,SAAbqB,CAAA,GAAEC,CAAA,CAAOtB,IAAA,IAAIqB,CAAA,GAAIE,CAAA;UACrBH,WAAA,EACIE,CAAA,CAAOF,WAAA,IAAmC,WAApBE,CAAA,CAAOK,QAAA,GAAsBR,CAAA,QAAc;QAAA,IANhErB,CAAA;MAAA;IAAA,EAUd;EAAA;EAAA8B,CAAA;EClBMC,CAAA,GAAU,SAAAC,CAAHrC,CAAA;IAgCU,IAAAC,CAAA;MAAAE,CAAA,GAAAH,CAAA,CA/B1BsC,GAAA;MAAOjC,CAAA,GAAIF,CAAA,CAAJI,IAAA;MAASqB,CAAA,GAAGW,CAAA,CAAApC,CAAA,EAAAgC,CAAA;MAAAN,CAAA,GAAA7B,CAAA,CAEnBwC,KAAA;MACIV,CAAA,GAAWD,CAAA,CAAXY,WAAA;MACAC,CAAA,GAAKb,CAAA,CAALc,KAAA;MACAC,CAAA,GAAMf,CAAA,CAANjB,MAAA;MACAiC,CAAA,GAAUhB,CAAA,CAAViB,UAAA;MACAC,CAAA,GAAYlB,CAAA,CAAZmB,YAAA;MACAC,CAAA,GAAMpB,CAAA,CAANqB,MAAA;MACAC,CAAA,GAAMtB,CAAA,CAANuB,MAAA;MACAC,CAAA,GAASxB,CAAA,CAATyB,SAAA;MACAC,CAAA,GAAK1B,CAAA,CAALnB,KAAA;MAGJ8C,CAAA,GAAYxD,CAAA,CAAZyD,YAAA;MACA9C,CAAA,GAAWX,CAAA,CAAX0D,WAAA;MAEAC,CAAA,GAAK3D,CAAA,CAAL4D,KAAA;MACAC,CAAA,GAAiB7D,CAAA,CAAjB8D,iBAAA;MAEAC,CAAA,GAAa/D,CAAA,CAAbgE,aAAA;MACAC,CAAA,GAAOjE,CAAA,CAAPkE,OAAA;MACAC,CAAA,GAAYnE,CAAA,CAAZoE,YAAA;MACA9D,CAAA,GAAYN,CAAA,CAAZqE,YAAA;MAEAhD,CAAA,GAAOrB,CAAA,CAAPsE,OAAA;MAEAC,CAAA,GAAWvE,CAAA,CAAXwE,WAAA;MACAC,CAAA,GAASzE,CAAA,CAAT0E,SAAA;MACAxD,CAAA,GAAclB,CAAA,CAAd2E,cAAA;MACA5C,CAAA,GAAe/B,CAAA,CAAf4E,eAAA;MAEMC,CAAA,GAAQnD,CAAA;MACdoD,CAAA,GAA6DC,CAAA;MAArDC,CAAA,GAAoBF,CAAA,CAApBG,oBAAA;MAAsBC,CAAA,GAAaJ,CAAA,CAAbK,aAAA;MAAeC,CAAA,GAAWN,CAAA,CAAXO,WAAA;MAEvCC,CAAA,GAAgB7E,CAAA,CAClB;QAAA,OAAM;UAAA,OAAM8E,CAAA,CAAclE,CAAA,EAAOC,CAAA,KAAOM,CAAA,EAAQvB,CAAA,EAAO;QAAA;MAAA,GACvD,CAACgB,CAAA,EAASO,CAAA,EAAKvB,CAAA;MAGbmF,CAAA,GAAcC,CAAA,CAChB,UAACzF,CAAA;QACU,QAAPiE,CAAA,IAAAA,CAAA,CAAO3C,CAAA;UAAKqB,KAAA,EAAOf,CAAA,CAAIe;QAAA,GAAUtC,CAAA,GAAQL,CAAA,CAC5C;MAAA,GACD,CAAC4B,CAAA,EAAKvB,CAAA,EAAM4D,CAAA;MAEVyB,CAAA,GAAgBD,CAAA,CAClB,UAACzF,CAAA;QAAiC,OAAKgF,CAAA,CAAqBM,CAAA,IAAiBtF,CAAA,CAAM;MAAA,GACnF,CAACgF,CAAA,EAAsBM,CAAA;MAErBzF,CAAA,GAAmB4F,CAAA,CACrB,UAACzF,CAAA;QAAA,QACGmE,CAAA,IAAAA,CAAA,CAAe9D,CAAA,EAAML,CAAA,GACrBgF,CAAA,CAAqBM,CAAA,IAAiBtF,CAAA,CACzC;MAAA,GACD,CAACK,CAAA,EAAM8D,CAAA,EAAca,CAAA,EAAsBM,CAAA;MAEzCxF,CAAA,GAAmB2F,CAAA,CACrB,UAACzF,CAAA;QAAA,QACGM,CAAA,IAAAA,CAAA,CAAeD,CAAA,EAAML,CAAA,GACrBoF,CAAA,EACH;MAAA,GACD,CAAC/E,CAAA,EAAM+E,CAAA,EAAa9E,CAAA;MAIlBiB,CAAA,GAAckE,CAAA,CAAY;QAC5BP,CAAA,CAAcI,CAAA,IAAiB,CAAC1D,CAAA,CAAI+D,IAAA,GAAO/D,CAAA,CAAIlB,KAAA,GAAQ,GAAGkB,CAAA,CAAIgE,IAAA,EACjE;MAAA,GAAE,CAACV,CAAA,EAAeI,CAAA,EAAe1D,CAAA;MAC5BQ,CAAA,GAAaqD,CAAA,CAAY;QAC3BL,CAAA,EACJ;MAAA,GAAG,CAACA,CAAA;IAEJ,OACIS,CAAA,CAACC,CAAA,CAAStC,CAAA,EAAC;MAACF,SAAA,EAAWD,CAAA;MAAUlC,QAAA,EAC7B,CAAAF,CAAA,CAAC6E,CAAA,CAASC,IAAA,EAAI;QACVrF,KAAA,EAAOsF,CAAA,CAAGzC,CAAA,EAAO,UAAAvD,CAAA;UAAK,OAAIe,IAAA,CAAKC,GAAA,CAAIhB,CAAA,EAAO;QAAA;QAC1CY,MAAA,EAAQoF,CAAA,CAAGpD,CAAA,EAAQ,UAAA5C,CAAA;UAAK,OAAIe,IAAA,CAAKC,GAAA,CAAIhB,CAAA,EAAO;QAAA;QAC5CiG,EAAA,EAAIzC,CAAA;QACJ0C,EAAA,EAAI1C,CAAA;QACJ2C,IAAA,EAAe,SAAXlG,CAAA,GAAEI,CAAA,CAAK8F,IAAA,IAAIlG,CAAA,GAAIyC,CAAA;QACnB0D,WAAA,EAAazF,CAAA;QACb0F,MAAA,EAAQvE,CAAA;QACRwE,SAAA,EAAW/B,CAAA;QACXgC,QAAA,EAAUhC,CAAA,GAAc,SAAI;QAC5B,cAAYE,CAAA,GAAYA,CAAA,CAAUpE,CAAA,SAAQ;QAC1C,mBAAiBa,CAAA,GAAiBA,CAAA,CAAeb,CAAA,SAAQ;QACzD,oBAAkB0B,CAAA,GAAkBA,CAAA,CAAgB1B,CAAA,SAAQ;QAC5D+D,YAAA,EAAcL,CAAA,GAAgBlE,CAAA,QAAmB;QACjD2G,WAAA,EAAazC,CAAA,GAAgB2B,CAAA,QAAgB;QAC7CrB,YAAA,EAAcN,CAAA,GAAgBjE,CAAA,QAAmB;QACjDoE,OAAA,EAASH,CAAA,GAAgByB,CAAA,QAAc;QACvCiB,OAAA,EAAS1C,CAAA,IAAiBQ,CAAA,GAAchD,CAAA,QAAc;QACtDmF,MAAA,EAAQ3C,CAAA,IAAiBQ,CAAA,GAAcnC,CAAA,QAAa;MAAA,IAEvDyB,CAAA,IACG5C,CAAA,CAAC6E,CAAA,CAASa,IAAA,EAAI;QACVlG,CAAA,EAAGwC,CAAA;QACHtC,CAAA,EAAGwC,CAAA;QACHyD,UAAA,EAAW;QACXC,gBAAA,EAAiB;QACjBC,WAAA,EAAa/D,CAAA;QACbP,KAAA,EAAKlB,CAAA,KACEuD,CAAA,CAAMkC,MAAA,CAAOJ,IAAA,EAAI;UACpBK,aAAA,EAAe;UACfb,IAAA,EAAMtD;QAAA;QACR1B,QAAA,EAEDwC;MAAA;IAAA,EAKrB;EAAA;EAAAsD,CAAA;ECrHaC,CAAA,GAAa,SAAAC,CAAHnH,CAAA;IAAwE,IAAvDC,CAAA,GAAKD,CAAA,CAAL2C,KAAA;MAAOxC,CAAA,GAAKH,CAAA,CAAL4D,KAAA;MAAUvD,CAAA,GAAIkC,CAAA,CAAAvC,CAAA,EAAAiH,CAAA;IACzD,OAAOhG,CAAA,CAACiE,CAAA,EAAY;MAACkC,EAAA,EAAIjH,CAAA;MAAOkH,KAAA,EAAOhH,CAAA,CAAKiH,cAAA;MAAgBC,UAAA,GAAY;MAAM5E,KAAA,EAAO1C;IAAA,EACzF;EAAA;ECCauH,EAAA,GAAe;IACxBC,OAAA,EAAS;IACTC,IAAA,EAAM,CAAC;IAEPC,SAAA,EAAW;IACXC,MAAA,EAAQ;IACRC,OAAA,GAAS;IAETC,QAAA,EAAU;IACVC,QAAA,EAAU;IAEVC,UAAA,EAAY;MAAEC,IAAA,EAAM;IAAA;IACpBC,UAAA,EAAY;MAAED,IAAA,EAAM;MAAQE,KAAA,GAAO;IAAA;IAEnCC,OAAA,EAAS;IACTC,YAAA,EAAc;IAEdC,UAAA,EAAY,CAAE;IACdC,QAAA,EAAU,CAAE;IACZC,WAAA,GAAa;IACbC,WAAA,GAAa;IAEbC,WAAA,GAAa;IACb9E,KAAA,EAAO;IACP+E,cAAA,EAAgB;IAChBC,eAAA,EAAiB;IACjBC,cAAA,EAAgB;MAAEC,IAAA,EAAM;MAASC,KAAA,EAAO;IAAA;IAExCC,OAAA,EAAS;IACTC,MAAA,EAAQ;MAAEC,MAAA,EAAQ;IAAA;IAElBzF,YAAA,EAAc;IACdC,WAAA,EAAa;IACbjB,WAAA,EAAa;MAAEqG,IAAA,EAAM;IAAA;IAErB9E,aAAA,GAAe;IACfM,OAAA,EAAS4C,CAAA;IACTiC,YAAA,EAAc,SAAAA,CAAWnJ,CAAA;MAA8B,OAAQA,CAAA,CAAMoH,EAAA,GAAQ,QAAApH,CAAA,CAAMoJ,UAAY;IAAA;IAE/F3H,OAAA,EAAS;IACT4H,gBAAA,EAAkB;IAClBjJ,WAAA,EAAa;IACbkJ,OAAA,EAAS;IAETC,YAAA,GAAc;IACdC,YAAA,EAAc;EAAA;EAGLC,EAAA,GAAenI,CAAA,KACrBkG,EAAA,EAAY;IACfkC,MAAA,EAAQ,CAAC,QAAQ,QAAQ,QAAQ,UAAU,WAAW,WAAW;IACjEC,YAAA,EAAcvH,CAAA;IAEdwH,IAAA,EAAM;IACNzD,IAAA,EAAM;IAEN0D,OAAA,GAAS;IACTC,YAAA,EAAc;IAEdC,IAAA,EAAM;IACNvF,WAAA,GAAa;EAAA;EAGJwF,EAAA,GAAkB1I,CAAA,KACxBkG,EAAA,EAAY;IACfkC,MAAA,EAAQ,CAAC,QAAQ,QAAQ,QAAQ,UAAU,WAAW;IAEtDO,UAAA,EAA8B,sBAAXC,MAAA,IAAgD,SAA1BrK,CAAA,GAAGqK,MAAA,CAAOC,gBAAA,IAAgBtK,CAAA,GAAQ;EAAA;ECpElEuK,EAAA,GAAgB,SAAAC,CACzBrK,CAAA,EACAC,CAAA,EACAE,CAAA,EACAE,CAAA,EACAqB,CAAA,EACAE,CAAA;IAEA,OACIwD,CAAA,CACI/E,CAAA,EACA;MAAEiK,GAAA,EAAKtK,CAAA,CAAKoB,GAAA,CAAInB,CAAA;MAAWsK,GAAA,EAAK;MAAGvJ,GAAA,EAAK;IAAA,GACxCU,CAAA,EACAE,CAAA,EAENwG,OAAA,CAAQjI,CAAA,CACd;EAAA;EAKaqK,EAAA,GAAgB,SAAAC,CAAWzK,CAAA,EAA2BC,CAAA;IAAuB,OACtFD,CAAA,CAAKoB,GAAA,CACD,UAAApB,CAAA;MAAI,OAAAsB,CAAA,CAEO,IAAArB,CAAA,CAAKyK,MAAA,CAAgC,UAAC1K,CAAA,EAAKC,CAAA;QAE1C,OADAD,CAAA,CAAIC,CAAA,IAAO,MACJD,CACX;MAAA,GAAG,CAAE,IACFA,CAAA,CAAI;IAAA,EAElB;EAAA;EAEQ2K,EAAA,GAAmB,SAAAC,CAA2C5K,CAAA;IAAc,OACrF6K,MAAA,CAAOnD,IAAA,CAAK1H,CAAA,EAAM0K,MAAA,CAAgC,UAACzK,CAAA,EAAKE,CAAA;MAIpD,OAHIH,CAAA,CAAKG,CAAA,MACLF,CAAA,CAAIE,CAAA,IAAOH,CAAA,CAAKG,CAAA,IAEbF,CACV;IAAA,GAAE,CAAE,EAAC;EAAA;EAEG6K,EAAA,GAAc,SAAAC,CAAI/K,CAAA;IAAQ,OAAK,CAACA,CAAA,EAAOgL,MAAA,CAAOhL,CAAA,EAAO;EAAA;EAAAiL,EAAA;EC3B5DC,EAAA,GAAK,SAAAC,CAACnL,CAAA,EAAeC,CAAA;IAAa,OAAKD,CAAA,GAAQC,CAAK;EAAA;EACpDmL,EAAA,GAAK,SAAAC,CAACrL,CAAA,EAAeC,CAAA;IAAa,OAAKD,CAAA,GAAQC,CAAK;EAAA;EAEpDqL,EAAA,GAAQ,SAAAC,CAACvL,CAAA,EAAeC,CAAA;IAAW,OACrCuL,KAAA,CAAM1C,IAAA,CAAK,IAAI2C,MAAA,CAAOxL,CAAA,GAAMD,CAAA,GAAQ,UAACC,CAAA,EAAGE,CAAA;MAAK,OAAKH,CAAA,GAAQG,CAAA;IAAA,EAAM;EAAA;EAE9DuL,EAAA,GAAc,SAAAC,CAAC3L,CAAA;IAAa,OAAMkL,EAAA,CAAGlL,CAAA,EAAO,KAAK,IAAIA,CAAK;EAAA;EAM1D4L,EAAA,GAA8B,SAAAC,CAAH7L,CAAA,EAa7BC,CAAA,EACAE,CAAA,EACAE,CAAA;IAC+B,IAd3BqB,CAAA,GAAI1B,CAAA,CAAJO,IAAA;MACAqB,CAAA,GAAW5B,CAAA,CAAX8L,WAAA;MACAjK,CAAA,GAAQ7B,CAAA,CAAR+L,QAAA;MACAjK,CAAA,GAAQ9B,CAAA,CAARgM,QAAA;MACAtJ,CAAA,GAAe1C,CAAA,CAAfiM,eAAA;MAAerJ,CAAA,GAAA5C,CAAA,CACfqI,YAAA;MAAAxF,CAAA,QAAe,MAAHD,CAAA,GAAG,IAACA,CAAA;MAChBG,CAAA,GAAI/C,CAAA,CAAJ0H,IAAA;MACAzE,CAAA,GAAMjD,CAAA,CAANkM,MAAA;MACA/I,CAAA,GAAMnD,CAAA,CAANmM,MAAA;MACA9I,CAAA,GAAMrD,CAAA,CAANoM,MAAA;MAME7I,CAAA,GAAUpD,CAAA,GAAUiL,EAAA,GAAKF,EAAA;MAGzB1H,CAAA,GAAc9B,CAAA,CAAKN,GAAA,CAAIuJ,EAAA;MAEvB7E,CAAA,GAAqC;IAkC3C,OAjCA/C,CAAA,CAAKsJ,OAAA,CAAQ,UAACrM,CAAA,EAAKG,CAAA;MAAC,OAChBmL,EAAA,CAAM,GAAGrI,CAAA,CAAOqJ,MAAA,GAASC,MAAA,EAAQF,OAAA,CAAQ,UAAAzJ,CAAA;QAAS,IAAAG,CAAA;UANxCiD,CAAA;UAASrF,CAAA;UAOfF,CAAA,GAA0BqK,EAAA,CAAYpJ,CAAA,CAAKkB,CAAA,EAAO5C,CAAA;UAA3CuF,CAAA,GAAQ9E,CAAA;UAAEgF,CAAA,GAAKhF,CAAA;UAChBkD,CAAA,GAAa7B,CAAA,CAASJ,CAAA,CAAKkB,CAAA;UAC3BiB,CAAA,IAAuB,SAAnBd,CAAA,GAACE,CAAA,CAAOU,CAAA,KAAWZ,CAAA,GAAI,KAAK9C,CAAA,GAAWE,CAAA,GAAI0C,CAAA,GAAe1C,CAAA;UAC9D4D,CAAA,GAVeR,CAAA,CAAfyC,CAAA,GAUSP,CAAA,EAViB,KAAc,SAAZ9E,CAAA,GAAGwC,CAAA,CAAO6C,CAAA,KAAErF,CAAA,GAAI,IAAIN,CAAA;UAWhD4D,CAAA,GAVI,UAACjE,CAAA,EAAWC,CAAA;YAAS,IAAAE,CAAA;YAAA,OAAMoD,CAAA,CAAQvD,CAAA,EAAG,KAAKK,CAAA,GAAOJ,CAAA,aAAIE,CAAA,GAACgD,CAAA,CAAOnD,CAAA,KAAEG,CAAA,GAAI,KAAKE,CAAA;UAAA,CAUjE,CAAUoF,CAAA,EAAO1B,CAAA;UAC7BI,CAAA,GAAmC;YACrCiD,EAAA,EAAIpH,CAAA;YACJqH,KAAA,EAAoB,SAAb9B,CAAA,GAAoBA,CAAA,GAAWE,CAAA;YACtC6B,cAAA,EAAgB1F,CAAA,CAAY6D,CAAA;YAC5B+G,MAAA,GAAQ;YACRC,KAAA,EAAA7J,CAAA;YACAwG,UAAA,EAAAzF,CAAA;YACApD,IAAA,EAAMiD,CAAA,CAAYZ,CAAA;UAAA;QAGtBkD,CAAA,CAAK4G,IAAA,CAAK;UACNC,GAAA,EAAQ3M,CAAA,GAAO,MAAAmE,CAAA,CAAQiF,UAAA;UACvBqD,KAAA,EAAO3G,CAAA,CAAKyG,MAAA;UACZhM,IAAA,EAAM4D,CAAA;UACN1D,CAAA,EAAAoD,CAAA;UACAlD,CAAA,EAAAoD,CAAA;UACA4B,IAAA,EAAMtC,CAAA,CAAOuJ,IAAA,GAAO/I,CAAA;UACpB+B,IAAA,EAAMvC,CAAA,CAAOwJ,GAAA,GAAM9I,CAAA;UACnBrD,KAAA,EAAOT,CAAA;UACPW,MAAA,EAAQqD,CAAA;UACRtB,KAAA,EAAOd,CAAA,CAASsC,CAAA;UAChBP,KAAA,EAAOlB,CAAA,CAAgByB,CAAA;QAAA,EAE/B;MAAA,EAAE;IAAA,IAGC2B,CACX;EAAA;EAKMgH,EAAA,GAAgC,SAAAC,CAAH/M,CAAA,EAa/BC,CAAA,EACAE,CAAA,EACAE,CAAA;IAC+B,IAd3BqB,CAAA,GAAI1B,CAAA,CAAJO,IAAA;MACAqB,CAAA,GAAW5B,CAAA,CAAX8L,WAAA;MACAjK,CAAA,GAAQ7B,CAAA,CAARgM,QAAA;MACAlK,CAAA,GAAQ9B,CAAA,CAAR+L,QAAA;MACArJ,CAAA,GAAe1C,CAAA,CAAfiM,eAAA;MACArJ,CAAA,GAAI5C,CAAA,CAAJ0H,IAAA;MAAI7E,CAAA,GAAA7C,CAAA,CACJqI,YAAA;MAAAtF,CAAA,QAAe,MAAHF,CAAA,GAAG,IAACA,CAAA;MAChBI,CAAA,GAAMjD,CAAA,CAANkM,MAAA;MACA/I,CAAA,GAAMnD,CAAA,CAANmM,MAAA;MACA9I,CAAA,GAAMrD,CAAA,CAANoM,MAAA;MAME7I,CAAA,GAAUpD,CAAA,GAAUiL,EAAA,GAAKF,EAAA;MAGzB1H,CAAA,GAAc9B,CAAA,CAAKN,GAAA,CAAIuJ,EAAA;MAEvB7E,CAAA,GAAqC;IAkC3C,OAjCAlD,CAAA,CAAKyJ,OAAA,CAAQ,UAACrM,CAAA,EAAKG,CAAA;MAAC,OAChBmL,EAAA,CAAM,GAAGnI,CAAA,CAAOmJ,MAAA,GAASC,MAAA,EAAQF,OAAA,CAAQ,UAAAzJ,CAAA;QAAS,IAAAC,CAAA;UANxCmD,CAAA;UAASrF,CAAA;UAOfF,CAAA,GAA0BqK,EAAA,CAAYpJ,CAAA,CAAKkB,CAAA,EAAO5C,CAAA;UAA3CuF,CAAA,GAAQ9E,CAAA;UAAEgF,CAAA,GAAKhF,CAAA;UAChBkD,CAAA,GAAa9B,CAAA,CAASH,CAAA,CAAKkB,CAAA;UAC3BiB,CAAA,GATeN,CAAA,CAAfyC,CAAA,GASSP,CAAA,EATiB,KAAKpF,CAAA,GAAgB,SAAZM,CAAA,GAAGsC,CAAA,CAAO+C,CAAA,KAAErF,CAAA,GAAI;UAUnDoD,CAAA,IAAuB,SAAnBlB,CAAA,GAACM,CAAA,CAAOQ,CAAA,KAAWd,CAAA,GAAI,KAAK5C,CAAA,GAAYE,CAAA,GAAI4C,CAAA,GAAe5C,CAAA;UAC/D8D,CAAA,GAVG,UAACjE,CAAA,EAAWC,CAAA;YAAS,IAAAE,CAAA;YAAA,OAAMoD,CAAA,CAAQvD,CAAA,EAAG,MAAe,SAAVG,CAAA,GAAC8C,CAAA,CAAOjD,CAAA,KAAEG,CAAA,GAAI,KAAKE,CAAA,GAAOA,CAAA,GAAOJ,CAAA;UAAA,CAUpE,CAASwF,CAAA,EAAO5B,CAAA;UAC3BM,CAAA,GAAmC;YACrCiD,EAAA,EAAIpH,CAAA;YACJqH,KAAA,EAAoB,SAAb9B,CAAA,GAAoBA,CAAA,GAAWE,CAAA;YACtC6B,cAAA,EAAgB1F,CAAA,CAAY6D,CAAA;YAC5B+G,MAAA,GAAQ;YACRC,KAAA,EAAA7J,CAAA;YACAwG,UAAA,EAAAzF,CAAA;YACApD,IAAA,EAAMiD,CAAA,CAAYZ,CAAA;UAAA;QAGtBkD,CAAA,CAAK4G,IAAA,CAAK;UACNC,GAAA,EAAQ3M,CAAA,GAAO,MAAAmE,CAAA,CAAQiF,UAAA;UACvBqD,KAAA,EAAO3G,CAAA,CAAKyG,MAAA;UACZhM,IAAA,EAAM4D,CAAA;UACN1D,CAAA,EAAAoD,CAAA;UACAlD,CAAA,EAAAoD,CAAA;UACA4B,IAAA,EAAMtC,CAAA,CAAOuJ,IAAA,GAAO/I,CAAA;UACpB+B,IAAA,EAAMvC,CAAA,CAAOwJ,GAAA,GAAM9I,CAAA;UACnBrD,KAAA,EAAOuD,CAAA;UACPrD,MAAA,EAAQX,CAAA;UACR0C,KAAA,EAAOb,CAAA,CAASqC,CAAA;UAChBP,KAAA,EAAOlB,CAAA,CAAgByB,CAAA;QAAA,EAE/B;MAAA,EAAE;IAAA,IAGC2B,CACX;EAAA;EAKakH,EAAA,GAAsB,SAAAC,CAAHjN,CAAA;IAkC1B,IAAAC,CAAA;MAnKmBE,CAAA;MAkIrBE,CAAA,GAAML,CAAA,CAAN4H,MAAA;MACAlG,CAAA,GAAQ1B,CAAA,CAAR8H,QAAA;MACAlG,CAAA,GAAQ5B,CAAA,CAAR+H,QAAA;MACAlG,CAAA,GAAO7B,CAAA,CAAP6H,OAAA;MACA/F,CAAA,GAAK9B,CAAA,CAALU,KAAA;MACAgC,CAAA,GAAM1C,CAAA,CAANY,MAAA;MAAMgC,CAAA,GAAA5C,CAAA,CACNoI,OAAA;MAAAvF,CAAA,QAAU,MAAHD,CAAA,GAAG,IAACA,CAAA;MAAAG,CAAA,GAAA/C,CAAA,CACXqI,YAAA;MAAApF,CAAA,QAAe,MAAHF,CAAA,GAAG,IAACA,CAAA;MAChBI,CAAA,GAAUnD,CAAA,CAAVgI,UAAA;MACY3E,CAAA,GAAgBrD,CAAA,CAA5BkI,UAAA;MAAU3E,CAAA,GAAAvD,CAAA,CACVkN,SAAA;MAAA1J,CAAA,QAAY,MAAHD,CAAA,GAAG,KAAEA,CAAA;MACXuC,CAAA,GAAKvD,CAAA,CAAAvC,CAAA,EAAAiL,EAAA;MAuBFjF,CAAA,GAAOF,CAAA,CAAM4B,IAAA,CAAKyF,MAAA,CAAO,UAAAnN,CAAA;QAAG,QAAKwD,CAAA,CAAU4J,QAAA,CAASpN,CAAA;MAAA;MACpDW,CAAA,GAAO6J,EAAA,CAAc1E,CAAA,CAAMvF,IAAA,EAAMyF,CAAA;MACvCvF,CAAA,GACe,eAAXJ,CAAA,GAAyB,CAAC,KAAK,KAAKyB,CAAA,IAAoB,CAAC,KAAK,KAAKY,CAAA;MADhE6C,CAAA,GAAI9E,CAAA;MAAEgF,CAAA,GAAShF,CAAA;MAAEkD,CAAA,GAAIlD,CAAA;MAEtBoD,CAAA,GAAauG,EAAA,CACfzJ,CAAA,EACAmF,CAAA,CAAMkG,QAAA,EACNnJ,CAAA,EACAQ,CAAA,EACAM,CAAA,EACA8B,CAAA;MAGE1B,CAAA,GAASzC,CAAA;QACXN,GAAA,EAAKY,CAAA;QACL2I,GAAA,EAAK7I,CAAA;QACLmG,OAAA,EAAAhG;MAAA,GACGsB,CAAA;MAGDc,CAAA,GAA6B,WAAlBF,CAAA,CAAUwG,GAAA,GAAiBmB,EAAA,GAAc,UAAC1L,CAAA;QAAa,OAAKA,CAAK;MAAA;MAE5EmE,CAAA,GAASxD,CAAA,CACV+J,MAAA,CAAiB,UAAC1K,CAAA,EAAKC,CAAA;QAAK,UAAAoN,MAAA,CAASrN,CAAA,EAAQgG,CAAA,CAAK5E,GAAA,CAAI,UAAApB,CAAA;UAAC,OAAIC,CAAA,CAAMD,CAAA,CAAY;QAAA,GAAE;MAAA,GAAE,IACjFmN,MAAA,CAAOG,OAAA;MACNhN,CAAA,GAAM2D,CAAA,CAASlD,IAAA,CAAKwJ,GAAA,CAAGgD,KAAA,CAARxM,IAAA,EAAYoD,CAAA;MAC3B9C,CAAA,IA9LelB,CAAA,GA8LOY,IAAA,CAAKC,GAAA,CAAGuM,KAAA,CAARxM,IAAA,EAAYoD,CAAA,GA9LAqJ,QAAA,CAASrN,CAAA,IAASA,CAAA,GAAQ;MAgM5DoE,CAAA,GAAQa,CAAA,CACVrB,CAAA,EACA;QAAEuG,GAAA,EAAKnG,CAAA;QAAQoG,GAAA,EAAAjK,CAAA;QAAKU,GAAA,EAAAK;MAAA,GACX,QAATkE,CAAA,GAAezD,CAAA,GAAQY,CAAA,EACvB6C,CAAA;MAGJd,CAAA,GAAoC,eAAXpE,CAAA,GAAwB,CAACwD,CAAA,EAAYU,CAAA,IAAS,CAACA,CAAA,EAAOV,CAAA;MAAxE5C,CAAA,GAAMwD,CAAA;MAAEvD,CAAA,GAAMuD,CAAA;MAEfoB,CAAA,IAAahC,CAAA,CAAW4J,SAAA,KAAcxK,CAAA,IAAgB+C,CAAA,CAAKuG,MAAA,GAAS,MAAMvG,CAAA,CAAKuG,MAAA;MAC/ExK,CAAA,GAAS,CAAAT,CAAA,KACNwE,CAAA,EAAK;QAAEvF,IAAA,EAAAI,CAAA;QAAM+G,IAAA,EAAA1B,CAAA;QAAMqC,YAAA,EAAApF,CAAA;QAAciJ,MAAA,EAAAjL,CAAA;QAAQkL,MAAA,EAAAjL;MAAA,IAC9C2E,CAAA,EACA9B,CAAA,CAAU8D,OAAA,EACF,SADS5H,CAAA,GACjBsE,CAAA,CAAM,MAAEtE,CAAA,GAAI;IAUhB,OAAO;MAAEiM,MAAA,EAAAjL,CAAA;MAAQkL,MAAA,EAAAjL,CAAA;MAAQhB,IAAA,EANrB2F,CAAA,GAAY,IACK,eAAXxF,CAAA,GACIuL,EAAA,CAA2B2B,KAAA,MAAI,GAAAxL,CAAA,IAC/B+K,EAAA,CAA6BS,KAAA,MAAI,GAAAxL,CAAA,IACrC;IAAA,CAGd;EAAA;EAAA2L,EAAA;EC9NMC,EAAA,GAAc,SAAd3N,EAAkBC,CAAA;IAAQ,IAAAE,CAAA;IAAA,OAC5BF,CAAA,CAAI2N,IAAA,CAAKpC,KAAA,CAAMqC,OAAA,IAAW7N,CAAA,EAAYG,CAAA,GAAC,IAAWkN,MAAA,CAAME,KAAA,CAAApN,CAAA,EAAIF,CAAA,KAASA,CAAoB;EAAA;EAQvF6N,EAAA,GAA8B,SAAAC,CAAH/N,CAAA,EAY7BC,CAAA,EACAE,CAAA;IAC+B,IAZ3BE,CAAA,GAAWL,CAAA,CAAX8L,WAAA;MACApK,CAAA,GAAQ1B,CAAA,CAAR+L,QAAA;MACAnK,CAAA,GAAQ5B,CAAA,CAARgM,QAAA;MACAnK,CAAA,GAAe7B,CAAA,CAAfiM,eAAA;MACAnK,CAAA,GAAY9B,CAAA,CAAZqI,YAAA;MACA3F,CAAA,GAAW1C,CAAA,CAAXgO,WAAA;MACApL,CAAA,GAAM5C,CAAA,CAANkM,MAAA;MACArJ,CAAA,GAAM7C,CAAA,CAANmM,MAAA;MACApJ,CAAA,GAAM/C,CAAA,CAANoM,MAAA;MAQEnJ,CAAA,GAAqC;IAmC3C,OAlCAP,CAAA,CAAY2J,OAAA,CAAQ,UAAArM,CAAA;MAAe,OAC/B4C,CAAA,CAAO0J,MAAA,GAASD,OAAA,CAAQ,UAAC3J,CAAA,EAAOS,CAAA;QAAM,IAAAE,CAAA;UAAAE,CAAA;UAC5BC,CAAA,GAAIxD,CAAA,CAAgBmD,CAAA;UACpB2C,CAAA,GAA4B,SAA3BzC,CAAA,GAAGT,CAAA,CAAOhB,CAAA,CAAS4B,CAAA,CAAEjD,IAAA,MAAM8C,CAAA,GAAI;UAChC2C,CAAA,IAAY,SAARzC,CAAA,GARL,UAACvD,CAAA;YAAuB,OAAK6C,CAAA,CAAO7C,CAAA,CAAEG,CAAA,GAAU,IAAI,GAAG;UAAA,CAQjD,CAAKqD,CAAA,KAAED,CAAA,GAAI,KAAoB,KAAfzB,CAAA;UACrBnB,CAAA,GARI,UAACX,CAAA,EAAyBC,CAAA;YAAS,IAAAI,CAAA;YAAA,QAAgC,SAA3BA,CAAA,GAACwC,CAAA,CAAO7C,CAAA,CAAEG,CAAA,GAAU,IAAI,OAAGE,CAAA,GAAI,KAAKJ,CAAC;UAAA,CAQrE,CAAUuD,CAAA,EAAGwC,CAAA,IAAKlE,CAAA;UACpCrB,CAAA,GAA0BqK,EAAA,CAAYtH,CAAA,CAAEjD,IAAA,CAAKP,CAAA,CAAgB2M,GAAA;UAAtDpH,CAAA,GAAQ9E,CAAA;UAAEgF,CAAA,GAAKhF,CAAA;UAEhBkD,CAAA,GAAmC;YACrCyD,EAAA,EAAIpH,CAAA,CAAgB2M,GAAA;YACpBtF,KAAA,EAAoB,SAAb9B,CAAA,GAAoBA,CAAA,GAAWE,CAAA;YACtC6B,cAAA,EAAgBjH,CAAA,CAAYoF,CAAA;YAC5B+G,MAAA,GAAQ;YACRC,KAAA,EAAOtJ,CAAA;YACPiG,UAAA,EAAY1G,CAAA;YACZnC,IAAA,EAAMoK,EAAA,CAAiBnH,CAAA,CAAEjD,IAAA;UAAA;QAG7B0C,CAAA,CAAKyJ,IAAA,CAAK;UACNC,GAAA,EAAQ3M,CAAA,CAAgB2M,GAAA,SAAOjK,CAAA;UAC/B+J,KAAA,EAAOxJ,CAAA,CAAKsJ,MAAA;UACZhM,IAAA,EAAMoD,CAAA;UACNlD,CAAA,EAAAqF,CAAA;UACAnF,CAAA,EAAAqF,CAAA;UACAL,IAAA,EAAM5C,CAAA,CAAO6J,IAAA,GAAO9G,CAAA;UACpBF,IAAA,EAAM7C,CAAA,CAAO8J,GAAA,GAAM7G,CAAA;UACnBtF,KAAA,EAAOT,CAAA;UACPW,MAAA,EAAQD,CAAA;UACRgC,KAAA,EAAOjB,CAAA,CAASiC,CAAA;UAChBC,KAAA,EAAO/B,CAAA,CAAgB8B,CAAA;QAAA,EAE/B;MAAA,EAAE;IAAA,IAGCV,CACX;EAAA;EAKMgL,EAAA,GAAgC,SAAAC,CAAHlO,CAAA,EAY/BC,CAAA,EACAE,CAAA;IAC+B,IAZ3BE,CAAA,GAAWL,CAAA,CAAX8L,WAAA;MACApK,CAAA,GAAQ1B,CAAA,CAAR+L,QAAA;MACAnK,CAAA,GAAQ5B,CAAA,CAARgM,QAAA;MACAnK,CAAA,GAAe7B,CAAA,CAAfiM,eAAA;MACAnK,CAAA,GAAY9B,CAAA,CAAZqI,YAAA;MACA3F,CAAA,GAAW1C,CAAA,CAAXgO,WAAA;MACApL,CAAA,GAAM5C,CAAA,CAANkM,MAAA;MACArJ,CAAA,GAAM7C,CAAA,CAANmM,MAAA;MACApJ,CAAA,GAAM/C,CAAA,CAANoM,MAAA;MAQEnJ,CAAA,GAAqC;IAmC3C,OAlCAP,CAAA,CAAY2J,OAAA,CAAQ,UAAArM,CAAA;MAAe,OAC/B6C,CAAA,CAAOyJ,MAAA,GAASD,OAAA,CAAQ,UAAC3J,CAAA,EAAOS,CAAA;QAAM,IAAAE,CAAA;UAAAE,CAAA;UAC5BC,CAAA,GAAIxD,CAAA,CAAgBmD,CAAA;UACpB2C,CAAA,GAA4B,SAA3BzC,CAAA,GAAGR,CAAA,CAAOjB,CAAA,CAAS4B,CAAA,CAAEjD,IAAA,MAAM8C,CAAA,GAAI;UAChC2C,CAAA,IAAY,SAARzC,CAAA,GARL,UAACvD,CAAA;YAAuB,OAAK4C,CAAA,CAAO5C,CAAA,CAAEG,CAAA,GAAU,IAAI,GAAG;UAAA,CAQjD,CAAKqD,CAAA,KAAED,CAAA,GAAI,KAAoB,KAAfzB,CAAA;UACrBnB,CAAA,GARG,UAACX,CAAA,EAAyBC,CAAA;YAAS,IAAAI,CAAA;YAAA,QAAgC,SAA3BA,CAAA,GAACuC,CAAA,CAAO5C,CAAA,CAAEG,CAAA,GAAU,IAAI,OAAGE,CAAA,GAAI,KAAKJ,CAAC;UAAA,CAQrE,CAASuD,CAAA,EAAGwC,CAAA,IAAKlE,CAAA;UAClCrB,CAAA,GAA0BqK,EAAA,CAAYtH,CAAA,CAAEjD,IAAA,CAAKP,CAAA,CAAgB2M,GAAA;UAAtDpH,CAAA,GAAQ9E,CAAA;UAAEgF,CAAA,GAAKhF,CAAA;UAEhBkD,CAAA,GAAmC;YACrCyD,EAAA,EAAIpH,CAAA,CAAgB2M,GAAA;YACpBtF,KAAA,EAAoB,SAAb9B,CAAA,GAAoBA,CAAA,GAAWE,CAAA;YACtC6B,cAAA,EAAgBjH,CAAA,CAAYoF,CAAA;YAC5B+G,MAAA,GAAQ;YACRC,KAAA,EAAOtJ,CAAA;YACPiG,UAAA,EAAY1G,CAAA;YACZnC,IAAA,EAAMoK,EAAA,CAAiBnH,CAAA,CAAEjD,IAAA;UAAA;QAG7B0C,CAAA,CAAKyJ,IAAA,CAAK;UACNC,GAAA,EAAQ3M,CAAA,CAAgB2M,GAAA,SAAOjK,CAAA;UAC/B+J,KAAA,EAAOxJ,CAAA,CAAKsJ,MAAA;UACZhM,IAAA,EAAMoD,CAAA;UACNlD,CAAA,EAAAuF,CAAA;UACArF,CAAA,EAAAmF,CAAA;UACAH,IAAA,EAAM5C,CAAA,CAAO6J,IAAA,GAAO5G,CAAA;UACpBJ,IAAA,EAAM7C,CAAA,CAAO8J,GAAA,GAAM/G,CAAA;UACnBpF,KAAA,EAAOC,CAAA;UACPC,MAAA,EAAQX,CAAA;UACR0C,KAAA,EAAOjB,CAAA,CAASiC,CAAA;UAChBC,KAAA,EAAO/B,CAAA,CAAgB8B,CAAA;QAAA,EAE/B;MAAA,EAAE;IAAA,IAGCV,CACX;EAAA;EAKakL,EAAA,GAAsB,SAAAC,CAAHpO,CAAA;IAkC1B,IA9JoBC,CAAA;MA6HtBE,CAAA,GAAIH,CAAA,CAAJO,IAAA;MACAF,CAAA,GAAML,CAAA,CAAN4H,MAAA;MACAlG,CAAA,GAAQ1B,CAAA,CAAR8H,QAAA;MACAlG,CAAA,GAAQ5B,CAAA,CAAR+H,QAAA;MACAlG,CAAA,GAAO7B,CAAA,CAAP6H,OAAA;MACA/F,CAAA,GAAK9B,CAAA,CAALU,KAAA;MACAgC,CAAA,GAAM1C,CAAA,CAANY,MAAA;MAAMgC,CAAA,GAAA5C,CAAA,CACNoI,OAAA;MAAAvF,CAAA,QAAU,MAAHD,CAAA,GAAG,IAACA,CAAA;MACXG,CAAA,GAAU/C,CAAA,CAAVgI,UAAA;MACY/E,CAAA,GAAgBjD,CAAA,CAA5BkI,UAAA;MAAU/E,CAAA,GAAAnD,CAAA,CACVkN,SAAA;MAAA7J,CAAA,QAAY,MAAHF,CAAA,GAAG,KAAEA,CAAA;MACXI,CAAA,GAAKhB,CAAA,CAAAvC,CAAA,EAAA0N,EAAA;MAuBFlK,CAAA,GAAOD,CAAA,CAAMmE,IAAA,CAAKyF,MAAA,CAAO,UAAAnN,CAAA;QAAG,QAAKqD,CAAA,CAAU+J,QAAA,CAASpN,CAAA;MAAA;MACpD8F,CAAA,GAAcR,CAAA,GAA0BoC,IAAA,CAAKlE,CAAA,EAAM6K,MAAA,CAAO7I,CAAA,CAA5C,CAChBgF,EAAA,CAAcrK,CAAA,EAAMqD,CAAA;MAGxBwC,CAAA,GACe,eAAX3F,CAAA,GAAyB,CAAC,KAAK,KAAKyB,CAAA,IAAoB,CAAC,KAAK,KAAKY,CAAA;MADhE/B,CAAA,GAAIqF,CAAA;MAAEvF,CAAA,GAASuF,CAAA;MAAET,CAAA,GAAIS,CAAA;MAEtBP,CAAA,GAAa2E,EAAA,CACfjK,CAAA,EACAoD,CAAA,CAAMyI,QAAA,EACNnJ,CAAA,EACAI,CAAA,EACAsC,CAAA,EACA9E,CAAA;MAGEkD,CAAA,GAASrC,CAAA;QACXN,GAAA,EAAKY,CAAA;QACL2I,GAAA,EAAK7I,CAAA;QACLmG,OAAA,EAAAhG;MAAA,GACGkB,CAAA;MAGDc,CAAA,IAtLgB5D,CAAA,GAuLlB0N,EAAA,CAAY7H,CAAA,GAtLP,UAuLL/C,CAAA,CAAWkF,IAAA,GAvLEhI,CAAA,CAAMkN,MAAA,CAAO,UAAAnN,CAAA;QAAG,OAAY,MAARA,CAAS;MAAA,KAAIC,CAAA;MAyL5C8D,CAAA,GAAMhD,IAAA,CAAKwJ,GAAA,CAAGgD,KAAA,CAARxM,IAAA,EAAY8C,CAAA;MAClBI,CAAA,GAAMlD,IAAA,CAAKC,GAAA,CAAGuM,KAAA,CAARxM,IAAA,EAAY8C,CAAA;MAElBM,CAAA,GAAQiB,CAAA,CACVzB,CAAA,EACA;QAAE2G,GAAA,EAAKzG,CAAA;QAAQ0G,GAAA,EAAAxG,CAAA;QAAK/C,GAAA,EAAAiD;MAAA,GACX,QAATtD,CAAA,GAAemB,CAAA,GAAQY,CAAA,EACvB/B,CAAA;MAGJL,CAAA,GAAoC,eAAXD,CAAA,GAAwB,CAACoF,CAAA,EAAYtB,CAAA,IAAS,CAACA,CAAA,EAAOsB,CAAA;MAAxEpE,CAAA,GAAMf,CAAA;MAAEiE,CAAA,GAAMjE,CAAA;MAEfmE,CAAA,GAAelB,CAAA,CAAM8E,YAAA,GAAe,IAAI9E,CAAA,CAAM8E,YAAA,GAAe;MAC7DpH,CAAA,GAAYwE,CAAA,CAAWgI,SAAA;MACvBvM,CAAA,GAAS,CAAAI,CAAA,KACNiC,CAAA,EAAK;QAAE8E,YAAA,EAAA5D,CAAA;QAAcuJ,WAAA,EAAAlI,CAAA;QAAaoG,MAAA,EAAA7K,CAAA;QAAQ8K,MAAA,EAAA5H;MAAA,IAC/CtD,CAAA,EACA0C,CAAA,CAAUkE,OAAA;IAUd,OAAO;MAAEqE,MAAA,EAAA7K,CAAA;MAAQ8K,MAAA,EAAA5H,CAAA;MAAQrE,IAAA,EANrBe,CAAA,GAAY,IACK,eAAXZ,CAAA,GACIyN,EAAA,CAA2BP,KAAA,MAAI,GAAArM,CAAA,IAC/B+M,EAAA,CAA6BV,KAAA,MAAI,GAAArM,CAAA,IACrC;IAAA,CAGd;EAAA;EC9KaoN,EAAA,GAAgB,SAAAC,CAAHvO,CAAA;IAapB,IAZFC,CAAA,GAAID,CAAA,CAAJE,IAAA;MACAC,CAAA,GAASH,CAAA,CAATwO,SAAA;MACAnO,CAAA,GAAIL,CAAA,CAAJ8I,IAAA;MACApH,CAAA,GAAS1B,CAAA,CAAT2H,SAAA;MACA9F,CAAA,GAAM7B,CAAA,CAAN4H,MAAA;MACA9F,CAAA,GAAW9B,CAAA,CAAXyO,WAAA;MACA/L,CAAA,GAAO1C,CAAA,CAAP6H,OAAA;MAOMjF,CAAA,GAAiBhB,CAAA,CACnB,QAAAE,CAAA,GAAAA,CAAA,GAAyB,cAATzB,CAAA,GAAqB,eAAe;IAGxD,OAAa,cAATA,CAAA,GAxC+B,UACnCL,CAAA,EACAC,CAAA,EACAE,CAAA;MAEA,IAAME,CAAA,GAAOqF,CAAA,CACT1F,CAAA,CAAKoB,GAAA,CAAI,UAAApB,CAAA;QAAG,IAAAC,CAAA,EAAAI,CAAA;QAAA,OAAK;UACb+G,EAAA,EAAuB,SAArBnH,CAAA,GAAED,CAAA,CAAIO,IAAA,CAAK6I,UAAA,IAAUnJ,CAAA,GAAI;UAC3B2D,KAAA,EAAOzD,CAAA,CAAeH,CAAA,CAAIO,IAAA;UAC1BiM,MAAA,EAAQxM,CAAA,CAAIO,IAAA,CAAKiM,MAAA;UACjB7J,KAAA,EAAgB,SAAXtC,CAAA,GAAEL,CAAA,CAAI2C,KAAA,IAAKtC,CAAA,GAAI;QAAA;MAAA,IAExB,UAAAL,CAAA;QAAK,OAAAA,CAAA,CAAFoH,EAAW;MAAA;MAOlB,OAJe,iBAAXnH,CAAA,IACAI,CAAA,CAAKwH,OAAA,IAGFxH,CACX;IAAA,CAqBe,CAAwBJ,CAAA,EAAM4B,CAAA,EAAQe,CAAA,IAxEjB,UAChC5C,CAAA,EACAC,CAAA,EACAE,CAAA,EACAE,CAAA,EACAqB,CAAA,EACAE,CAAA;MAEA,IAAMC,CAAA,GAAO6D,CAAA,CACT1F,CAAA,CAAKoB,GAAA,CAAI,UAAApB,CAAA;QAAG,IAAAC,CAAA;QAAA,OAAK;UACbmH,EAAA,EAAIpH,CAAA,CAAIO,IAAA,CAAK6G,EAAA;UACbxD,KAAA,EAAOhC,CAAA,CAAe5B,CAAA,CAAIO,IAAA;UAC1BiM,MAAA,EAAQxM,CAAA,CAAIO,IAAA,CAAKiM,MAAA;UACjB7J,KAAA,EAAgB,SAAX1C,CAAA,GAAED,CAAA,CAAI2C,KAAA,IAAK1C,CAAA,GAAI;QAAA;MAAA,IAExB,UAAAD,CAAA;QAAK,OAAAA,CAAA,CAAFoH,EAAW;MAAA;MAalB,QATgB,eAAXnH,CAAA,IACiB,cAAdI,CAAA,IACc,aAAdF,CAAA,KACY,MAAZuB,CAAA,IACQ,iBAAXzB,CAAA,IAAyC,cAAdI,CAAA,KAAuC,MAAZqB,CAAA,KAEvDG,CAAA,CAAKgG,OAAA,IAGFhG,CACX;IAAA,CA8CW,CAAqB5B,CAAA,EAAM4B,CAAA,EAAQ1B,CAAA,EAAWuB,CAAA,EAAWgB,CAAA,EAASE,CAAA,CAC7E;EAAA;EC+Ba8L,EAAA,GAAsB,SAAAC,CAC/B3O,CAAA,EACAC,CAAA,EACAE,CAAA;IAEA,IAAME,CAAA,GAAoBL,CAAA,CAAc4O,GAAA,CAAI3O,CAAA,KAAe;IAC3DD,CAAA,CAAc6O,GAAA,CAAI5O,CAAA,EAAYI,CAAA,GAAoBF,CAAA,CACtD;EAAA;EAGa2O,EAAA,GAA+B,SAAAC,CACxC/O,CAAA,EACAC,CAAA,EACAE,CAAA;IAEA,IAAME,CAAA,GAAoBL,CAAA,CAAuB4O,GAAA,CAAI3O,CAAA,KAAe;IACpED,CAAA,CAAuB6O,GAAA,CAAI5O,CAAA,EAAYI,CAAA,IAAqBF,CAAA,GAAQ,IAAIA,CAAA,GAAQ,GACpF;EAAA;EAGa6O,EAAA,GAA6B,SAAAC,CACtCjP,CAAA,EACAC,CAAA,EACAE,CAAA;IAEA,IAAME,CAAA,GAAuBL,CAAA,CAAqB4O,GAAA,CAAI3O,CAAA,KAAe;IACrED,CAAA,CAAqB6O,GAAA,CAAI5O,CAAA,EAAYc,IAAA,CAAKC,GAAA,CAAIX,CAAA,EAAsB2K,MAAA,CAAO7K,CAAA,GAC/E;EAAA;EAGa+O,EAAA,GAA4B,SAAAC,CACrCnP,CAAA,EACAC,CAAA;IAEA,IAAME,CAAA,GAAsBH,CAAA,CAAoB4O,GAAA,CAAI3O,CAAA,KAAe;IACnED,CAAA,CAAoB6O,GAAA,CAAI5O,CAAA,EAAYE,CAAA,GAAsB,EAC9D;EAAA;EC3IaiP,EAAA,GAAS,SAAAC,CAAHrP,CAAA;IA4Db,IAAAC,CAAA,GAAAD,CAAA,CA3DFyH,OAAA;MAAAtH,CAAA,QAAO,MAAAF,CAAA,GAAGuH,EAAA,CAAaC,OAAA,GAAOxH,CAAA;MAAAI,CAAA,GAAAL,CAAA,CAC9B0H,IAAA;MAAA9F,CAAA,QAAI,MAAAvB,CAAA,GAAGmH,EAAA,CAAaE,IAAA,GAAIrH,CAAA;MAAAqC,CAAA,GAAA1C,CAAA,CACxB4D,KAAA;MAAAhB,CAAA,QAAK,MAAAF,CAAA,GAAG8E,EAAA,CAAa5D,KAAA,GAAKlB,CAAA;MAAAG,CAAA,GAAA7C,CAAA,CAC1BmJ,YAAA;MAAApG,CAAA,QAAY,MAAAF,CAAA,GAAG2E,EAAA,CAAa2B,YAAA,GAAYtG,CAAA;MACxCI,CAAA,GAAWjD,CAAA,CAAXsP,WAAA;MAAWnM,CAAA,GAAAnD,CAAA,CACXiJ,MAAA;MAAA5F,CAAA,QAAM,MAAAF,CAAA,GAAGqE,EAAA,CAAayB,MAAA,GAAM9F,CAAA;MAAAI,CAAA,GAAAvD,CAAA,CAC5BgJ,OAAA;MAAAxF,CAAA,QAAO,MAAAD,CAAA,GAAGiE,EAAA,CAAawB,OAAA,GAAOzF,CAAA;MAAAuC,CAAA,GAAA9F,CAAA,CAC9ByC,WAAA;MAAAuD,CAAA,QAAW,MAAAF,CAAA,GAAG0B,EAAA,CAAa/E,WAAA,GAAWqD,CAAA;MAAAnF,CAAA,GAAAX,CAAA,CACtC6I,cAAA;MAAAtD,CAAA,QAAc,MAAA5E,CAAA,GAAG6G,EAAA,CAAaqB,cAAA,GAAclI,CAAA;MAAAkD,CAAA,GAAA7D,CAAA,CAC5C2H,SAAA;MAAA5D,CAAA,QAAS,MAAAF,CAAA,GAAG2D,EAAA,CAAaG,SAAA,GAAS9D,CAAA;MAAAI,CAAA,GAAAjE,CAAA,CAClC4H,MAAA;MAAAzD,CAAA,QAAM,MAAAF,CAAA,GAAGuD,EAAA,CAAaI,MAAA,GAAM3D,CAAA;MAAA3D,CAAA,GAAAN,CAAA,CAC5B6H,OAAA;MAAAxG,CAAA,QAAO,MAAAf,CAAA,GAAGkH,EAAA,CAAaK,OAAA,GAAOvH,CAAA;MAC9BiE,CAAA,GAAIvE,CAAA,CAAJO,IAAA;MAAIkE,CAAA,GAAAzE,CAAA,CACJ8H,QAAA;MAAA7G,CAAA,QAAQ,MAAAwD,CAAA,GAAG+C,EAAA,CAAaM,QAAA,GAAQrD,CAAA;MAAAvD,CAAA,GAAAlB,CAAA,CAChC+H,QAAA;MAAAlC,CAAA,QAAQ,MAAA3E,CAAA,GAAGsG,EAAA,CAAaO,QAAA,GAAQ7G,CAAA;MAChCa,CAAA,GAAM/B,CAAA,CAANoM,MAAA;MACAvH,CAAA,GAAK7E,CAAA,CAALU,KAAA;MACAqE,CAAA,GAAM/E,CAAA,CAANY,MAAA;MAAMsE,CAAA,GAAAlF,CAAA,CACNoI,OAAA;MAAAhD,CAAA,QAAO,MAAAF,CAAA,GAAGsC,EAAA,CAAaY,OAAA,GAAOlD,CAAA;MAAAI,CAAA,GAAAtF,CAAA,CAC9BqI,YAAA;MAAA7C,CAAA,QAAY,MAAAF,CAAA,GAAGkC,EAAA,CAAaa,YAAA,GAAY/C,CAAA;MAAAI,CAAA,GAAA1F,CAAA,CACxCgI,UAAA;MAAAzF,CAAA,QAAU,MAAAmD,CAAA,GAAG8B,EAAA,CAAaQ,UAAA,GAAUtC,CAAA;MAAA7F,CAAA,GAAAG,CAAA,CACpCkI,UAAA;MAAApI,CAAA,QAAU,MAAAD,CAAA,GAAG2H,EAAA,CAAaU,UAAA,GAAUrI,CAAA;MAAA0B,CAAA,GAAAvB,CAAA,CACpCqJ,gBAAA;MAAAlH,CAAA,QAAgB,MAAAZ,CAAA,GAAGiG,EAAA,CAAa6B,gBAAA,GAAgB9H,CAAA;MAAAa,CAAA,GAAApC,CAAA,CAChD0I,WAAA;MAAAzB,CAAA,QAAW,MAAA7E,CAAA,GAAGoF,EAAA,CAAakB,WAAA,GAAWtG,CAAA;MAAA8E,CAAA,GAAAlH,CAAA,CACtC2I,cAAA;MAAAc,EAAA,QAAc,MAAAvC,CAAA,GAAGM,EAAA,CAAamB,cAAA,GAAczB,CAAA;MAAA8C,EAAA,GAAAhK,CAAA,CAC5C4I,eAAA;MAAAwB,EAAA,QAAe,MAAAJ,EAAA,GAAGxC,EAAA,CAAaoB,eAAA,GAAeoB,EAAA;MAAAQ,EAAA,GAAAxK,CAAA,CAC9CyB,OAAA;MAAAkJ,EAAA,QAAO,MAAAH,EAAA,GAAGhD,EAAA,CAAa/F,OAAA,GAAO+I,EAAA;MAC9BM,EAAA,GAAW9K,CAAA,CAAXyO,WAAA;MAAWxD,EAAA,GAAAjL,CAAA,CACXwJ,YAAA;MAAA0B,EAAA,QAAY,MAAAD,EAAA,GAAGzD,EAAA,CAAagC,YAAA,GAAYyB,EAAA;MAgCxCG,EAAA,GAAkCzH,CAAA,CAAS,QAAAxB,CAAA,GAAAA,CAAA,GAAoB;MAAxDmJ,EAAA,GAASF,EAAA;MAAEM,EAAA,GAAYN,EAAA;MACxBQ,EAAA,GAAcnG,CAAA,CAAY,UAACzF,CAAA;QAC7B0L,EAAA,CAAa,UAAAzL,CAAA;UAAK,OACdA,CAAA,CAAMsP,OAAA,CAAQvP,CAAA,KAAO,IAAIC,CAAA,CAAMkN,MAAA,CAAO,UAAAlN,CAAA;YAAI,OAAIA,CAAA,KAASD,CAAE;UAAA,QAACqN,MAAA,CAAOpN,CAAA,EAAK,CAAED,CAAA,EAAG;QAAA,EAElF;MAAA,GAAE;MAEG8M,EAAA,GAAWjL,CAAA,CAAoB1B,CAAA;MAC/BuN,EAAA,GAAW7L,CAAA,CAAoBe,CAAA;MAC/B+K,EAAA,GAAkB9L,CAAA,CAAoBkB,CAAA;MACtC+K,EAAA,GAAchM,CAAA,CAAkBmB,CAAA;MAEhCgL,EAAA,GAAQvM,CAAA;MACR0N,EAAA,GAAWtK,CAAA,CAAqBzB,CAAA,EAAQG,CAAA;MACxCgM,EAAA,GAAiBxK,CAAA,CACnBgB,CAAA,EACAiI,EAAA;MAEEwB,EAAA,GAAgBzK,CAAA,CAClBO,CAAA,EACA0I,EAAA;MAIJyB,EAAA,IADmC,cAAd3L,CAAA,GAA0BiJ,EAAA,GAAsBmB,EAAA,EACvB;QAC1CvG,MAAA,EAAAzD,CAAA;QACA0D,OAAA,EAAAxG,CAAA;QACAd,IAAA,EAAAgE,CAAA;QACAyH,QAAA,EAAAc,EAAA;QACApF,IAAA,EAAA9F,CAAA;QACAkG,QAAA,EAAA7G,CAAA;QACA8G,QAAA,EAAAlC,CAAA;QACAnF,KAAA,EAAAmE,CAAA;QACAjE,MAAA,EAAAmE,CAAA;QACAgH,QAAA,EAAAqD,EAAA;QACAhH,OAAA,EAAAhD,CAAA;QACAiD,YAAA,EAAA7C,CAAA;QACAwC,UAAA,EAAAzF,CAAA;QACA2F,UAAA,EAAApI,CAAA;QACAoN,SAAA,EAAA5B,EAAA;QACAQ,WAAA,EAAAgC,EAAA;QACA7B,eAAA,EAAA0B,EAAA;QACAvB,MAAA,EAAArK;MAAA;MAlBI4N,EAAA,GAAID,EAAA,CAAJxP,IAAA;MAAM0P,EAAA,GAAMF,EAAA,CAANxD,MAAA;MAAQ2D,EAAA,GAAMH,EAAA,CAANvD,MAAA;MAqBhB2D,EAAA,GAAgBrP,CAAA,CAClB;QAAA,OACIkP,EAAA,CACKxC,MAAA,CACG,UAACnN,CAAA;UAAG,OAAoE,SAAnBA,CAAA,CAAIO,IAAA,CAAK8G,KAClE;QAAA,GACCjG,GAAA,CAAI,UAACpB,CAAA,EAAKC,CAAA;UAAK,OAAAqB,CAAA,KACTtB,CAAA,EAAG;YACNyM,KAAA,EAAAxM;UAAA,EAAK;QAAA;MAAA,GAEjB,CAAC0P,EAAA;MAGCI,EAAA,GAAuBtK,CAAA,CACzB,UAAAzF,CAAA;QAA0D,IAAvDC,CAAA,GAAKD,CAAA,CAALU,KAAA;UAAOP,CAAA,GAAMH,CAAA,CAANY,MAAA;QACN,SAAKqG,CAAA,MACDwC,EAAA,GAAiB,KAAKxJ,CAAA,GAAQwJ,EAAA,OAC9BW,EAAA,GAAkB,KAAKjK,CAAA,GAASiK,EAAA,CAEvC;MAAA,GACD,CAACnD,CAAA,EAAawC,EAAA,EAAgBW,EAAA;MAG5B4F,EAAA,GAAavP,CAAA,CACf;QAAA,OACImB,CAAA,CAAKR,GAAA,CAAI,UAAApB,CAAA;UACL,IAAMC,CAAA,GAAM0P,EAAA,CAAKM,IAAA,CAAK,UAAAhQ,CAAA;YAAG,OAAIA,CAAA,CAAIM,IAAA,CAAK6G,EAAA,KAAOpH,CAAA;UAAA;UAE7C,OAAAsB,CAAA,KAAYrB,CAAA,EAAG;YAAEM,IAAA,EAAIe,CAAA;cAAI8F,EAAA,EAAIpH;YAAA,GAAW,QAAHC,CAAA,QAAG,IAAHA,CAAA,CAAKM,IAAA,EAAI;cAAEiM,MAAA,EAAQlB,EAAA,CAAU8B,QAAA,CAASpN,CAAA;YAAA;UAAA,EAC/E;QAAA,EAAE;MAAA,GACN,CAACsL,EAAA,EAAW1J,CAAA,EAAM+N,EAAA;MAGhBO,EAAA,GAAoDzP,CAAA,CACtD;QAAA,OACIkK,EAAA,CAAQvJ,GAAA,CAAI,UAAApB,CAAA;UAWR,OAAO,CAACA,CAAA,EAVKsO,EAAA,CAAc;YACvBpO,IAAA,EAA0B,WAApBF,CAAA,CAAOkC,QAAA,GAAsB8N,EAAA,GAAaL,EAAA;YAChDnB,SAAA,EAAWxO,CAAA,CAAOwO,SAAA;YAClB1F,IAAA,EAAM9I,CAAA,CAAOkC,QAAA;YACbyF,SAAA,EAAA5D,CAAA;YACA6D,MAAA,EAAAzD,CAAA;YACAsK,WAAA,EAAA3D,EAAA;YACAjD,OAAA,EAAAxG;UAAA,GAIR;QAAA,EAAE;MAAA,GACN,CAACsJ,EAAA,EAASqF,EAAA,EAAYL,EAAA,EAAM5L,CAAA,EAAWI,CAAA,EAAQ2G,EAAA,EAAazJ,CAAA;MAG1D8O,EAAA,GAAY1P,CAAA,CACd;QAAA,ODhKwB,UAC5BT,CAAA,EACAC,CAAA,EACAE,CAAA,EACAE,CAAA,EACAqB,CAAA,EACAE,CAAA,EACAC,CAAA;UAAA,KAH0C,MAA1CxB,CAAA,KAAAA,CAAA,GAA6CmH,EAAA,CAAaI,MAAA,QACV,MAAhDlG,CAAA,KAAAA,CAAA,GAAmD8F,EAAA,CAAaG,SAAA;UAIhE,IAAM7F,CAAA,GAAS;UAEf,IAAoB,MAAhB9B,CAAA,CAAKuM,MAAA,EAAc,OAAOzK,CAAA;UAE9B,IAAMY,CAAA,GAAgB,IAAI0N,GAAA;YAEpBxN,CAAA,GAAW5C,CAAA,CAAK,GAAGU,KAAA;YACnBmC,CAAA,GAAY7C,CAAA,CAAK,GAAGY,MAAA;UAE1B,IAAkB,cAAdc,CAAA,EAAyB;YACzB,IAAMqB,CAAA,GAAyB,IAAIqN,GAAA;YAEnCpQ,CAAA,CAAKqM,OAAA,CAAQ,UAAArM,CAAA;cACT,IAAAC,CAAA,GAA8BD,CAAA,CAAIO,IAAA;gBAA1BJ,CAAA,GAAUF,CAAA,CAAVmJ,UAAA;gBAAY/I,CAAA,GAAKJ,CAAA,CAALoH,KAAA;cACpBqH,EAAA,CAAoBhM,CAAA,EAAevC,CAAA,EAAY6K,MAAA,CAAO3K,CAAA,IACtDyO,EAAA,CAA6B/L,CAAA,EAAwB5C,CAAA,EAAY6K,MAAA,CAAO3K,CAAA,EAC5E;YAAA,IAEA0C,CAAA,CAAuBsJ,OAAA,CAAQ,UAACrM,CAAA,EAAgB0B,CAAA;cAC5C,IAEIqB,CAAA;gBACAE,CAAA;gBACAE,CAAA;gBAJEE,CAAA,GAAaX,CAAA,CAAckM,GAAA,CAAIlN,CAAA,KAAe;cAMrC,eAAXrB,CAAA,IACA0C,CAAA,GAAY9C,CAAA,CAAOyB,CAAA,GACnBuB,CAAA,GAAY9C,CAAA,CAAOH,CAAA,GACnBmD,CAAA,GAAkBhD,CAAA,CAAOH,CAAA,GAAiB,OAE1C+C,CAAA,GAAY9C,CAAA,CAAOD,CAAA,GACnBiD,CAAA,GAAY9C,CAAA,CAAOuB,CAAA,GACnByB,CAAA,GAAkBlD,CAAA,CAAOD,CAAA,GAAiB,KAG9C+C,CAAA,IAAwB,eAAX1C,CAAA,GAAwBuC,CAAA,GAAW,IAAIhB,CAAA,EACpDqB,CAAA,IAAwB,eAAX5C,CAAA,IAAyBuB,CAAA,GAAeiB,CAAA,GAAY,GAEjEf,CAAA,CAAO4K,IAAA,CAAK;gBACRC,GAAA,EAAK,WAAWjL,CAAA;gBAChBjB,CAAA,EAAGsC,CAAA;gBACHpC,CAAA,EAAGsC,CAAA;gBACHoE,KAAA,EAAOhE,CAAA;gBACPiE,cAAA,EAAgBzF,CAAA,CAAYwB,CAAA;gBAC5BgN,eAAA,EAAAlN;cAAA,EAER;YAAA,EACJ;UAAA,OAAO,IAAkB,cAAdzB,CAAA,EAAyB;YAChC,IAAMuB,CAAA,GAAuB,IAAImN,GAAA;cAC3BjN,CAAA,GAAsB,IAAIiN,GAAA;YAEhCpQ,CAAA,CAAKqM,OAAA,CAAQ,UAAArM,CAAA;cACT,IAAAC,CAAA,GAA8BD,CAAA,CAAIO,IAAA;gBAA1BJ,CAAA,GAAUF,CAAA,CAAVmJ,UAAA;gBAAY/I,CAAA,GAAKJ,CAAA,CAALoH,KAAA;cACpBqH,EAAA,CAAoBhM,CAAA,EAAevC,CAAA,EAAY6K,MAAA,CAAO3K,CAAA,IACtD2O,EAAA,CAA2B/L,CAAA,EAAsB9C,CAAA,EAAY6K,MAAA,CAAO3K,CAAA,IACpE6O,EAAA,CAA0B/L,CAAA,EAAqBhD,CAAA,CACnD;YAAA,IAEA8C,CAAA,CAAqBoJ,OAAA,CAAQ,UAACrM,CAAA,EAAe0B,CAAA;cACzC,IAGIqB,CAAA;gBACAE,CAAA;gBACAI,CAAA;gBALEE,CAAA,GAAab,CAAA,CAAckM,GAAA,CAAIlN,CAAA,KAAe;gBAC9C8B,CAAA,GAAeL,CAAA,CAAoByL,GAAA,CAAIlN,CAAA;cAM9B,eAAXrB,CAAA,IACA0C,CAAA,GAAY9C,CAAA,CAAOyB,CAAA,GACnBuB,CAAA,GAAY9C,CAAA,CAAOH,CAAA,GACnBqD,CAAA,GAAkBlD,CAAA,CAAOH,CAAA,GAAgB,OAEzC+C,CAAA,GAAY9C,CAAA,CAAOD,CAAA,GACnBiD,CAAA,GAAY9C,CAAA,CAAOuB,CAAA,GACnB2B,CAAA,GAAkBpD,CAAA,CAAOD,CAAA,GAAgB,KAM7C+C,CAAA,IAAwB,eAAX1C,CAAA,GAHUmD,CAAA,GAAeZ,CAAA,GAGgB,IAAIhB,CAAA,EAC1DqB,CAAA,IAAwB,eAAX5C,CAAA,IAAyBuB,CAAA,GAHd4B,CAAA,GAAeX,CAAA,GAGgC,GAEvEf,CAAA,CAAO4K,IAAA,CAAK;gBACRC,GAAA,EAAK,WAAWjL,CAAA;gBAChBjB,CAAA,EAAGsC,CAAA;gBACHpC,CAAA,EAAGsC,CAAA;gBACHoE,KAAA,EAAO9D,CAAA;gBACP+D,cAAA,EAAgBzF,CAAA,CAAY0B,CAAA;gBAC5B8M,eAAA,EAAAhN;cAAA,EAER;YAAA,EACJ;UAAA;UACA,OAAOvB,CACX;QAAA,CC0Dc,CAAiB6N,EAAA,EAAMC,EAAA,EAAQC,EAAA,EAAQ1L,CAAA,EAAQJ,CAAA,EAAWmH,EAAA,EAAc4C,EAAA,CAAY;MAAA,GAC1F,CAAC6B,EAAA,EAAMC,EAAA,EAAQC,EAAA,EAAQ1L,CAAA,EAAQJ,CAAA,EAAWmH,EAAA,EAAc4C,EAAA;IAG5D,OAAO;MACH5N,IAAA,EAAAyP,EAAA;MACAW,aAAA,EAAAR,EAAA;MACA5D,MAAA,EAAA0D,EAAA;MACAzD,MAAA,EAAA0D,EAAA;MACA7D,QAAA,EAAAc,EAAA;MACAyD,QAAA,EAAA7C,EAAA;MACAzB,eAAA,EAAA0B,EAAA;MACA7B,WAAA,EAAAgC,EAAA;MACA/B,QAAA,EAAAqD,EAAA;MACAoB,cAAA,EAAAhB,EAAA;MACAiB,aAAA,EAAAhB,EAAA;MACAiB,oBAAA,EAAAX,EAAA;MACA7C,SAAA,EAAA5B,EAAA;MACA3J,WAAA,EAAAiK,EAAA;MACA+E,eAAA,EAAAT,EAAA;MACAU,SAAA,EAAAT;IAAA,CAER;EAAA;ECtLaX,EAAA,GAAY,SAAAqB,CAAH7Q,CAAA;IAKC,IAJnBC,CAAA,GAAID,CAAA,CAAJO,IAAA;MACAJ,CAAA,GAAYH,CAAA,CAAZ8Q,YAAA;MACAzQ,CAAA,GAAOL,CAAA,CAAP6J,OAAA;MAAOjI,CAAA,GAAA5B,CAAA,CACP4H,MAAA;MAAA/F,CAAA,QAAM,MAAAD,CAAA,GAAG6H,EAAA,CAAgB7B,MAAA,GAAMhG,CAAA;MAEzBE,CAAA,GAAQJ,CAAA;IAmCd,OAlCyBf,CAAA,CAOvBV,CAAA,EAAM;MACJyH,IAAA,EAAM,SAAAA,CAAA1H,CAAA;QAAQ,OAAIA,CAAA,CAAS2M,GAAG;MAAA;MAC9B7D,IAAA,EAAM,SAAAA,CAAA9I,CAAA;QAAQ,OAAK;UACfS,CAAA,EAAc,eAAXoB,CAAA,GAAwB7B,CAAA,CAASS,CAAA,GAAIT,CAAA,CAASqQ,eAAA;UACjD1P,CAAA,EAAc,eAAXkB,CAAA,GAAwB7B,CAAA,CAASqQ,eAAA,GAAkBrQ,CAAA,CAASW,CAAA;UAC/DqC,YAAA,EAAc;QAAA,CAChB;MAAA;MACF+N,KAAA,EAAO,SAAAA,CAAA/Q,CAAA;QAAQ,OAAK;UAChBS,CAAA,EAAGT,CAAA,CAASS,CAAA;UACZE,CAAA,EAAGX,CAAA,CAASW,CAAA;UACZqC,YAAA,EAAc;QAAA,CAChB;MAAA;MACFgO,MAAA,EAAQ,SAAAA,CAAAhR,CAAA;QAAQ,OAAK;UACjBS,CAAA,EAAGT,CAAA,CAASS,CAAA;UACZE,CAAA,EAAGX,CAAA,CAASW,CAAA;UACZqC,YAAA,EAAc;QAAA,CAChB;MAAA;MACFiO,KAAA,EAAO,SAAAA,CAAAjR,CAAA;QAAQ,OAAK;UAChBS,CAAA,EAAc,eAAXoB,CAAA,GAAwB7B,CAAA,CAASS,CAAA,GAAIT,CAAA,CAASqQ,eAAA;UACjD1P,CAAA,EAAc,eAAXkB,CAAA,GAAwB7B,CAAA,CAASqQ,eAAA,GAAkBrQ,CAAA,CAASW,CAAA;UAC/DqC,YAAA,EAAc;QAAA,CAChB;MAAA;MACFkO,MAAA,EAAQ/Q,CAAA;MACRgR,SAAA,GAAY9Q,CAAA;MACZ+Q,OAAA,EAAS/Q,CAAA,QAAU,IAAY;IAAA,EAG5B,CAAiB,UAACL,CAAA,EAAOC,CAAA;MAAQ,OACpCgB,CAAA,CAAC6E,CAAA,CAASa,IAAA,EAAI;QAEVlG,CAAA,EAAGT,CAAA,CAAMS,CAAA;QACTE,CAAA,EAAGX,CAAA,CAAMW,CAAA;QACTmG,WAAA,EAAa9G,CAAA,CAAMgD,YAAA;QACnBR,KAAA,EAAKlB,CAAA,KACEQ,CAAA,CAAMiF,MAAA,CAAOJ,IAAA,EAAI;UACpBK,aAAA,EAAe;UACfb,IAAA,EAAMrE,CAAA,CAAM6E,IAAA,CAAKR;QAAA;QAErBkL,UAAA,EAAW;QACXC,QAAA,EAAUxP,CAAA,CAAMiF,MAAA,CAAOJ,IAAA,CAAK2K,QAAA;QAC5BC,UAAA,EAAYzP,CAAA,CAAMiF,MAAA,CAAOJ,IAAA,CAAK4K,UAAA;QAC9B3K,UAAA,EAAuB,eAAX/E,CAAA,GAAwB,WAAW;QAC/C2P,iBAAA,EAA8B,eAAX3P,CAAA,GAAwB,eAAe;QAASV,QAAA,EAElElB,CAAA,CAASqH;MAAA,GAfLrH,CAAA,CAAS0M,GAAA,CAgBF;IAAA,EAExB;EAAA;EAAA8C,EAAA;EC3CMC,EAAA,GAAW,SAAA+B,CAAHtR,CAAA;IA6EiB,IA5E3BE,CAAA,GAAIF,CAAA,CAAJI,IAAA;MACAmB,CAAA,GAAOvB,CAAA,CAAPsH,OAAA;MACA7F,CAAA,GAAIzB,CAAA,CAAJuH,IAAA;MAEQ7F,CAAA,GAAa1B,CAAA,CAArBiM,MAAA;MACAtK,CAAA,GAAK3B,CAAA,CAALO,KAAA;MACAgC,CAAA,GAAMvC,CAAA,CAANS,MAAA;MAEAyC,CAAA,GAASlD,CAAA,CAATwH,SAAA;MACApE,CAAA,GAAMpD,CAAA,CAANyH,MAAA;MACApE,CAAA,GAAOrD,CAAA,CAAP0H,OAAA;MACA/B,CAAA,GAAQ3F,CAAA,CAAR2H,QAAA;MACA9B,CAAA,GAAQ7F,CAAA,CAAR4H,QAAA;MAEAtC,CAAA,GAAUtF,CAAA,CAAV6H,UAAA;MACArE,CAAA,GAAUxD,CAAA,CAAV+H,UAAA;MAEAnE,CAAA,GAAO5D,CAAA,CAAPiI,OAAA;MACAnE,CAAA,GAAY9D,CAAA,CAAZkI,YAAA;MAEAlE,CAAA,GAAOhE,CAAA,CAAPuR,OAAA;MACApR,CAAA,GAASH,CAAA,CAATwR,SAAA;MAAStQ,CAAA,GAAAlB,CAAA,CACTmI,UAAA;MAAA/D,CAAA,QAAU,MAAAlD,CAAA,GAAGoI,EAAA,CAAgBnB,UAAA,GAAUjH,CAAA;MAAAoD,CAAA,GAAAtE,CAAA,CACvCoI,QAAA;MAAArH,CAAA,QAAQ,MAAAuD,CAAA,GAAGgF,EAAA,CAAgBlB,QAAA,GAAQ9D,CAAA;MAAAoB,CAAA,GAAA1F,CAAA,CACnCqI,WAAA;MAAAzG,CAAA,QAAW,MAAA8D,CAAA,GAAG4D,EAAA,CAAgBjB,WAAA,GAAW3C,CAAA;MAAAhB,CAAA,GAAA1E,CAAA,CACzCsI,WAAA;MAAA3D,CAAA,QAAW,MAAAD,CAAA,GAAG4E,EAAA,CAAgBhB,WAAA,GAAW5D,CAAA;MACzCG,CAAA,GAAW7E,CAAA,CAAXyR,WAAA;MACA7M,CAAA,GAAW5E,CAAA,CAAX0R,WAAA;MAAW3M,CAAA,GAAA/E,CAAA,CAEXuJ,MAAA;MAAAtE,CAAA,QAAM,MAAAF,CAAA,GAAGuE,EAAA,CAAgBC,MAAA,GAAMxE,CAAA;MAAAI,CAAA,GAAAnF,CAAA,CAC/BwJ,YAAA;MAAAnE,CAAA,QAAY,MAAAF,CAAA,GAAGmE,EAAA,CAAgBE,YAAA,GAAYrE,CAAA;MAAAI,CAAA,GAAAvF,CAAA,CAE3CuI,WAAA;MAAAnG,CAAA,QAAW,MAAAmD,CAAA,GAAG+D,EAAA,CAAgBf,WAAA,GAAWhD,CAAA;MACzC7F,CAAA,GAAKM,CAAA,CAALyD,KAAA;MAAKzB,CAAA,GAAAhC,CAAA,CACLwI,cAAA;MAAAvG,CAAA,QAAc,MAAAD,CAAA,GAAGsH,EAAA,CAAgBd,cAAA,GAAcxG,CAAA;MAAA8E,CAAA,GAAA9G,CAAA,CAC/CyI,eAAA;MAAA1B,CAAA,QAAe,MAAAD,CAAA,GAAGwC,EAAA,CAAgBb,eAAA,GAAe3B,CAAA;MACjDO,EAAA,GAAcrH,CAAA,CAAd0I,cAAA;MAAcmB,EAAA,GAAA7J,CAAA,CAEdmJ,OAAA;MAAAc,EAAA,QAAO,MAAAJ,EAAA,GAAGP,EAAA,CAAgBH,OAAA,GAAOU,EAAA;MAEjCQ,EAAA,GAAOrK,CAAA,CAAP6I,OAAA;MACA2B,EAAA,GAAMxK,CAAA,CAAN8I,MAAA;MAAM6B,EAAA,GAAA3K,CAAA,CACNyJ,IAAA;MAAAqB,EAAA,QAAI,MAAAH,EAAA,GAAGrB,EAAA,CAAgBG,IAAA,GAAIkB,EAAA;MAAAI,EAAA,GAAA/K,CAAA,CAC3BgG,IAAA;MAAAiF,EAAA,QAAI,MAAAF,EAAA,GAAGzB,EAAA,CAAgBtD,IAAA,GAAI+E,EAAA;MAAAI,EAAA,GAAAnL,CAAA,CAC3BsD,YAAA;MAAAiI,EAAA,QAAY,MAAAJ,EAAA,GAAG7B,EAAA,CAAgBhG,YAAA,GAAY6H,EAAA;MAAAM,EAAA,GAAAzL,CAAA,CAC3CuD,WAAA;MAAAoJ,EAAA,QAAW,MAAAlB,EAAA,GAAGnC,EAAA,CAAgB/F,WAAA,GAAWkI,EAAA;MACzCoB,EAAA,GAAW7M,CAAA,CAAXsC,WAAA;MAAWiL,EAAA,GAAAvN,CAAA,CAEXC,WAAA;MAAAuN,EAAA,QAAW,MAAAD,EAAA,GAAGjE,EAAA,CAAgBrJ,WAAA,GAAWsN,EAAA;MAEzCI,EAAA,GAAW3N,CAAA,CAAXsO,WAAA;MACAR,EAAA,GAAY9N,CAAA,CAAZgJ,YAAA;MAEAgF,EAAA,GAAWhO,CAAA,CAAXmP,WAAA;MAAWhB,EAAA,GAAAnO,CAAA,CAEX6D,aAAA;MAAA0K,EAAA,QAAa,MAAAJ,EAAA,GAAG7E,EAAA,CAAgBzF,aAAA,GAAasK,EAAA;MAAAQ,EAAA,GAAA3O,CAAA,CAC7CmE,OAAA;MAAA0K,EAAA,QAAO,MAAAF,EAAA,GAAGrF,EAAA,CAAgBnF,OAAA,GAAOwK,EAAA;MACjCI,EAAA,GAAO/O,CAAA,CAAP+D,OAAA;MACAuL,EAAA,GAAYtP,CAAA,CAAZiE,YAAA;MACAsL,EAAA,GAAYvP,CAAA,CAAZkE,YAAA;MAEAsL,EAAA,GAAOxP,CAAA,CAAPsB,OAAA;MAAOmO,EAAA,GAAAzP,CAAA,CAEP4J,IAAA;MAAA8F,EAAA,QAAI,MAAAD,EAAA,GAAGnG,EAAA,CAAgBM,IAAA,GAAI6F,EAAA;MAC3BE,EAAA,GAAS3P,CAAA,CAATuE,SAAA;MACAqL,EAAA,GAAc5P,CAAA,CAAdwE,cAAA;MACAqL,EAAA,GAAe7P,CAAA,CAAfyE,eAAA;MAAesL,EAAA,GAAA/P,CAAA,CACfqE,WAAA;MAAA2L,EAAA,QAAW,MAAAD,EAAA,GAAGzG,EAAA,CAAgBjF,WAAA,GAAW0L,EAAA;MACzC4B,EAAA,GAAY3R,CAAA,CAAZ4R,YAAA;MACAC,EAAA,GAAiB7R,CAAA,CAAjB8R,iBAAA;MACAC,EAAA,GAAkB/R,CAAA,CAAlBgS,kBAAA;MAEAC,EAAA,GAAgBjS,CAAA,CAAhBkJ,gBAAA;MAAgBgJ,EAAA,GAAAlS,CAAA,CAEhBoJ,YAAA;MAAA+I,EAAA,QAAY,MAAAD,EAAA,GAAG5I,EAAA,CAAgBF,YAAA,GAAY8I,EAAA;MAAAE,EAAA,GAAApS,CAAA,CAC3CqJ,YAAA;MAAAgJ,EAAA,QAAY,MAAAD,EAAA,GAAG9I,EAAA,CAAgBD,YAAA,GAAY+I,EAAA;MAE3CE,EAAA,GAA0C7P,CAAA;MAAlC8P,EAAA,GAAOD,EAAA,CAAP5I,OAAA;MAAiB8I,EAAA,GAAYF,EAAA,CAApBvB,MAAA;MACjB0B,EAAA,GAAqE/P,CAAA,CACjEf,CAAA,EACAY,CAAA,EACAb,CAAA;MAHIgR,EAAA,GAAUD,EAAA,CAAVE,UAAA;MAAYC,EAAA,GAAWH,EAAA,CAAXI,WAAA;MAAaC,EAAA,GAAML,EAAA,CAANxG,MAAA;MAAQ8G,EAAA,GAAUN,EAAA,CAAVO,UAAA;MAAYC,EAAA,GAAWR,EAAA,CAAXS,WAAA;MAMrDC,EAAA,GAaIlE,EAAA,CAAiB;QACjB3H,OAAA,EAAA/F,CAAA;QACAkC,KAAA,EAAA/D,CAAA;QACAsJ,YAAA,EAAA8E,EAAA;QACAqB,WAAA,EAAAnB,EAAA;QACAlF,MAAA,EAAA0B,EAAA;QACA3B,OAAA,EAAAwB,EAAA;QACA/H,WAAA,EAAAuK,EAAA;QACAnE,cAAA,EAAArB,EAAA;QACAG,SAAA,EAAAtE,CAAA;QACAuE,MAAA,EAAArE,CAAA;QACAsE,OAAA,EAAArE,CAAA;QACAjD,IAAA,EAAAF,CAAA;QACAqH,IAAA,EAAA9F,CAAA;QACAkG,QAAA,EAAAhC,CAAA;QACAiC,QAAA,EAAA/B,CAAA;QACAoG,MAAA,EAAA6G,EAAA;QACAvS,KAAA,EAAOwS,EAAA;QACPtS,MAAA,EAAQwS,EAAA;QACRhL,OAAA,EAAArE,CAAA;QACAsE,YAAA,EAAApE,CAAA;QACA+D,UAAA,EAAAvC,CAAA;QACAyC,UAAA,EAAAvE,CAAA;QACA+E,WAAA,EAAAnG,CAAA;QACAoG,cAAA,EAAAvG,CAAA;QACAwG,eAAA,EAAA1B,CAAA;QACAzF,OAAA,EAAAkO,EAAA;QACAlB,WAAA,EAAAX,EAAA;QACAzE,gBAAA,EAAA+I,EAAA;QACA5I,YAAA,EAAAgJ;MAAA;MAzCAe,EAAA,GAAID,EAAA,CAAJpT,IAAA;MACAsT,EAAA,GAAaF,EAAA,CAAbhD,aAAA;MACAmD,EAAA,GAAMH,EAAA,CAANpH,MAAA;MACAwH,EAAA,GAAMJ,EAAA,CAANnH,MAAA;MACAd,EAAA,GAAQiI,EAAA,CAAR/C,QAAA;MACAoD,EAAA,GAAeL,EAAA,CAAfrH,eAAA;MACA2H,EAAA,GAAcN,EAAA,CAAd9C,cAAA;MACAqD,EAAA,GAAaP,EAAA,CAAb7C,aAAA;MACAqD,EAAA,GAAoBR,EAAA,CAApB5C,oBAAA;MACAqD,EAAA,GAAWT,EAAA,CAAX3R,WAAA;MACAqS,EAAA,GAAeV,EAAA,CAAf3C,eAAA;MACAsD,EAAA,GAASX,EAAA,CAAT1C,SAAA;MAiCEsD,EAAA,GAAavT,CAAA,CAcjB6S,EAAA,EAAe;QACb9L,IAAA,EAAM,SAAAA,CAAA1H,CAAA;UAAG,OAAIA,CAAA,CAAI2M,GAAG;QAAA;QACpB7D,IAAA,EAAM,SAAAA,CAAA9I,CAAA;UAAG,OAAAsB,CAAA;YACLmB,WAAA,EAAamR,EAAA,CAAe5T,CAAA;YAC5B2C,KAAA,EAAO3C,CAAA,CAAI2C,KAAA;YACX/B,MAAA,EAAQ;YACRkC,UAAA,EAAY+Q,EAAA,CAAc7T,CAAA;YAC1BgD,YAAA,EAAc;YACdE,MAAA,EAAQlD,CAAA,CAAIU,KAAA,GAAQ;YACpB0C,MAAA,EAAQpD,CAAA,CAAIY,MAAA,GAAS;YACrB0C,SAAA,EAAwB,eAAAtD,CAAA,CAAIS,CAAA,GAAM,QAAAT,CAAA,CAAIW,CAAA,GAAIX,CAAA,CAAIY,MAAA,IAAS;YACvDF,KAAA,EAAOV,CAAA,CAAIU;UAAA,GACI,eAAX6C,CAAA,GACE,KACA;YACI3C,MAAA,EAAQZ,CAAA,CAAIY,MAAA;YACZ0C,SAAA,EAAS,eAAetD,CAAA,CAAIS,CAAA,UAAMT,CAAA,CAAIW,CAAA,GAAI;YAC1CD,KAAA,EAAO;UAAA,EAEnB;QAAA;QACFqQ,KAAA,EAAO,SAAAA,CAAA/Q,CAAA;UAAG,OAAK;YACXyC,WAAA,EAAamR,EAAA,CAAe5T,CAAA;YAC5B2C,KAAA,EAAO3C,CAAA,CAAI2C,KAAA;YACX/B,MAAA,EAAQZ,CAAA,CAAIY,MAAA;YACZkC,UAAA,EAAY+Q,EAAA,CAAc7T,CAAA;YAC1BgD,YAAA,EAAc;YACdE,MAAA,EAAQlD,CAAA,CAAIU,KAAA,GAAQ;YACpB0C,MAAA,EAAQpD,CAAA,CAAIY,MAAA,GAAS;YACrB0C,SAAA,EAAS,eAAetD,CAAA,CAAIS,CAAA,UAAMT,CAAA,CAAIW,CAAA,GAAI;YAC1CD,KAAA,EAAOV,CAAA,CAAIU;UAAA,CACb;QAAA;QACFsQ,MAAA,EAAQ,SAAAA,CAAAhR,CAAA;UAAG,OAAK;YACZyC,WAAA,EAAamR,EAAA,CAAe5T,CAAA;YAC5B2C,KAAA,EAAO3C,CAAA,CAAI2C,KAAA;YACX/B,MAAA,EAAQZ,CAAA,CAAIY,MAAA;YACZkC,UAAA,EAAY+Q,EAAA,CAAc7T,CAAA;YAC1BgD,YAAA,EAAc;YACdE,MAAA,EAAQlD,CAAA,CAAIU,KAAA,GAAQ;YACpB0C,MAAA,EAAQpD,CAAA,CAAIY,MAAA,GAAS;YACrB0C,SAAA,EAAS,eAAetD,CAAA,CAAIS,CAAA,UAAMT,CAAA,CAAIW,CAAA,GAAI;YAC1CD,KAAA,EAAOV,CAAA,CAAIU;UAAA,CACb;QAAA;QACFuQ,KAAA,EAAO,SAAAA,CAAAjR,CAAA;UAAG,OAAAsB,CAAA;YACNmB,WAAA,EAAamR,EAAA,CAAe5T,CAAA;YAC5B2C,KAAA,EAAO3C,CAAA,CAAI2C,KAAA;YACX/B,MAAA,EAAQ;YACRkC,UAAA,EAAY+Q,EAAA,CAAc7T,CAAA;YAC1BgD,YAAA,EAAc;YACdE,MAAA,EAAQlD,CAAA,CAAIU,KAAA,GAAQ;YACpB0C,MAAA,EAAQ;YACRE,SAAA,EAAwB,eAAAtD,CAAA,CAAIS,CAAA,GAAM,QAAAT,CAAA,CAAIW,CAAA,GAAIX,CAAA,CAAIY,MAAA,IAAS;YACvDF,KAAA,EAAOV,CAAA,CAAIU;UAAA,GACI,eAAX6C,CAAA,GACE,KACA;YACIL,MAAA,EAAQ;YACRE,MAAA,EAAQpD,CAAA,CAAIY,MAAA,GAAS;YACrBA,MAAA,EAAQZ,CAAA,CAAIY,MAAA;YACZ0C,SAAA,EAAS,eAAetD,CAAA,CAAIS,CAAA,UAAMT,CAAA,CAAIW,CAAA,GAAI;YAC1CD,KAAA,EAAO;UAAA,EAEnB;QAAA;QACFwQ,MAAA,EAAQyB,EAAA;QACRxB,SAAA,GAAYuB,EAAA;QACZtB,OAAA,EAASsB,EAAA,QAAU,IAAY;MAAA;MAG7ByB,EAAA,GAAc1T,CAAA,CAChB;QAAA,OAAO;UACHgD,YAAA,EAAAiI,EAAA;UACAhI,WAAA,EAAAoJ,EAAA;UACApE,WAAA,EAAAnG,CAAA;UACAyB,aAAA,EAAA0K,EAAA;UACA/F,cAAA,EAAAvG,CAAA;UACAwG,eAAA,EAAA1B,CAAA;UACAhD,OAAA,EAAAgL,EAAA;UACA9K,YAAA,EAAAqL,EAAA;UACApL,YAAA,EAAAqL,EAAA;UACAzD,eAAA,EAAA0H,EAAA;UACArP,OAAA,EAAA0K,EAAA;UACAxK,WAAA,EAAA2L,EAAA;UACAzL,SAAA,EAAWoN,EAAA;UACXnN,cAAA,EAAgBqN,EAAA;UAChBpN,eAAA,EAAiBsN;QAAA,CACpB;MAAA,GACD,CACIxG,EAAA,EACAoB,EAAA,EACAvK,CAAA,EACAoR,EAAA,EACAjF,EAAA,EACAxH,CAAA,EACA9E,CAAA,EACA8M,EAAA,EACAO,EAAA,EACAC,EAAA,EACAV,EAAA,EACAmB,EAAA,EACA2B,EAAA,EACAE,EAAA,EACAE,EAAA;MAIFkC,EAAA,GAAYrR,CAAA,CAASkI,EAAA,EAAMsI,EAAA,EAAMnI,EAAA,EAAM;QACzCiJ,OAAA,EAAS;QACTC,SAAA,EAAW;MAAA;MAGTnJ,EAAA,GAA2C;QAC7C/K,WAAA,EAAa;QACbmU,IAAA,EAAM;QACNrU,IAAA,EAAM;QACNsU,IAAA,EAAM;QACN/S,OAAA,EAAS;QACT6H,OAAA,EAAS;QACTmL,MAAA,EAAQ;MAAA;IAGRrP,CAAA,CAAOgI,QAAA,CAAS,mBAChBjC,EAAA,CAAU/K,WAAA,GACNa,CAAA,CAACnB,CAAA,EAAc;MAAmBI,IAAA,EAAMqT,EAAA;MAAMnT,WAAA,EAAauN;IAAA,GAAvC,iBAIxBvI,CAAA,CAAOgI,QAAA,CAAS,YAChBjC,EAAA,CAAUoJ,IAAA,GACNtT,CAAA,CAACjB,CAAA,EAAI;MAEDkM,MAAA,EAAQuH,EAAA;MACRtH,MAAA,EAAQuH,EAAA;MACRhT,KAAA,EAAOwS,EAAA;MACPtS,MAAA,EAAQwS,EAAA;MACRvG,GAAA,EAAK1I,CAAA;MACLuQ,KAAA,EAAOpU,CAAA;MACPqU,MAAA,EAAQpQ,CAAA;MACRqI,IAAA,EAAM1L;IAAA,GARF,UAaZkE,CAAA,CAAOgI,QAAA,CAAS,YAChBjC,EAAA,CAAUjL,IAAA,GACNe,CAAA,CAAC4C,CAAA,EAAQ;MAAA1C,QAAA,EACJ+S,EAAA,CAAW,UAAClU,CAAA,EAAOC,CAAA;QAAG,OACnBsF,CAAA,CAAcC,CAAA,EAAYlE,CAAA,KACnB6S,EAAA,EAAW;UACd7R,GAAA,EAAArC,CAAA;UACAuC,KAAA,EAAAxC,CAAA;UACA8D,iBAAA,EAAmBgQ,EAAA,CAAqB7T,CAAA;UACxC2D,KAAA,EAAOyH,EAAA,CAASpL,CAAA,CAAIM,IAAA;QAAA;MAAA;IAAA,GAPlB,UAclB6E,CAAA,CAAOgI,QAAA,CAAS,YAChBjC,EAAA,CAAUqJ,IAAA,GACNvT,CAAA,CAAChB,CAAA,EAAI;MAEDS,KAAA,EAAOwS,EAAA;MACPtS,MAAA,EAAQwS,EAAA;MACRlH,MAAA,EAAQnK,CAAA,GAAc0R,EAAA,GAAS;MAC/BtH,MAAA,EAAQrH,CAAA,GAAc4O,EAAA,GAAS;MAC/BkB,OAAA,EAAS5P,CAAA;MACT6P,OAAA,EAAS9P;IAAA,GANL,UAWZK,CAAA,CAAOgI,QAAA,CAAS,eAChBjC,EAAA,CAAU1J,OAAA,GACNR,CAAA,CAACM,CAAA,EAAU;MAEPb,KAAA,EAAOwS,EAAA;MACPtS,MAAA,EAAQwS,EAAA;MACR3R,OAAA,EAASuS,EAAA;MACTrS,WAAA,EAAaoS;IAAA,GAJT,aASZ3O,CAAA,CAAOgI,QAAA,CAAS,eAChBjC,EAAA,CAAU7B,OAAA,GACNrI,CAAA,CAACgC,CAAA,EAAgB;MAEbqG,OAAA,EAASc,EAAA;MACT1J,KAAA,EAAOwS,EAAA;MACPtS,MAAA,EAAQwS,EAAA;MACRlH,MAAA,EAAQuH,EAAA;MACRtH,MAAA,EAAQuH;IAAA,GALJ,aAUZtO,CAAA,CAAOgI,QAAA,CAAS,aAAakF,EAAA,KAC7BnH,EAAA,CAAUsJ,MAAA,GACNxT,CAAA,CAACuO,EAAA,EAAS;MAENjP,IAAA,EAAM0T,EAAA;MACNnD,YAAA,EAAc6B,EAAA;MACd9I,OAAA,EAAS6I,EAAA;MACT9K,MAAA,EAAQrE;IAAA,GAJJ;IAShB,IAAMuR,EAAA,GAA8CrU,CAAA,CAChD;MAAA,OAAAa,CAAA,KACO6S,EAAA,EAAW;QACd/H,MAAA,EAAA6G,EAAA;QACAvS,KAAA,EAAAoB,CAAA;QACAlB,MAAA,EAAA8B,CAAA;QACAyQ,UAAA,EAAAD,EAAA;QACAG,WAAA,EAAAD,EAAA;QACAlT,IAAA,EAAAqT,EAAA;QACAwB,UAAA,EAAYf,EAAA;QACZtL,WAAA,EAAAnG,CAAA;QACA2J,MAAA,EAAAuH,EAAA;QACAtH,MAAA,EAAAuH,EAAA;QACApP,OAAA,EAAA0K,EAAA;QACA/C,eAAA,EAAA0H,EAAA;QACAzP,OAAA,EAAAgL,EAAA;QACA9K,YAAA,EAAAqL,EAAA;QACApL,YAAA,EAAAqL;MAAA,EAAY;IAAA,GAEhB,CACIyE,EAAA,EACAlB,EAAA,EACAnR,CAAA,EACAY,CAAA,EACAwQ,EAAA,EACAE,EAAA,EACAG,EAAA,EACAS,EAAA,EACAzR,CAAA,EACAkR,EAAA,EACAC,EAAA,EACA1E,EAAA,EACA2E,EAAA,EACAzE,EAAA,EACAO,EAAA,EACAC,EAAA;IAIR,OACIzO,CAAA,CAACkC,CAAA,EAAU;MACPzC,KAAA,EAAOmS,EAAA;MACPjS,MAAA,EAAQmS,EAAA;MACR3G,MAAA,EAAQ6G,EAAA;MACRrJ,IAAA,EAAMwK,EAAA;MACNrK,IAAA,EAAM8F,EAAA;MACNnL,SAAA,EAAWoL,EAAA;MACXnL,cAAA,EAAgBoL,EAAA;MAChBnL,eAAA,EAAiBoL,EAAA;MACjBxL,WAAA,EAAa2L,EAAA;MAAYhP,QAAA,EAExBiE,CAAA,CAAOhE,GAAA,CAAI,UAACpB,CAAA,EAAOC,CAAA;QAAM,IAAAE,CAAA;QACtB,OAAqB,qBAAVH,CAAA,GACAiB,CAAA,CAAC4C,CAAA,EAAQ;UAAA1C,QAAA,EAAUoE,CAAA,CAAcvF,CAAA,EAAO8U,EAAA;QAAA,GAAzB7U,CAAA,IAGD,SAAzBE,CAAA,GAAO,QAAAgL,EAAA,YAAAA,EAAA,CAAYnL,CAAA,KAAMG,CAAA,GAAI;MAAA;IAAA,EAI7C;EAAA;EAEawP,EAAA,GAAM,SAAAqF,CAAHhV,CAAA;IAAA,IAAAC,CAAA,GAAAD,CAAA,CACZgE,aAAA;MAAA7D,CAAA,QAAa,MAAAF,CAAA,GAAGwJ,EAAA,CAAgBzF,aAAA,GAAa/D,CAAA;MAAAI,CAAA,GAAAL,CAAA,CAC7C6J,OAAA;MAAAnI,CAAA,QAAO,MAAArB,CAAA,GAAGoJ,EAAA,CAAgBI,OAAA,GAAOxJ,CAAA;MAAAuB,CAAA,GAAA5B,CAAA,CACjC8J,YAAA;MAAAjI,CAAA,QAAY,MAAAD,CAAA,GAAG6H,EAAA,CAAgBK,YAAA,GAAYlI,CAAA;MAC3CE,CAAA,GAAK9B,CAAA,CAAL+I,KAAA;MACAnG,CAAA,GAAa5C,CAAA,CAAbiV,aAAA;MACGpS,CAAA,GAAUN,CAAA,CAAAvC,CAAA,EAAAyP,EAAA;IAAA,OAEbxO,CAAA,CAACyB,CAAA,EAAS;MAEFmH,OAAA,EAAAnI,CAAA;MACAsC,aAAA,EAAA7D,CAAA;MACA2J,YAAA,EAAAjI,CAAA;MACAoT,aAAA,EAAArS,CAAA;MACAmG,KAAA,EAAAjH,CAAA;MAAKX,QAAA,EAGTF,CAAA,CAACyO,EAAA,EAAQpO,CAAA;QAAW0C,aAAA,EAAe7D;MAAA,GAAmB0C,CAAA;IAAA,EAC9C;EAAA;EAAA+M,EAAA;ECjaVC,EAAA,GAAqB,SAAAqF,CACvBlV,CAAA,EACAC,CAAA,EACAE,CAAA,EACAE,CAAA;IAAS,OAETL,CAAA,CAAMiQ,IAAA,CAAK,UAAAjQ,CAAA;MAAI,OACXuD,CAAA,CAAevD,CAAA,CAAKS,CAAA,GAAIR,CAAA,CAAO2M,IAAA,EAAM5M,CAAA,CAAKW,CAAA,GAAIV,CAAA,CAAO4M,GAAA,EAAK7M,CAAA,CAAKU,KAAA,EAAOV,CAAA,CAAKY,MAAA,EAAQT,CAAA,EAAGE,CAAA,CAAE;IAAA,EAC3F;EAAA;AAoBL,IAAMyP,EAAA,GAAiB,SAAAqF,CAAHnV,CAAA;IAqHiB,IApHjCC,CAAA,GAAID,CAAA,CAAJO,IAAA;MACAqB,CAAA,GAAO5B,CAAA,CAAPyH,OAAA;MACA5F,CAAA,GAAI7B,CAAA,CAAJ0H,IAAA;MAEQhF,CAAA,GAAa1C,CAAA,CAArBoM,MAAA;MACAxJ,CAAA,GAAK5C,CAAA,CAALU,KAAA;MACAqC,CAAA,GAAM/C,CAAA,CAANY,MAAA;MAEAqC,CAAA,GAASjD,CAAA,CAAT2H,SAAA;MACAxE,CAAA,GAAMnD,CAAA,CAAN4H,MAAA;MACArE,CAAA,GAAOvD,CAAA,CAAP6H,OAAA;MACArE,CAAA,GAAQxD,CAAA,CAAR8H,QAAA;MACAhC,CAAA,GAAQ9F,CAAA,CAAR+H,QAAA;MAEA/B,CAAA,GAAUhG,CAAA,CAAVgI,UAAA;MACArH,CAAA,GAAUX,CAAA,CAAVkI,UAAA;MAEAvE,CAAA,GAAO3D,CAAA,CAAPoI,OAAA;MACAvE,CAAA,GAAY7D,CAAA,CAAZqI,YAAA;MAEAtE,CAAA,GAAO/D,CAAA,CAAP0R,OAAA;MACArQ,CAAA,GAASrB,CAAA,CAAT2R,SAAA;MAASzQ,CAAA,GAAAlB,CAAA,CACTsI,UAAA;MAAAzC,CAAA,QAAU,MAAA3E,CAAA,GAAG8I,EAAA,CAAmB1B,UAAA,GAAUpH,CAAA;MAAAa,CAAA,GAAA/B,CAAA,CAC1CuI,QAAA;MAAAzD,CAAA,QAAQ,MAAA/C,CAAA,GAAGiI,EAAA,CAAmBzB,QAAA,GAAQxG,CAAA;MAAAiD,CAAA,GAAAhF,CAAA,CACtCwI,WAAA;MAAAtD,CAAA,QAAW,MAAAF,CAAA,GAAGgF,EAAA,CAAmBxB,WAAA,GAAWxD,CAAA;MAAAI,CAAA,GAAApF,CAAA,CAC5CyI,WAAA;MAAAnD,CAAA,QAAW,MAAAF,CAAA,GAAG4E,EAAA,CAAmBvB,WAAA,GAAWrD,CAAA;MAC5CI,CAAA,GAAWxF,CAAA,CAAX4R,WAAA;MACAlM,CAAA,GAAW1F,CAAA,CAAX6R,WAAA;MAAWtP,CAAA,GAAAvC,CAAA,CAEX0J,MAAA;MAAA7J,CAAA,QAAM,MAAA0C,CAAA,GAAGyH,EAAA,CAAmBN,MAAA,GAAMnH,CAAA;MAAAzC,CAAA,GAAAE,CAAA,CAClCoV,SAAA;MAAA7T,CAAA,QAAS,MAAAzB,CAAA,GAAG,UACRE,CAAA,EAAGC,CAAA;QAWF,IAAAE,CAAA,GAAAF,CAAA,CATGqC,GAAA;UAAOjC,CAAA,GAAKF,CAAA,CAALwC,KAAA;UAAOjB,CAAA,GAAMvB,CAAA,CAANS,MAAA;UAAQgB,CAAA,GAAKzB,CAAA,CAALO,KAAA;UAAOmB,CAAA,GAAC1B,CAAA,CAADM,CAAA;UAAGqB,CAAA,GAAC3B,CAAA,CAADQ,CAAA;UAEhC+B,CAAA,GAAWzC,CAAA,CAAXwC,WAAA;UACAG,CAAA,GAAY3C,CAAA,CAAZwD,YAAA;UACAZ,CAAA,GAAW5C,CAAA,CAAXyD,WAAA;UACAX,CAAA,GAAK9C,CAAA,CAAL2D,KAAA;UACAX,CAAA,GAAUhD,CAAA,CAAV6C,UAAA;UACAK,CAAA,GAAiBlD,CAAA,CAAjB6D,iBAAA;QAYJ,IATA9D,CAAA,CAAIqV,SAAA,GAAYhV,CAAA,EAEZwC,CAAA,GAAc,MACd7C,CAAA,CAAIsV,WAAA,GAAc5S,CAAA,EAClB1C,CAAA,CAAIuV,SAAA,GAAY1S,CAAA,GAGpB7C,CAAA,CAAIwV,SAAA,IAEA5S,CAAA,GAAe,GAAG;UAClB,IAAMS,CAAA,GAAStC,IAAA,CAAKwJ,GAAA,CAAI3H,CAAA,EAAclB,CAAA;UAEtC1B,CAAA,CAAIyV,MAAA,CAAO5T,CAAA,GAAIwB,CAAA,EAAQvB,CAAA,GACvB9B,CAAA,CAAI0V,MAAA,CAAO7T,CAAA,GAAID,CAAA,GAAQyB,CAAA,EAAQvB,CAAA,GAC/B9B,CAAA,CAAI2V,gBAAA,CAAiB9T,CAAA,GAAID,CAAA,EAAOE,CAAA,EAAGD,CAAA,GAAID,CAAA,EAAOE,CAAA,GAAIuB,CAAA,GAClDrD,CAAA,CAAI0V,MAAA,CAAO7T,CAAA,GAAID,CAAA,EAAOE,CAAA,GAAIJ,CAAA,GAAS2B,CAAA,GACnCrD,CAAA,CAAI2V,gBAAA,CAAiB9T,CAAA,GAAID,CAAA,EAAOE,CAAA,GAAIJ,CAAA,EAAQG,CAAA,GAAID,CAAA,GAAQyB,CAAA,EAAQvB,CAAA,GAAIJ,CAAA,GACpE1B,CAAA,CAAI0V,MAAA,CAAO7T,CAAA,GAAIwB,CAAA,EAAQvB,CAAA,GAAIJ,CAAA,GAC3B1B,CAAA,CAAI2V,gBAAA,CAAiB9T,CAAA,EAAGC,CAAA,GAAIJ,CAAA,EAAQG,CAAA,EAAGC,CAAA,GAAIJ,CAAA,GAAS2B,CAAA,GACpDrD,CAAA,CAAI0V,MAAA,CAAO7T,CAAA,EAAGC,CAAA,GAAIuB,CAAA,GAClBrD,CAAA,CAAI2V,gBAAA,CAAiB9T,CAAA,EAAGC,CAAA,EAAGD,CAAA,GAAIwB,CAAA,EAAQvB,CAAA,GACvC9B,CAAA,CAAI4V,SAAA,EACR;QAAA,OACI5V,CAAA,CAAI+F,IAAA,CAAKlE,CAAA,EAAGC,CAAA,EAAGF,CAAA,EAAOF,CAAA;QAG1B1B,CAAA,CAAImG,IAAA,IAEAtD,CAAA,GAAc,KACd7C,CAAA,CAAIqG,MAAA,IAGJlD,CAAA,KACAnD,CAAA,CAAI6V,YAAA,GAAe,UACnB7V,CAAA,CAAI8V,SAAA,GAAY,UAChB9V,CAAA,CAAIqV,SAAA,GAAYpS,CAAA,EAChBjD,CAAA,CAAI+V,QAAA,CAAShT,CAAA,EAAOlB,CAAA,GAAID,CAAA,GAAQ,GAAGE,CAAA,GAAIJ,CAAA,GAAS,GAExD;MAAA,IAAC5B,CAAA;MAAAqC,CAAA,GAAAnC,CAAA,CAED0I,WAAA;MAAAtG,CAAA,QAAW,MAAAD,CAAA,GAAG6H,EAAA,CAAmBtB,WAAA,GAAWvG,CAAA;MAC5C8E,CAAA,GAAKjH,CAAA,CAAL4D,KAAA;MAAKsD,CAAA,GAAAlH,CAAA,CACL2I,cAAA;MAAAnB,EAAA,QAAc,MAAAN,CAAA,GAAG8C,EAAA,CAAmBrB,cAAA,GAAczB,CAAA;MAAAuC,EAAA,GAAAzJ,CAAA,CAClD4I,eAAA;MAAAwB,EAAA,QAAe,MAAAX,EAAA,GAAGO,EAAA,CAAmBpB,eAAA,GAAea,EAAA;MACpDe,EAAA,GAAcxK,CAAA,CAAd6I,cAAA;MAEA8B,EAAA,GAAO3K,CAAA,CAAPgJ,OAAA;MACA8B,EAAA,GAAM9K,CAAA,CAANiJ,MAAA;MAAMgC,EAAA,GAAAjL,CAAA,CACNyD,YAAA;MAAAyH,EAAA,QAAY,MAAAD,EAAA,GAAGjB,EAAA,CAAmBvG,YAAA,GAAYwH,EAAA;MAAAG,EAAA,GAAApL,CAAA,CAC9C0D,WAAA;MAAA4H,EAAA,QAAW,MAAAF,EAAA,GAAGpB,EAAA,CAAmBtG,WAAA,GAAW0H,EAAA;MAC5CM,EAAA,GAAW1L,CAAA,CAAXyC,WAAA;MAAWmJ,EAAA,GAAA5L,CAAA,CAEXI,WAAA;MAAA0M,EAAA,QAAW,MAAAlB,EAAA,GAAG5B,EAAA,CAAmB5J,WAAA,GAAWwL,EAAA;MAE5CoB,EAAA,GAAWhN,CAAA,CAAXyO,WAAA;MACAf,EAAA,GAAY1N,CAAA,CAAZmJ,YAAA;MAEAwE,EAAA,GAAW3N,CAAA,CAAXsP,WAAA;MAAWxB,EAAA,GAAA9N,CAAA,CAEXgE,aAAA;MAAAiK,EAAA,QAAa,MAAAH,EAAA,GAAG9D,EAAA,CAAmBhG,aAAA,GAAa8J,EAAA;MAAAK,EAAA,GAAAnO,CAAA,CAChDsE,OAAA;MAAAgK,EAAA,QAAO,MAAAH,EAAA,GAAGnE,EAAA,CAAmB1F,OAAA,GAAO6J,EAAA;MACpCO,EAAA,GAAO1O,CAAA,CAAPkE,OAAA;MACA4K,EAAA,GAAY9O,CAAA,CAAZoE,YAAA;MACA4K,EAAA,GAAYhP,CAAA,CAAZqE,YAAA;MAEA6K,EAAA,GAAOlP,CAAA,CAAPyB,OAAA;MAAO+N,EAAA,GAAAxP,CAAA,CAEPiK,UAAA;MAAAwF,EAAA,QAAU,MAAAD,EAAA,GAAGxF,EAAA,CAAmBC,UAAA,GAAUuF,EAAA;MAE1CE,EAAA,GAAS1P,CAAA,CAATgW,SAAA;MAASrG,EAAA,GAAA3P,CAAA,CAETuJ,YAAA;MAAAqG,EAAA,QAAY,MAAAD,EAAA,GAAG3F,EAAA,CAAmBT,YAAA,GAAYoG,EAAA;MAAAG,EAAA,GAAA9P,CAAA,CAC9CwJ,YAAA;MAAAuG,EAAA,QAAY,MAAAD,EAAA,GAAG9F,EAAA,CAAmBR,YAAA,GAAYsG,EAAA;MAExCE,EAAA,GAAW/L,CAAA,CAAiC;MAE5CiM,EAAA,GAAQxO,CAAA;MACdyO,EAAA,GAAqEtN,CAAA,CACjED,CAAA,EACAG,CAAA,EACAL,CAAA;MAHIoP,EAAA,GAAM3B,EAAA,CAAN/D,MAAA;MAAQ4F,EAAA,GAAU7B,EAAA,CAAVgD,UAAA;MAAYjB,EAAA,GAAW/B,EAAA,CAAXkD,WAAA;MAAajB,EAAA,GAAUjC,EAAA,CAAV2C,UAAA;MAAYT,EAAA,GAAWlC,EAAA,CAAX6C,WAAA;MAMrDV,EAAA,GAYIlD,EAAA,CAAiB;QACjB3H,OAAA,EAAA7F,CAAA;QACAgC,KAAA,EAAAqD,CAAA;QACAkC,YAAA,EAAAuE,EAAA;QACA4B,WAAA,EAAA3B,EAAA;QACA1E,MAAA,EAAA6B,EAAA;QACA9B,OAAA,EAAA2B,EAAA;QACAlI,WAAA,EAAAiJ,EAAA;QACA7C,cAAA,EAAA2B,EAAA;QACA7C,SAAA,EAAA1E,CAAA;QACA2E,MAAA,EAAAzE,CAAA;QACA0E,OAAA,EAAAtE,CAAA;QACAhD,IAAA,EAAAN,CAAA;QACAyH,IAAA,EAAA7F,CAAA;QACAiG,QAAA,EAAAtE,CAAA;QACAuE,QAAA,EAAAjC,CAAA;QACAsG,MAAA,EAAA0F,EAAA;QACApR,KAAA,EAAOsR,EAAA;QACPpR,MAAA,EAAQsR,EAAA;QACR9J,OAAA,EAAAzE,CAAA;QACA0E,YAAA,EAAAxE,CAAA;QACAmE,UAAA,EAAAhC,CAAA;QACAkC,UAAA,EAAAvH,CAAA;QACA+H,WAAA,EAAAtG,CAAA;QACAuG,cAAA,EAAAnB,EAAA;QACAoB,eAAA,EAAAwB,EAAA;QACA3I,OAAA,EAAAyN,EAAA;QACAT,WAAA,EAAAzB,EAAA;QACAxD,YAAA,EAAAuG;MAAA;MAvCAwC,EAAA,GAAID,EAAA,CAAJpS,IAAA;MACAsS,EAAA,GAAaF,EAAA,CAAbhC,aAAA;MACAmC,EAAA,GAAMH,EAAA,CAANpG,MAAA;MACAwG,EAAA,GAAMJ,EAAA,CAANnG,MAAA;MACAwG,EAAA,GAAQL,EAAA,CAAR/B,QAAA;MACAqC,EAAA,GAAeN,EAAA,CAAfrG,eAAA;MACA4G,EAAA,GAAcP,EAAA,CAAd9B,cAAA;MACAuC,EAAA,GAAaT,EAAA,CAAb7B,aAAA;MACAwC,EAAA,GAAoBX,EAAA,CAApB5B,oBAAA;MACAwC,EAAA,GAAeZ,EAAA,CAAf3B,eAAA;MACAyC,EAAA,GAASd,EAAA,CAAT1B,SAAA;MAgCJ0C,EAAA,GAA8CvO,CAAA;MAAtCwO,EAAA,GAAoBD,EAAA,CAApBrO,oBAAA;MAAsBuO,EAAA,GAAWF,EAAA,CAAXjO,WAAA;MAGxBoO,EAAA,GAAwBlP,CAAA,CAAuB;QACjDnE,WAAA,EAAaE,CAAA,CAAe;UACxBC,IAAA,EAAMgS,EAAA;UACNnS,WAAA,EAAA0M,EAAA;UACAtM,WAAA,EAAa,SAAAA,CAAAR,CAAA;YAAI,OAAK;cAClBS,CAAA,EAAGT,CAAA,CAAKS,CAAA;cACRE,CAAA,EAAGX,CAAA,CAAKW;YAAA,CACV;UAAA;UACFE,aAAA,EAAe,SAAAA,CAAAb,CAAA;YAAA,IAAGC,CAAA,GAAKD,CAAA,CAALU,KAAA;cAAOP,CAAA,GAAMH,CAAA,CAANY,MAAA;YAAM,OAAQ;cACnCF,KAAA,EAAAT,CAAA;cACAW,MAAA,EAAAT,CAAA;cACAW,IAAA,EAAMC,IAAA,CAAKC,GAAA,CAAIf,CAAA,EAAOE,CAAA;YAAA,CACzB;UAAA;QAAA;MAAA;MAKHuT,EAAA,GAAoDjT,CAAA,CACtD;QAAA,OAAO;UACHgD,YAAA,EAAAyH,EAAA;UACAxH,WAAA,EAAA4H,EAAA;UACAtH,aAAA,EAAAiK,EAAA;UACAzJ,WAAA,GAAa;UACbmE,cAAA,EAAAnB,EAAA;UACAoB,eAAA,EAAAwB,EAAA;UACAgC,MAAA,EAAA0F,EAAA;UACApR,KAAA,EAAAkC,CAAA;UACAhC,MAAA,EAAAmC,CAAA;UACAoQ,UAAA,EAAAnB,EAAA;UACAqB,WAAA,EAAAnB,EAAA;UACAhS,IAAA,EAAAqS,EAAA;UACAwC,UAAA,EAAY7B,EAAA;UACZxK,WAAA,EAAAtG,CAAA;UACA8J,MAAA,EAAAuG,EAAA;UACAtG,MAAA,EAAAuG,EAAA;UACApO,OAAA,EAAAgK,EAAA;UACArC,eAAA,EAAA2G,EAAA;UACA1O,OAAA,EAAAwK,EAAA;UACAtK,YAAA,EAAA0K,EAAA;UACAzK,YAAA,EAAA2K;QAAA,CACH;MAAA,GACD,CACI9D,EAAA,EACAI,EAAA,EACA2C,EAAA,EACAzG,EAAA,EACA4C,EAAA,EACA0H,EAAA,EACAlP,CAAA,EACAG,CAAA,EACAiP,EAAA,EACAE,EAAA,EACAK,EAAA,EACAW,EAAA,EACA9Q,CAAA,EACAqQ,EAAA,EACAC,EAAA,EACApE,EAAA,EACAsE,EAAA,EACAlE,EAAA,EACAI,EAAA,EACAE,EAAA;MAIF3D,EAAA,GAAcvJ,CAAA,CAAkB6L,EAAA;IAEtCxJ,CAAA,CAAU;MAAM,IAAAnE,CAAA;QACNC,CAAA,GAAsB,SAAnBD,CAAA,GAAGgQ,EAAA,CAASiG,OAAA,SAAO,IAAhBjW,CAAA,CAAkBkW,UAAA,CAAW;MAEpClG,EAAA,CAASiG,OAAA,IACThW,CAAA,KAEL+P,EAAA,CAASiG,OAAA,CAAQvV,KAAA,GAAQ0R,EAAA,GAAa3C,EAAA,EACtCO,EAAA,CAASiG,OAAA,CAAQrV,MAAA,GAASyR,EAAA,GAAc5C,EAAA,EAExCxP,CAAA,CAAIkW,KAAA,CAAM1G,EAAA,EAAYA,EAAA,GAEtBxP,CAAA,CAAIoV,SAAA,GAAYnF,EAAA,CAAMkG,UAAA,EACtBnW,CAAA,CAAIoW,QAAA,CAAS,GAAG,GAAGjE,EAAA,EAAYC,EAAA,GAC/BpS,CAAA,CAAIqW,SAAA,CAAUxE,EAAA,CAAOlF,IAAA,EAAMkF,EAAA,CAAOjF,GAAA,GAElChN,CAAA,CAAOwM,OAAA,CAAQ,UAAArM,CAAA;QACG,WAAVA,CAAA,GAlRuD,mBAmR1CkQ,EAAA,CAAMsE,IAAA,CAAK+B,IAAA,CAAKnQ,WAAA,IAAgB8J,EAAA,CAAMsE,IAAA,CAAK+B,IAAA,CAAKnQ,WAAA,GAAc,MACvEnG,CAAA,CAAIsV,SAAA,GAAYrF,EAAA,CAAMsE,IAAA,CAAK+B,IAAA,CAAKnQ,WAAA,EAChCnG,CAAA,CAAIqV,WAAA,GAAcpF,EAAA,CAAMsE,IAAA,CAAK+B,IAAA,CAAKlQ,MAAA,EAE9BnB,CAAA,IACA/E,CAAA,CAAyCF,CAAA,EAAK;UAC1CS,KAAA,EAAOsR,EAAA;UACPpR,MAAA,EAAQsR,EAAA;UACRiE,KAAA,EAAO1D,EAAA;UACP+D,IAAA,EAAM;UACNC,MAAA,EAAQjR;QAAA,IAIZF,CAAA,IACAnF,CAAA,CAAyCF,CAAA,EAAK;UAC1CS,KAAA,EAAOsR,EAAA;UACPpR,MAAA,EAAQsR,EAAA;UACRiE,KAAA,EAAOzD,EAAA;UACP8D,IAAA,EAAM;UACNC,MAAA,EAAQ/Q;QAAA,MAIH,WAAV1F,CAAA,GACPK,CAAA,CAAmBJ,CAAA,EAAK;UACpBiM,MAAA,EAAQuG,EAAA;UACRtG,MAAA,EAAQuG,EAAA;UACRhS,KAAA,EAAOsR,EAAA;UACPpR,MAAA,EAAQsR,EAAA;UACRrF,GAAA,EAAK9I,CAAA;UACL2Q,KAAA,EAAOrT,CAAA;UACPsT,MAAA,EAAQ9O,CAAA;UACR+G,IAAA,EAAM9H,CAAA;UACNiE,KAAA,EAAAmH;QAAA,KAEa,WAAVlQ,CAAA,GACPwS,EAAA,CAAcnG,OAAA,CAAQ,UAAArM,CAAA;UAClBuB,CAAA,CAAUtB,CAAA,EAAK;YACXqC,GAAA,EAAAtC,CAAA;YACAyC,WAAA,EAAaoQ,EAAA,CAAe7S,CAAA;YAC5ByD,YAAA,EAAAyH,EAAA;YACAxH,WAAA,EAAA4H,EAAA;YACA1H,KAAA,EAAO+O,EAAA,CAAS3S,CAAA,CAAIO,IAAA;YACpBuC,UAAA,EAAYiQ,EAAA,CAAc/S,CAAA;YAC1B8D,iBAAA,EAAmBmP,EAAA,CAAqBjT,CAAA;UAAA,EAEhD;QAAA,KACiB,cAAVA,CAAA,GACPkT,EAAA,CAAgB7G,OAAA,CAAQ,UAAArM,CAAA;UAAoB,IAAlBG,CAAA,GAAMH,CAAA;YAAEK,CAAA,GAAIL,CAAA;UAClC6E,CAAA,CAAqB5E,CAAA,EAAGqB,CAAA,KACjBnB,CAAA,EAAM;YACTI,IAAA,EAAAF,CAAA;YACA2B,cAAA,EAAgBgQ,EAAA;YAChB/P,eAAA,EAAiBiQ,EAAA;YACjBnJ,KAAA,EAAAmH;UAAA,GAER;QAAA,KACiB,kBAAVlQ,CAAA,GACPyE,CAAA,CAA0BxE,CAAA,EAAK;UAAEG,WAAA,EAAaqT,EAAA;UAAkB1K,KAAA,EAAAmH;QAAA,KAC/C,aAAVlQ,CAAA,IAAsB4P,EAAA,GA7U7C,UACI5P,CAAA,EACAC,CAAA,EACAE,CAAA,EACAE,CAAA;UAAA,KAA0C,MAA1CA,CAAA,KAAAA,CAAA,GAA6C2J,EAAA,CAAmBpC,MAAA,GAEhE5H,CAAA,CAAIqV,SAAA,GAAYlV,CAAA,CAAMwG,IAAA,CAAKR,IAAA,EAC3BnG,CAAA,CAAI0W,IAAA,GAAI,UAAWvW,CAAA,CAAM4G,MAAA,CAAOJ,IAAA,CAAK2K,QAAA,WAAcnR,CAAA,CAAM4G,MAAA,CAAOJ,IAAA,CAAK4K,UAAA,EACrEvR,CAAA,CAAI6V,YAAA,GAA0B,eAAXxV,CAAA,GAAwB,eAAe,UAC1DL,CAAA,CAAI8V,SAAA,GAAuB,eAAXzV,CAAA,GAAwB,WAAW,SAEnDJ,CAAA,CAAUoM,OAAA,CAAQ,UAAApM,CAAA;YACdD,CAAA,CAAI+V,QAAA,CAAS9V,CAAA,CAASqH,cAAA,EAAgBrH,CAAA,CAASQ,CAAA,EAAGR,CAAA,CAASU,CAAA,CAC/D;UAAA,EACJ;QAAA,CAgUgB,CAAqBV,CAAA,EAAKmT,EAAA,EAAWlD,EAAA,EAAO/M,CAAA,IACpB,qBAAVnD,CAAA,IACdA,CAAA,CAAMC,CAAA,EAAKyT,EAAA,CAEnB;MAAA,IAEAzT,CAAA,CAAI0W,IAAA,GACR;IAAA,GAAG,CACC9Q,CAAA,EACAf,CAAA,EACAzD,CAAA,EACA0C,CAAA,EACAyO,EAAA,EACAtH,EAAA,EACAI,EAAA,EACAmI,EAAA,EACAvO,CAAA,EACAI,CAAA,EACAuN,EAAA,EACAF,EAAA,EACAI,EAAA,EACAvN,CAAA,EACAE,CAAA,EACAzC,CAAA,EACAF,CAAA,EACAmP,EAAA,EACAF,EAAA,EACA0B,EAAA,EACA7T,CAAA,EACAsD,CAAA,EACA+P,EAAA,EACApB,EAAA,CAAOlF,IAAA,EACPkF,EAAA,CAAOjF,GAAA,EACPwF,EAAA,EACAD,EAAA,EACA3C,EAAA,EACAlO,CAAA,EACAkR,EAAA,EACAC,EAAA,EACAnP,CAAA,EACA0P,EAAA,EACA/C,EAAA,EACAtN,CAAA,EACAwQ,EAAA,EACAxD,EAAA,EACAvE,EAAA;IAGJ,IAAMsI,EAAA,GAAmBlO,CAAA,CACrB,UAACzF,CAAA;QACG,IAAKuS,EAAA,IACAvC,EAAA,CAASiG,OAAA,EAAd;UAEA,IAAAhW,CAAA,GAAeoD,CAAA,CAAkB2M,EAAA,CAASiG,OAAA,EAASjW,CAAA;YAA5CG,CAAA,GAACF,CAAA;YAAEI,CAAA,GAACJ,CAAA;YACLyB,CAAA,GAAMmO,EAAA,CAAmB0C,EAAA,EAAMT,EAAA,EAAQ3R,CAAA,EAAGE,CAAA;UAAA,KAEpC,MAARqB,CAAA,IACA6R,EAAA,CACIhO,CAAA,CAAc+I,EAAA,EAAOhN,CAAA,KACdI,CAAA,CAAInB,IAAA,EAAI;YACXoC,KAAA,EAAOjB,CAAA,CAAIiB,KAAA;YACXiB,KAAA,EAAOlC,CAAA,CAAIkC,KAAA;YACXyD,KAAA,EAAO2D,MAAA,CAAOtJ,CAAA,CAAInB,IAAA,CAAK8G,KAAA;UAAA,KAE3BrH,CAAA,GAGe,iBAAfA,CAAA,CAAMiI,IAAA,KACM,QAAZ6G,EAAA,IAAAA,EAAA,CAAepN,CAAA,CAAInB,IAAA,EAAMP,CAAA,MAG7BwT,EAAA,EApBmB;QAAA;MAsB3B,GACA,CAACA,EAAA,EAAa1B,EAAA,EAAQhD,EAAA,EAAcyD,EAAA,EAAMgB,EAAA,EAAsBjF,EAAA;MAG9DsF,EAAA,GAAmBnO,CAAA,CACrB,UAACzF,CAAA;QACG,IAAKuS,EAAA,IACAvC,EAAA,CAASiG,OAAA,EAAd;UAEAzC,EAAA;UAEA,IAAAvT,CAAA,GAAeoD,CAAA,CAAkB2M,EAAA,CAASiG,OAAA,EAASjW,CAAA;YAA5CG,CAAA,GAACF,CAAA;YAAEI,CAAA,GAACJ,CAAA;YACLyB,CAAA,GAAMmO,EAAA,CAAmB0C,EAAA,EAAMT,EAAA,EAAQ3R,CAAA,EAAGE,CAAA;UAE5CqB,CAAA,KACY,QAAZsN,EAAA,IAAAA,EAAA,CAAetN,CAAA,CAAInB,IAAA,EAAMP,CAAA,EARN;QAAA;MAU1B,GACD,CAACwT,EAAA,EAAa1B,EAAA,EAAQ9C,EAAA,EAAcuD,EAAA;MAGlCsB,EAAA,GAAcpO,CAAA,CAChB,UAACzF,CAAA;QACG,IAAKuS,EAAA,IACAvC,EAAA,CAASiG,OAAA,EAAd;UAEA,IAAAhW,CAAA,GAAeoD,CAAA,CAAkB2M,EAAA,CAASiG,OAAA,EAASjW,CAAA;YAA5CG,CAAA,GAACF,CAAA;YAAEI,CAAA,GAACJ,CAAA;YACLyB,CAAA,GAAMmO,EAAA,CAAmB0C,EAAA,EAAMT,EAAA,EAAQ3R,CAAA,EAAGE,CAAA;UAAA,KAEpC,MAARqB,CAAA,aACAgN,EAAA,IAAAA,EAAA,CAAOpN,CAAA,CAAQ,IAAAI,CAAA,CAAInB,IAAA,EAAI;YAAEoC,KAAA,EAAOjB,CAAA,CAAIiB;UAAA,IAAS3C,CAAA,EAN1B;QAAA;MAQ1B,GACD,CAAC8R,EAAA,EAAQpD,EAAA,EAAS6D,EAAA;IAGtB,OACItR,CAAA;MACI2V,GAAA,EAAK,SAAAA,CAAA5W,CAAA;QACDgQ,EAAA,CAASiG,OAAA,GAAUjW,CAAA,EACf0P,EAAA,IAAa,aAAaA,EAAA,KAAWA,EAAA,CAAUuG,OAAA,GAAUjW,CAAA,CAC/D;MAAA;MACFU,KAAA,EAAO0R,EAAA,GAAa3C,EAAA;MACpB7O,MAAA,EAAQyR,EAAA,GAAc5C,EAAA;MACtBjN,KAAA,EAAO;QACH9B,KAAA,EAAO0R,EAAA;QACPxR,MAAA,EAAQyR,EAAA;QACRwE,MAAA,EAAQ5I,EAAA,GAAgB,SAAS;MAAA;MAErC7J,YAAA,EAAc6J,EAAA,GAAgB0F,EAAA,QAAmB;MACjDnN,WAAA,EAAayH,EAAA,GAAgB0F,EAAA,QAAmB;MAChDtP,YAAA,EAAc4J,EAAA,GAAgB2F,EAAA,QAAmB;MACjD1P,OAAA,EAAS+J,EAAA,GAAgB4F,EAAA,QAAc;IAAA,EAGnD;EAAA;EAEa9D,EAAA,GAAYhM,CAAA,CACrB,UAAA/D,CAAA,EAEIC,CAAA;IAAoC,IADlCE,CAAA,GAAaH,CAAA,CAAbgE,aAAA;MAAe3D,CAAA,GAAaL,CAAA,CAAbiV,aAAA;MAAevT,CAAA,GAAK1B,CAAA,CAAL+I,KAAA;MAAUnH,CAAA,GAAKW,CAAA,CAAAvC,CAAA,EAAA4P,EAAA;IAAA,OAG/C3O,CAAA,CAACyB,CAAA,EAAS;MAAOsB,aAAA,EAAA7D,CAAA;MAAe8U,aAAA,EAAA5U,CAAA;MAAe0I,KAAA,EAAArH,CAAA;MAASmI,OAAA,GAAS;MAAM1I,QAAA,EACnEF,CAAA,CAAC6O,EAAA,EAAcxO,CAAA,KAAeM,CAAA,EAAK;QAAEoU,SAAA,EAAW/V;MAAA;IAAA,EACxC;EAAA;ECxgBP+P,EAAA,GAAgB,SAAA8G,CACzB9W,CAAA;IAAsC,OAEtCiB,CAAA,CAACuC,CAAA,EAAiB;MAAArC,QAAA,EACb,SAAAA,CAAAlB,CAAA;QAAA,IAAGE,CAAA,GAAKF,CAAA,CAALS,KAAA;UAAOL,CAAA,GAAMJ,CAAA,CAANW,MAAA;QAAM,OAAOK,CAAA,CAAC0O,EAAA,EAAGrO,CAAA;UAAWZ,KAAA,EAAOP,CAAA;UAAOS,MAAA,EAAQP;QAAA,GAAYL,CAAA,EAAS;MAAA;IAAA,EAClE;EAAA;ECJXkQ,EAAA,GAAsBnM,CAAA,CAAW,UAE5C/D,CAAA,EAA2CC,CAAA;IACzC,OACIgB,CAAA,CAACuC,CAAA,EAAiB;MAAArC,QAAA,EACb,SAAAA,CAAAhB,CAAA;QAAA,IAAGE,CAAA,GAAKF,CAAA,CAALO,KAAA;UAAOgB,CAAA,GAAMvB,CAAA,CAANS,MAAA;QAAM,OACbK,CAAA,CAAC8O,EAAA,EAASzO,CAAA;UACNZ,KAAA,EAAOL,CAAA;UACPO,MAAA,EAAQc;QAAA,GACH1B,CAAA,EAAK;UACV4W,GAAA,EAAK3W;QAAA,GACP;MAAA;IAAA,EAIlB;EAAA;AAAA,SAAA0P,EAAA,IAAAqF,GAAA,EAAAjF,EAAA,IAAAgH,SAAA,EAAA3U,CAAA,IAAAC,OAAA,EAAA6E,CAAA,IAAAC,UAAA,EAAAqI,EAAA,IAAAqB,SAAA,EAAAb,EAAA,IAAA8G,aAAA,EAAA5G,EAAA,IAAA8G,mBAAA,EAAAhN,EAAA,IAAAiN,kBAAA,EAAAzP,EAAA,IAAA0P,YAAA,EAAAzN,EAAA,IAAA0N,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}