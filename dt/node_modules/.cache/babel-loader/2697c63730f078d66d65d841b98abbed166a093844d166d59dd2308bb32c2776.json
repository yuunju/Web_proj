{"ast":null,"code":"import * as t from \"react\";\nimport { memo as e, useMemo as i, useCallback as n, createElement as r } from \"react\";\nimport { textPropsByEngine as a, useTheme as o, sanitizeSvgTextStyle as l, useMotionConfig as s, degreesToRadians as c } from \"@nivo/core\";\nimport { animated as f, useSpring as u, useTransition as d } from \"@react-spring/web\";\nimport { timeFormat as x } from \"d3-time-format\";\nimport { format as m } from \"d3-format\";\nimport { getScaleTicks as y, centerScale as h } from \"@nivo/scales\";\nimport { jsxs as k, jsx as g, Fragment as v } from \"react/jsx-runtime\";\nfunction p() {\n  return p = Object.assign ? Object.assign.bind() : function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n    return t;\n  }, p.apply(this, arguments);\n}\nvar b = function (t) {\n    var e,\n      i = t.axis,\n      n = t.scale,\n      r = t.ticksPosition,\n      o = t.tickValues,\n      l = t.tickSize,\n      s = t.tickPadding,\n      c = t.tickRotation,\n      f = t.truncateTickAt,\n      u = t.engine,\n      d = void 0 === u ? \"svg\" : u,\n      x = y(n, o),\n      m = a[d],\n      k = \"bandwidth\" in n ? h(n) : n,\n      g = {\n        lineX: 0,\n        lineY: 0\n      },\n      v = {\n        textX: 0,\n        textY: 0\n      },\n      b = \"object\" == typeof document && \"rtl\" === document.dir,\n      P = m.align.center,\n      T = m.baseline.center;\n    \"x\" === i ? (e = function (t) {\n      var e;\n      return {\n        x: null != (e = k(t)) ? e : 0,\n        y: 0\n      };\n    }, g.lineY = l * (\"after\" === r ? 1 : -1), v.textY = (l + s) * (\"after\" === r ? 1 : -1), T = \"after\" === r ? m.baseline.top : m.baseline.bottom, 0 === c ? P = m.align.center : \"after\" === r && c < 0 || \"before\" === r && c > 0 ? (P = m.align[b ? \"left\" : \"right\"], T = m.baseline.center) : (\"after\" === r && c > 0 || \"before\" === r && c < 0) && (P = m.align[b ? \"right\" : \"left\"], T = m.baseline.center)) : (e = function (t) {\n      var e;\n      return {\n        x: 0,\n        y: null != (e = k(t)) ? e : 0\n      };\n    }, g.lineX = l * (\"after\" === r ? 1 : -1), v.textX = (l + s) * (\"after\" === r ? 1 : -1), P = \"after\" === r ? m.align.left : m.align.right);\n    return {\n      ticks: x.map(function (t) {\n        var i = \"string\" == typeof t ? function (t) {\n          var e = String(t).length;\n          return f && f > 0 && e > f ? \"\" + String(t).slice(0, f).concat(\"...\") : \"\" + t;\n        }(t) : t;\n        return p({\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          value: i\n        }, e(t), g, v);\n      }),\n      textAlign: P,\n      textBaseline: T\n    };\n  },\n  P = function (t, e) {\n    if (void 0 === t || \"function\" == typeof t) return t;\n    if (\"time\" === e.type) {\n      var i = x(t);\n      return function (t) {\n        return i(t instanceof Date ? t : new Date(t));\n      };\n    }\n    return m(t);\n  },\n  T = function (t) {\n    var e,\n      i = t.width,\n      n = t.height,\n      r = t.scale,\n      a = t.axis,\n      o = t.values,\n      l = (e = o, Array.isArray(e) ? o : void 0) || y(r, o),\n      s = \"bandwidth\" in r ? h(r) : r,\n      c = \"x\" === a ? l.map(function (t) {\n        var e, i;\n        return {\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          x1: null != (e = s(t)) ? e : 0,\n          x2: null != (i = s(t)) ? i : 0,\n          y1: 0,\n          y2: n\n        };\n      }) : l.map(function (t) {\n        var e, n;\n        return {\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          x1: 0,\n          x2: i,\n          y1: null != (e = s(t)) ? e : 0,\n          y2: null != (n = s(t)) ? n : 0\n        };\n      });\n    return c;\n  },\n  A = e(function (t) {\n    var e,\n      n = t.value,\n      r = t.format,\n      a = t.lineX,\n      s = t.lineY,\n      c = t.onClick,\n      u = t.textBaseline,\n      d = t.textAnchor,\n      x = t.animatedProps,\n      m = o(),\n      y = m.axis.ticks.line,\n      h = m.axis.ticks.text,\n      v = null != (e = null == r ? void 0 : r(n)) ? e : n,\n      b = i(function () {\n        var t = {\n          opacity: x.opacity\n        };\n        return c ? {\n          style: p({}, t, {\n            cursor: \"pointer\"\n          }),\n          onClick: function (t) {\n            return c(t, v);\n          }\n        } : {\n          style: t\n        };\n      }, [x.opacity, c, v]);\n    return k(f.g, p({\n      transform: x.transform\n    }, b, {\n      children: [g(\"line\", {\n        x1: 0,\n        x2: a,\n        y1: 0,\n        y2: s,\n        style: y\n      }), h.outlineWidth > 0 && g(f.text, {\n        dominantBaseline: u,\n        textAnchor: d,\n        transform: x.textTransform,\n        style: h,\n        strokeWidth: 2 * h.outlineWidth,\n        stroke: h.outlineColor,\n        strokeLinejoin: \"round\",\n        children: \"\" + v\n      }), g(f.text, {\n        dominantBaseline: u,\n        textAnchor: d,\n        transform: x.textTransform,\n        style: l(h),\n        children: \"\" + v\n      })]\n    }));\n  }),\n  S = function (e) {\n    var r = e.axis,\n      a = e.scale,\n      l = e.x,\n      c = void 0 === l ? 0 : l,\n      x = e.y,\n      m = void 0 === x ? 0 : x,\n      y = e.length,\n      h = e.ticksPosition,\n      T = e.tickValues,\n      S = e.tickSize,\n      W = void 0 === S ? 5 : S,\n      w = e.tickPadding,\n      B = void 0 === w ? 5 : w,\n      X = e.tickRotation,\n      Y = void 0 === X ? 0 : X,\n      C = e.format,\n      O = e.renderTick,\n      j = void 0 === O ? A : O,\n      z = e.truncateTickAt,\n      V = e.legend,\n      D = e.legendPosition,\n      R = void 0 === D ? \"end\" : D,\n      E = e.legendOffset,\n      q = void 0 === E ? 0 : E,\n      F = e.onClick,\n      L = e.ariaHidden,\n      N = o(),\n      H = N.axis.legend.text,\n      I = i(function () {\n        return P(C, a);\n      }, [C, a]),\n      J = b({\n        axis: r,\n        scale: a,\n        ticksPosition: h,\n        tickValues: T,\n        tickSize: W,\n        tickPadding: B,\n        tickRotation: Y,\n        truncateTickAt: z\n      }),\n      G = J.ticks,\n      K = J.textAlign,\n      M = J.textBaseline,\n      Q = null;\n    if (void 0 !== V) {\n      var U,\n        Z = 0,\n        $ = 0,\n        _ = 0;\n      \"y\" === r ? (_ = -90, Z = q, \"start\" === R ? (U = \"start\", $ = y) : \"middle\" === R ? (U = \"middle\", $ = y / 2) : \"end\" === R && (U = \"end\")) : ($ = q, \"start\" === R ? U = \"start\" : \"middle\" === R ? (U = \"middle\", Z = y / 2) : \"end\" === R && (U = \"end\", Z = y)), Q = k(v, {\n        children: [H.outlineWidth > 0 && g(\"text\", {\n          transform: \"translate(\" + Z + \", \" + $ + \") rotate(\" + _ + \")\",\n          textAnchor: U,\n          style: p({\n            dominantBaseline: \"central\"\n          }, H),\n          strokeWidth: 2 * H.outlineWidth,\n          stroke: H.outlineColor,\n          strokeLinejoin: \"round\",\n          children: V\n        }), g(\"text\", {\n          transform: \"translate(\" + Z + \", \" + $ + \") rotate(\" + _ + \")\",\n          textAnchor: U,\n          style: p({\n            dominantBaseline: \"central\"\n          }, H),\n          children: V\n        })]\n      });\n    }\n    var tt = s(),\n      et = tt.animate,\n      it = tt.config,\n      nt = u({\n        transform: \"translate(\" + c + \",\" + m + \")\",\n        lineX2: \"x\" === r ? y : 0,\n        lineY2: \"x\" === r ? 0 : y,\n        config: it,\n        immediate: !et\n      }),\n      rt = n(function (t) {\n        return {\n          opacity: 1,\n          transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n          textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + Y + \")\"\n        };\n      }, [Y]),\n      at = n(function (t) {\n        return {\n          opacity: 0,\n          transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n          textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + Y + \")\"\n        };\n      }, [Y]),\n      ot = d(G, {\n        keys: function (t) {\n          return t.key;\n        },\n        initial: rt,\n        from: at,\n        enter: rt,\n        update: rt,\n        leave: {\n          opacity: 0\n        },\n        config: it,\n        immediate: !et\n      });\n    return k(f.g, {\n      transform: nt.transform,\n      \"aria-hidden\": L,\n      children: [ot(function (e, i, n, r) {\n        return t.createElement(j, p({\n          tickIndex: r,\n          format: I,\n          rotate: Y,\n          textBaseline: M,\n          textAnchor: K,\n          truncateTickAt: z,\n          animatedProps: e\n        }, i, F ? {\n          onClick: F\n        } : {}));\n      }), g(f.line, {\n        style: N.axis.domain.line,\n        x1: 0,\n        x2: nt.lineX2,\n        y1: 0,\n        y2: nt.lineY2\n      }), Q]\n    });\n  },\n  W = e(S),\n  w = [\"top\", \"right\", \"bottom\", \"left\"],\n  B = e(function (t) {\n    var e = t.xScale,\n      i = t.yScale,\n      n = t.width,\n      r = t.height,\n      a = {\n        top: t.top,\n        right: t.right,\n        bottom: t.bottom,\n        left: t.left\n      };\n    return g(v, {\n      children: w.map(function (t) {\n        var o = a[t];\n        if (!o) return null;\n        var l = \"top\" === t || \"bottom\" === t;\n        return g(W, p({}, o, {\n          axis: l ? \"x\" : \"y\",\n          x: \"right\" === t ? n : 0,\n          y: \"bottom\" === t ? r : 0,\n          scale: l ? e : i,\n          length: l ? n : r,\n          ticksPosition: \"top\" === t || \"left\" === t ? \"before\" : \"after\",\n          truncateTickAt: o.truncateTickAt\n        }), t);\n      })\n    });\n  }),\n  X = e(function (t) {\n    var e = t.animatedProps,\n      i = o();\n    return g(f.line, p({}, e, i.grid.line));\n  }),\n  Y = e(function (t) {\n    var e = t.lines,\n      i = s(),\n      n = i.animate,\n      a = i.config,\n      o = d(e, {\n        keys: function (t) {\n          return t.key;\n        },\n        initial: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        from: function (t) {\n          return {\n            opacity: 0,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        enter: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        update: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        leave: {\n          opacity: 0\n        },\n        config: a,\n        immediate: !n\n      });\n    return g(\"g\", {\n      children: o(function (t, e) {\n        return r(X, p({}, e, {\n          key: e.key,\n          animatedProps: t\n        }));\n      })\n    });\n  }),\n  C = e(function (t) {\n    var e = t.width,\n      n = t.height,\n      r = t.xScale,\n      a = t.yScale,\n      o = t.xValues,\n      l = t.yValues,\n      s = i(function () {\n        return !!r && T({\n          width: e,\n          height: n,\n          scale: r,\n          axis: \"x\",\n          values: o\n        });\n      }, [r, o, e, n]),\n      c = i(function () {\n        return !!a && T({\n          width: e,\n          height: n,\n          scale: a,\n          axis: \"y\",\n          values: l\n        });\n      }, [n, e, a, l]);\n    return k(v, {\n      children: [s && g(Y, {\n        lines: s\n      }), c && g(Y, {\n        lines: c\n      })]\n    });\n  }),\n  O = function (t, e) {\n    var i,\n      n = e.axis,\n      r = e.scale,\n      a = e.x,\n      o = void 0 === a ? 0 : a,\n      l = e.y,\n      s = void 0 === l ? 0 : l,\n      f = e.length,\n      u = e.ticksPosition,\n      d = e.tickValues,\n      x = e.tickSize,\n      m = void 0 === x ? 5 : x,\n      y = e.tickPadding,\n      h = void 0 === y ? 5 : y,\n      k = e.tickRotation,\n      g = void 0 === k ? 0 : k,\n      v = e.format,\n      p = e.legend,\n      P = e.legendPosition,\n      T = void 0 === P ? \"end\" : P,\n      A = e.legendOffset,\n      S = void 0 === A ? 0 : A,\n      W = e.theme,\n      w = b({\n        axis: n,\n        scale: r,\n        ticksPosition: u,\n        tickValues: d,\n        tickSize: m,\n        tickPadding: h,\n        tickRotation: g,\n        engine: \"canvas\"\n      }),\n      B = w.ticks,\n      X = w.textAlign,\n      Y = w.textBaseline;\n    t.save(), t.translate(o, s), t.textAlign = X, t.textBaseline = Y;\n    var C = W.axis.ticks.text;\n    t.font = (C.fontWeight ? C.fontWeight + \" \" : \"\") + C.fontSize + \"px \" + C.fontFamily, (null != (i = W.axis.domain.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(W.axis.domain.line.strokeWidth), t.lineCap = \"square\", W.axis.domain.line.stroke && (t.strokeStyle = W.axis.domain.line.stroke), t.beginPath(), t.moveTo(0, 0), t.lineTo(\"x\" === n ? f : 0, \"x\" === n ? 0 : f), t.stroke());\n    var O = \"function\" == typeof v ? v : function (t) {\n      return \"\" + t;\n    };\n    if (B.forEach(function (e) {\n      var i;\n      (null != (i = W.axis.ticks.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(W.axis.ticks.line.strokeWidth), t.lineCap = \"square\", W.axis.ticks.line.stroke && (t.strokeStyle = W.axis.ticks.line.stroke), t.beginPath(), t.moveTo(e.x, e.y), t.lineTo(e.x + e.lineX, e.y + e.lineY), t.stroke());\n      var n = O(e.value);\n      t.save(), t.translate(e.x + e.textX, e.y + e.textY), t.rotate(c(g)), C.outlineWidth > 0 && (t.strokeStyle = C.outlineColor, t.lineWidth = 2 * C.outlineWidth, t.lineJoin = \"round\", t.strokeText(\"\" + n, 0, 0)), W.axis.ticks.text.fill && (t.fillStyle = C.fill), t.fillText(\"\" + n, 0, 0), t.restore();\n    }), void 0 !== p) {\n      var j = 0,\n        z = 0,\n        V = 0,\n        D = \"center\";\n      \"y\" === n ? (V = -90, j = S, \"start\" === T ? (D = \"start\", z = f) : \"middle\" === T ? (D = \"center\", z = f / 2) : \"end\" === T && (D = \"end\")) : (z = S, \"start\" === T ? D = \"start\" : \"middle\" === T ? (D = \"center\", j = f / 2) : \"end\" === T && (D = \"end\", j = f)), t.translate(j, z), t.rotate(c(V)), t.font = (W.axis.legend.text.fontWeight ? W.axis.legend.text.fontWeight + \" \" : \"\") + W.axis.legend.text.fontSize + \"px \" + W.axis.legend.text.fontFamily, W.axis.legend.text.fill && (t.fillStyle = W.axis.legend.text.fill), t.textAlign = D, t.textBaseline = \"middle\", t.fillText(p, 0, 0);\n    }\n    t.restore();\n  },\n  j = function (t, e) {\n    var i = e.xScale,\n      n = e.yScale,\n      r = e.width,\n      a = e.height,\n      o = e.top,\n      l = e.right,\n      s = e.bottom,\n      c = e.left,\n      f = e.theme,\n      u = {\n        top: o,\n        right: l,\n        bottom: s,\n        left: c\n      };\n    w.forEach(function (e) {\n      var o = u[e];\n      if (!o) return null;\n      var l = \"top\" === e || \"bottom\" === e,\n        s = \"top\" === e || \"left\" === e ? \"before\" : \"after\",\n        c = l ? i : n,\n        d = P(o.format, c);\n      O(t, p({}, o, {\n        axis: l ? \"x\" : \"y\",\n        x: \"right\" === e ? r : 0,\n        y: \"bottom\" === e ? a : 0,\n        scale: c,\n        format: d,\n        length: l ? r : a,\n        ticksPosition: s,\n        theme: f\n      }));\n    });\n  },\n  z = function (t, e) {\n    var i = e.width,\n      n = e.height,\n      r = e.scale,\n      a = e.axis,\n      o = e.values;\n    T({\n      width: i,\n      height: n,\n      scale: r,\n      axis: a,\n      values: o\n    }).forEach(function (e) {\n      t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke();\n    });\n  };\nexport { B as Axes, W as Axis, A as AxisTick, C as Grid, X as GridLine, Y as GridLines, S as NonMemoizedAxis, w as positions, j as renderAxesToCanvas, O as renderAxisToCanvas, z as renderGridLinesToCanvas };","map":{"version":3,"names":["b","computeCartesianTicks","t","e","i","axis","n","scale","r","ticksPosition","o","tickValues","l","tickSize","s","tickPadding","c","tickRotation","f","truncateTickAt","u","engine","d","x","y","m","a","k","h","g","lineX","lineY","v","textX","textY","document","dir","P","align","center","T","baseline","translate","top","bottom","left","right","ticks","map","String","length","slice","concat","p","key","Date","valueOf","value","textAlign","textBaseline","getFormatter","type","computeGridLines","width","height","values","Array","isArray","x1","x2","y1","y2","A","format","onClick","textAnchor","animatedProps","line","text","opacity","style","cursor","transform","children","outlineWidth","dominantBaseline","textTransform","strokeWidth","stroke","outlineColor","strokeLinejoin","S","NonMemoizedAxis","W","w","B","X","Y","C","O","renderTick","j","z","V","legend","D","legendPosition","R","E","legendOffset","q","F","L","ariaHidden","N","H","I","J","G","K","M","Q","U","Z","$","_","tt","et","animate","it","config","nt","lineX2","lineY2","immediate","rt","at","ot","keys","initial","from","enter","update","leave","createElement","tickIndex","rotate","domain","xScale","yScale","grid","lines","xValues","yValues","renderAxisToCanvas","theme","save","font","fontWeight","fontSize","fontFamily","lineWidth","Number","lineCap","strokeStyle","beginPath","moveTo","lineTo","forEach","lineJoin","strokeText","fill","fillStyle","fillText","restore","renderAxesToCanvas","renderGridLinesToCanvas","Axes","Axis","AxisTick","Grid","GridLine","GridLines","positions"],"sources":["C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\compute.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\components\\AxisTick.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\components\\Axis.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\props.ts","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\components\\Axes.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\components\\GridLine.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\components\\GridLines.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\components\\Grid.tsx","C:\\Users\\samsung\\Documents\\GitHub\\Web_proj\\dt\\node_modules\\@nivo\\axes\\src\\canvas.ts"],"sourcesContent":["import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    truncateTickAt,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    truncateTickAt?: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const truncateTick = (value: string) => {\n        const valueLength = String(value).length\n\n        if (truncateTickAt && truncateTickAt > 0 && valueLength > truncateTickAt) {\n            return `${String(value).slice(0, truncateTickAt).concat('...')}`\n        }\n        return `${value}`\n    }\n\n    const ticks = values.map((value: Value) => {\n        const processedValue =\n            typeof value === 'string' ? (truncateTick(value) as unknown as Value) : value\n        return {\n            key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n            value: processedValue,\n            ...translate(value),\n            ...line,\n            ...text,\n        }\n    })\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme, sanitizeSvgTextStyle } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n    const lineStyle = theme.axis.ticks.line\n    const textStyle = theme.axis.ticks.text\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={lineStyle} />\n            {textStyle.outlineWidth > 0 && (\n                <animated.text\n                    dominantBaseline={textBaseline}\n                    textAnchor={textAnchor}\n                    transform={animatedProps.textTransform}\n                    style={textStyle}\n                    strokeWidth={textStyle.outlineWidth * 2}\n                    stroke={textStyle.outlineColor}\n                    strokeLinejoin=\"round\"\n                >\n                    {`${value}`}\n                </animated.text>\n            )}\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={sanitizeSvgTextStyle(textStyle)}\n            >\n                {`${value}`}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMotionConfig, useTheme } from '@nivo/core'\nimport { AnyScale, ScaleValue } from '@nivo/scales'\nimport { animated, useSpring, useTransition } from '@react-spring/web'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisProps } from '../types'\nimport { AxisTick } from './AxisTick'\n\nexport const NonMemoizedAxis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    truncateTickAt,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n    const legendTextStyle = theme.axis.legend.text\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        truncateTickAt,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <>\n                {legendTextStyle.outlineWidth > 0 && (\n                    <text\n                        transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                        textAnchor={textAnchor}\n                        style={{\n                            dominantBaseline: 'central',\n                            ...legendTextStyle,\n                        }}\n                        strokeWidth={legendTextStyle.outlineWidth * 2}\n                        stroke={legendTextStyle.outlineColor}\n                        strokeLinejoin=\"round\"\n                    >\n                        {legend}\n                    </text>\n                )}\n                <text\n                    transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                    textAnchor={textAnchor}\n                    style={{\n                        dominantBaseline: 'central',\n                        ...legendTextStyle,\n                    }}\n                >\n                    {legend}\n                </text>\n            </>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const getAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => {\n            return {\n                opacity: 1,\n                transform: `translate(${tick.x},${tick.y})`,\n                textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n            }\n        },\n        [tickRotation]\n    )\n    const getFromAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        [tickRotation]\n    )\n\n    const transition = useTransition<\n        (typeof ticks)[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: getAnimatedProps,\n        from: getFromAnimatedProps,\n        enter: getAnimatedProps,\n        update: getAnimatedProps,\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    truncateTickAt: truncateTickAt,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nexport const Axis = memo(NonMemoizedAxis) as typeof NonMemoizedAxis\n","export const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                            truncateTickAt={axis.truncateTickAt}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo, SVGAttributes } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return (\n            <animated.line\n                {...animatedProps}\n                {...(theme.grid.line as SVGAttributes<SVGLineElement>)}\n            />\n        )\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n\n    const textStyle = theme.axis.ticks.text\n    ctx.font = `${textStyle.fontWeight ? `${textStyle.fontWeight} ` : ''}${textStyle.fontSize}px ${\n        textStyle.fontFamily\n    }`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (textStyle.outlineWidth > 0) {\n            ctx.strokeStyle = textStyle.outlineColor\n            ctx.lineWidth = textStyle.outlineWidth * 2\n            ctx.lineJoin = 'round'\n            ctx.strokeText(`${value}`, 0, 0)\n        }\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = textStyle.fill\n        }\n\n        ctx.fillText(`${value}`, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAOA,IAEaA,CAAA,GAAwB,SAAAC,CAAHC,CAAA;IAoB5B,IAUEC,CAAA;MA7BJC,CAAA,GAAIF,CAAA,CAAJG,IAAA;MACAC,CAAA,GAAKJ,CAAA,CAALK,KAAA;MACAC,CAAA,GAAaN,CAAA,CAAbO,aAAA;MACAC,CAAA,GAAUR,CAAA,CAAVS,UAAA;MACAC,CAAA,GAAQV,CAAA,CAARW,QAAA;MACAC,CAAA,GAAWZ,CAAA,CAAXa,WAAA;MACAC,CAAA,GAAYd,CAAA,CAAZe,YAAA;MACAC,CAAA,GAAchB,CAAA,CAAdiB,cAAA;MAAcC,CAAA,GAAAlB,CAAA,CACdmB,MAAA;MAAAC,CAAA,QAAS,MAAHF,CAAA,GAAG,QAAKA,CAAA;MAYRG,CAAA,GAASC,CAAA,CAAqBlB,CAAA,EAAOI,CAAA;MAErCe,CAAA,GAAYC,CAAA,CAAkBJ,CAAA;MAE9BK,CAAA,GAAW,eAAerB,CAAA,GAAQsB,CAAA,CAAYtB,CAAA,IAASA,CAAA;MACvDuB,CAAA,GAAO;QAAEC,KAAA,EAAO;QAAGC,KAAA,EAAO;MAAA;MAC1BC,CAAA,GAAO;QAAEC,KAAA,EAAO;QAAGC,KAAA,EAAO;MAAA;MAE1BlC,CAAA,GAA4B,mBAAbmC,QAAA,IAAyC,UAAjBA,QAAA,CAASC,GAAA;MAElDC,CAAA,GAA6BZ,CAAA,CAAUa,KAAA,CAAMC,MAAA;MAC7CC,CAAA,GAAmCf,CAAA,CAAUgB,QAAA,CAASF,MAAA;IAE7C,QAATnC,CAAA,IACAD,CAAA,GAAY,SAAAuC,CAAAxC,CAAA;MAAC,IAAAC,CAAA;MAAA,OAAK;QAAEoB,CAAA,EAAc,SAAbpB,CAAA,GAAEwB,CAAA,CAASzB,CAAA,KAAEC,CAAA,GAAI;QAAGqB,CAAA,EAAG;MAAA;IAAA,GAE5CK,CAAA,CAAKE,KAAA,GAAQnB,CAAA,IAA8B,YAAlBJ,CAAA,GAA4B,KAAK,IAC1DwB,CAAA,CAAKE,KAAA,IAAStB,CAAA,GAAWE,CAAA,KAAkC,YAAlBN,CAAA,GAA4B,KAAK,IAGtEgC,CAAA,GADkB,YAAlBhC,CAAA,GACeiB,CAAA,CAAUgB,QAAA,CAASE,GAAA,GAEnBlB,CAAA,CAAUgB,QAAA,CAASG,MAAA,EAGjB,MAAjB5B,CAAA,GACAqB,CAAA,GAAYZ,CAAA,CAAUa,KAAA,CAAMC,MAAA,GAET,YAAlB/B,CAAA,IAA6BQ,CAAA,GAAe,KAC1B,aAAlBR,CAAA,IAA8BQ,CAAA,GAAe,KAE9CqB,CAAA,GAAYZ,CAAA,CAAUa,KAAA,CAAMtC,CAAA,GAAQ,SAAS,UAC7CwC,CAAA,GAAef,CAAA,CAAUgB,QAAA,CAASF,MAAA,KAEf,YAAlB/B,CAAA,IAA6BQ,CAAA,GAAe,KAC1B,aAAlBR,CAAA,IAA8BQ,CAAA,GAAe,OAE9CqB,CAAA,GAAYZ,CAAA,CAAUa,KAAA,CAAMtC,CAAA,GAAQ,UAAU,SAC9CwC,CAAA,GAAef,CAAA,CAAUgB,QAAA,CAASF,MAAA,MAGtCpC,CAAA,GAAY,SAAAuC,CAAAxC,CAAA;MAAC,IAAAC,CAAA;MAAA,OAAK;QAAEoB,CAAA,EAAG;QAAGC,CAAA,EAAc,SAAbrB,CAAA,GAAEwB,CAAA,CAASzB,CAAA,KAAEC,CAAA,GAAI;MAAA;IAAA,GAE5C0B,CAAA,CAAKC,KAAA,GAAQlB,CAAA,IAA8B,YAAlBJ,CAAA,GAA4B,KAAK,IAC1DwB,CAAA,CAAKC,KAAA,IAASrB,CAAA,GAAWE,CAAA,KAAkC,YAAlBN,CAAA,GAA4B,KAAK,IAGtE6B,CAAA,GADkB,YAAlB7B,CAAA,GACYiB,CAAA,CAAUa,KAAA,CAAMO,IAAA,GAEhBpB,CAAA,CAAUa,KAAA,CAAMQ,KAAA;IAyBpC,OAAO;MACHC,KAAA,EAbUxB,CAAA,CAAOyB,GAAA,CAAI,UAAC9C,CAAA;QACtB,IAAME,CAAA,GACe,mBAAVF,CAAA,GAXM,UAACA,CAAA;UAClB,IAAMC,CAAA,GAAc8C,MAAA,CAAO/C,CAAA,EAAOgD,MAAA;UAElC,OAAIhC,CAAA,IAAkBA,CAAA,GAAiB,KAAKf,CAAA,GAAce,CAAA,GACtD,KAAU+B,MAAA,CAAO/C,CAAA,EAAOiD,KAAA,CAAM,GAAGjC,CAAA,EAAgBkC,MAAA,CAAO,SAE5D,KAAUlD,CAAA;QAAA,CAKuB,CAAaA,CAAA,IAA8BA,CAAA;QAC5E,OAAAmD,CAAA;UACIC,GAAA,EAAKpD,CAAA,YAAiBqD,IAAA,GAAI,KAAMrD,CAAA,CAAMsD,OAAA,KAAS,KAAQtD,CAAA;UACvDuD,KAAA,EAAOrD;QAAA,GACJD,CAAA,CAAUD,CAAA,GACV2B,CAAA,EACAG,CAAA,CAEX;MAAA;MAII0B,SAAA,EAAArB,CAAA;MACAsB,YAAA,EAAAnB;IAAA,CAER;EAAA;EAEaH,CAAA,GAAe,SAAAuB,CACxB1D,CAAA,EACAC,CAAA;IAEA,SAAsB,MAAXD,CAAA,IAA4C,qBAAXA,CAAA,EAAuB,OAAOA,CAAA;IAE1E,IAAmB,WAAfC,CAAA,CAAM0D,IAAA,EAAiB;MACvB,IAAMzD,CAAA,GAAYmB,CAAA,CAAWrB,CAAA;MAE7B,OAAQ,UAACA,CAAA;QAAM,OAAKE,CAAA,CAAUF,CAAA,YAAaqD,IAAA,GAAOrD,CAAA,GAAI,IAAIqD,IAAA,CAAKrD,CAAA,EAAG;MAAA,CACtE;IAAA;IAEA,OAAOuB,CAAA,CAASvB,CAAA,CACpB;EAAA;EAEasC,CAAA,GAAmB,SAAAsB,CAAH5D,CAAA;IAYvB,IAnIcC,CAAA;MAwHhBC,CAAA,GAAKF,CAAA,CAAL6D,KAAA;MACAzD,CAAA,GAAMJ,CAAA,CAAN8D,MAAA;MACAxD,CAAA,GAAKN,CAAA,CAALK,KAAA;MACAmB,CAAA,GAAIxB,CAAA,CAAJG,IAAA;MACQK,CAAA,GAAOR,CAAA,CAAf+D,MAAA;MASMrD,CAAA,IArIUT,CAAA,GAoImBO,CAAA,EApIcwD,KAAA,CAAMC,OAAA,CAAQhE,CAAA,IAoIjBO,CAAA,QAAU,MAC3Bc,CAAA,CAAqBhB,CAAA,EAAOE,CAAA;MACnDI,CAAA,GAAW,eAAeN,CAAA,GAAQoB,CAAA,CAAYpB,CAAA,IAASA,CAAA;MAEvDQ,CAAA,GACO,QAATU,CAAA,GACMd,CAAA,CAAOoC,GAAA,CAAI,UAAC9C,CAAA;QAAY,IAAAC,CAAA,EAAAC,CAAA;QAAA,OAAM;UAC1BkD,GAAA,EAAKpD,CAAA,YAAiBqD,IAAA,GAAI,KAAMrD,CAAA,CAAMsD,OAAA,KAAS,KAAQtD,CAAA;UACvDkE,EAAA,EAAmB,SAAjBjE,CAAA,GAAEW,CAAA,CAASZ,CAAA,KAAMC,CAAA,GAAI;UACvBkE,EAAA,EAAmB,SAAjBjE,CAAA,GAAEU,CAAA,CAASZ,CAAA,KAAME,CAAA,GAAI;UACvBkE,EAAA,EAAI;UACJC,EAAA,EAAIjE;QAAA,CACN;MAAA,KACFM,CAAA,CAAOoC,GAAA,CAAI,UAAC9C,CAAA;QAAY,IAAAC,CAAA,EAAAG,CAAA;QAAA,OAAM;UAC1BgD,GAAA,EAAKpD,CAAA,YAAiBqD,IAAA,GAAI,KAAMrD,CAAA,CAAMsD,OAAA,KAAS,KAAQtD,CAAA;UACvDkE,EAAA,EAAI;UACJC,EAAA,EAAIjE,CAAA;UACJkE,EAAA,EAAmB,SAAjBnE,CAAA,GAAEW,CAAA,CAASZ,CAAA,KAAMC,CAAA,GAAI;UACvBoE,EAAA,EAAmB,SAAjBjE,CAAA,GAAEQ,CAAA,CAASZ,CAAA,KAAMI,CAAA,GAAI;QAAA,CAC1B;MAAA;IAEX,OAAOU,CACX;EAAA;ECjGMwD,CAAA,GAAmBrE,CAAA,CAzDR,UAAHD,CAAA;IASc,IAAAC,CAAA;MARjBG,CAAA,GAAMJ,CAAA,CAAbuD,KAAA;MACAjD,CAAA,GAAMN,CAAA,CAANuE,MAAA;MACA/C,CAAA,GAAKxB,CAAA,CAAL4B,KAAA;MACAhB,CAAA,GAAKZ,CAAA,CAAL6B,KAAA;MACAf,CAAA,GAAOd,CAAA,CAAPwE,OAAA;MACAtD,CAAA,GAAYlB,CAAA,CAAZyD,YAAA;MACArC,CAAA,GAAUpB,CAAA,CAAVyE,UAAA;MACApD,CAAA,GAAarB,CAAA,CAAb0E,aAAA;MAEMnD,CAAA,GAAQf,CAAA;MACRc,CAAA,GAAYC,CAAA,CAAMpB,IAAA,CAAK0C,KAAA,CAAM8B,IAAA;MAC7BjD,CAAA,GAAYH,CAAA,CAAMpB,IAAA,CAAK0C,KAAA,CAAM+B,IAAA;MAE7B9C,CAAA,GAAwB,SAAnB7B,CAAA,GAAS,QAANK,CAAA,QAAM,IAANA,CAAA,CAASF,CAAA,KAAOH,CAAA,GAAIG,CAAA;MAE5BN,CAAA,GAAQI,CAAA,CAAQ;QAClB,IAAMF,CAAA,GAAQ;UAAE6E,OAAA,EAASxD,CAAA,CAAcwD;QAAA;QAEvC,OAAK/D,CAAA,GAIE;UACHgE,KAAA,EAAK3B,CAAA,KAAOnD,CAAA,EAAK;YAAE+E,MAAA,EAAQ;UAAA;UAC3BP,OAAA,EAAS,SAAAA,CAACxE,CAAA;YAAgD,OAAKc,CAAA,CAAQd,CAAA,EAAO8B,CAAA,CAAM;UAAA;QAAA,IAL7E;UAAEgD,KAAA,EAAA9E;QAAA,CAOhB;MAAA,GAAE,CAACqB,CAAA,CAAcwD,OAAA,EAAS/D,CAAA,EAASgB,CAAA;IAEpC,OACIL,CAAA,CAACT,CAAA,CAASW,CAAA,EAACwB,CAAA;MAAC6B,SAAA,EAAW3D,CAAA,CAAc2D;IAAA,GAAelF,CAAA,EAAK;MAAAmF,QAAA,GACrDtD,CAAA;QAAMuC,EAAA,EAAI;QAAGC,EAAA,EAAI3C,CAAA;QAAO4C,EAAA,EAAI;QAAGC,EAAA,EAAIzD,CAAA;QAAOkE,KAAA,EAAOxD;MAAA,IAChDI,CAAA,CAAUwD,YAAA,GAAe,KACtBvD,CAAA,CAACX,CAAA,CAAS4D,IAAA,EAAI;QACVO,gBAAA,EAAkBjE,CAAA;QAClBuD,UAAA,EAAYrD,CAAA;QACZ4D,SAAA,EAAW3D,CAAA,CAAc+D,aAAA;QACzBN,KAAA,EAAOpD,CAAA;QACP2D,WAAA,EAAsC,IAAzB3D,CAAA,CAAUwD,YAAA;QACvBI,MAAA,EAAQ5D,CAAA,CAAU6D,YAAA;QAClBC,cAAA,EAAe;QAAOP,QAAA,EAElB,KAAAnD;MAAA,IAGZH,CAAA,CAACX,CAAA,CAAS4D,IAAA,EAAI;QACVO,gBAAA,EAAkBjE,CAAA;QAClBuD,UAAA,EAAYrD,CAAA;QACZ4D,SAAA,EAAW3D,CAAA,CAAc+D,aAAA;QACzBN,KAAA,EAAOpE,CAAA,CAAqBgB,CAAA;QAAWuD,QAAA,EAEnC,KAAAnD;MAAA;IAAA,GAIpB;EAAA;ECrDa2D,CAAA,GAAkB,SAAAC,CAAHzF,CAAA;IA0BtB,IAzBFK,CAAA,GAAIL,CAAA,CAAJE,IAAA;MACAqB,CAAA,GAAKvB,CAAA,CAALI,KAAA;MAAKK,CAAA,GAAAT,CAAA,CACLoB,CAAA;MAAAP,CAAA,QAAI,MAAHJ,CAAA,GAAG,IAACA,CAAA;MAAAW,CAAA,GAAApB,CAAA,CACLqB,CAAA;MAAAC,CAAA,QAAI,MAAHF,CAAA,GAAG,IAACA,CAAA;MACLC,CAAA,GAAMrB,CAAA,CAAN+C,MAAA;MACAtB,CAAA,GAAazB,CAAA,CAAbM,aAAA;MACA+B,CAAA,GAAUrC,CAAA,CAAVQ,UAAA;MAAUgF,CAAA,GAAAxF,CAAA,CACVU,QAAA;MAAAgF,CAAA,QAAW,MAAHF,CAAA,GAAG,IAACA,CAAA;MAAAG,CAAA,GAAA3F,CAAA,CACZY,WAAA;MAAAgF,CAAA,QAAc,MAAHD,CAAA,GAAG,IAACA,CAAA;MAAAE,CAAA,GAAA7F,CAAA,CACfc,YAAA;MAAAgF,CAAA,QAAe,MAAHD,CAAA,GAAG,IAACA,CAAA;MAChBE,CAAA,GAAM/F,CAAA,CAANsE,MAAA;MAAM0B,CAAA,GAAAhG,CAAA,CACNiG,UAAA;MAAAC,CAAA,QAAa,MAAHF,CAAA,GAAG3B,CAAA,GAAQ2B,CAAA;MACrBG,CAAA,GAAcnG,CAAA,CAAdgB,cAAA;MACAoF,CAAA,GAAMpG,CAAA,CAANqG,MAAA;MAAMC,CAAA,GAAAtG,CAAA,CACNuG,cAAA;MAAAC,CAAA,QAAiB,MAAHF,CAAA,GAAG,QAAKA,CAAA;MAAAG,CAAA,GAAAzG,CAAA,CACtB0G,YAAA;MAAAC,CAAA,QAAe,MAAHF,CAAA,GAAG,IAACA,CAAA;MAChBG,CAAA,GAAO5G,CAAA,CAAPuE,OAAA;MACAsC,CAAA,GAAU7G,CAAA,CAAV8G,UAAA;MASMC,CAAA,GAAQxG,CAAA;MACRyG,CAAA,GAAkBD,CAAA,CAAM7G,IAAA,CAAKmG,MAAA,CAAO1B,IAAA;MAEpCsC,CAAA,GAAchH,CAAA,CAAQ;QAAA,OAAMiC,CAAA,CAAa6D,CAAA,EAAQxE,CAAA,CAAM;MAAA,GAAE,CAACwE,CAAA,EAAQxE,CAAA;MAExE2F,CAAA,GAA2CrH,CAAA,CAAsB;QAC7DK,IAAA,EAAAG,CAAA;QACAD,KAAA,EAAAmB,CAAA;QACAjB,aAAA,EAAAmB,CAAA;QACAjB,UAAA,EAAA6B,CAAA;QACA3B,QAAA,EAAAgF,CAAA;QACA9E,WAAA,EAAAgF,CAAA;QACA9E,YAAA,EAAAgF,CAAA;QACA9E,cAAA,EAAAmF;MAAA;MARIgB,CAAA,GAAKD,CAAA,CAALtE,KAAA;MAAOwE,CAAA,GAASF,CAAA,CAAT3D,SAAA;MAAW8D,CAAA,GAAYH,CAAA,CAAZ1D,YAAA;MAWtB8D,CAAA,GAAa;IACjB,SAAe,MAAXlB,CAAA,EAAsB;MACtB,IAGImB,CAAA;QAHAC,CAAA,GAAU;QACVC,CAAA,GAAU;QACVC,CAAA,GAAiB;MAGR,QAATrH,CAAA,IACAqH,CAAA,IAAkB,IAClBF,CAAA,GAAUb,CAAA,EACa,YAAnBH,CAAA,IACAe,CAAA,GAAa,SACbE,CAAA,GAAUpG,CAAA,IACgB,aAAnBmF,CAAA,IACPe,CAAA,GAAa,UACbE,CAAA,GAAUpG,CAAA,GAAS,KACO,UAAnBmF,CAAA,KACPe,CAAA,GAAa,WAGjBE,CAAA,GAAUd,CAAA,EACa,YAAnBH,CAAA,GACAe,CAAA,GAAa,UACa,aAAnBf,CAAA,IACPe,CAAA,GAAa,UACbC,CAAA,GAAUnG,CAAA,GAAS,KACO,UAAnBmF,CAAA,KACPe,CAAA,GAAa,OACbC,CAAA,GAAUnG,CAAA,IAIlBiG,CAAA,GACI9F,CAAA,CAAAK,CAAA;QAAAmD,QAAA,GACKgC,CAAA,CAAgB/B,YAAA,GAAe,KAC5BvD,CAAA;UACIqD,SAAA,iBAAwByC,CAAA,GAAO,OAAKC,CAAA,GAAO,cAAYC,CAAA,GAAkB;UACzElD,UAAA,EAAY+C,CAAA;UACZ1C,KAAA,EAAK3B,CAAA;YACDgC,gBAAA,EAAkB;UAAA,GACf8B,CAAA;UAEP5B,WAAA,EAA4C,IAA/B4B,CAAA,CAAgB/B,YAAA;UAC7BI,MAAA,EAAQ2B,CAAA,CAAgB1B,YAAA;UACxBC,cAAA,EAAe;UAAOP,QAAA,EAErBoB;QAAA,IAGT1E,CAAA;UACIqD,SAAA,iBAAwByC,CAAA,GAAO,OAAKC,CAAA,GAAO,cAAYC,CAAA,GAAkB;UACzElD,UAAA,EAAY+C,CAAA;UACZ1C,KAAA,EAAK3B,CAAA;YACDgC,gBAAA,EAAkB;UAAA,GACf8B,CAAA;UACLhC,QAAA,EAEDoB;QAAA;MAAA,EAIjB;IAAA;IAEA,IAAAuB,EAAA,GAA0ChH,CAAA;MAAlCiH,EAAA,GAAOD,EAAA,CAAPE,OAAA;MAAiBC,EAAA,GAAYH,EAAA,CAApBI,MAAA;MAEXC,EAAA,GAAgB/G,CAAA,CAAU;QAC5B8D,SAAA,EAAwB,eAAAlE,CAAA,GAAK,MAAAS,CAAA,GAAI;QACjC2G,MAAA,EAAiB,QAAT5H,CAAA,GAAegB,CAAA,GAAS;QAChC6G,MAAA,EAAiB,QAAT7H,CAAA,GAAe,IAAIgB,CAAA;QAC3B0G,MAAA,EAAQD,EAAA;QACRK,SAAA,GAAYP;MAAA;MAGVQ,EAAA,GAAmBjI,CAAA,CACrB,UAACJ,CAAA;QACG,OAAO;UACH6E,OAAA,EAAS;UACTG,SAAA,EAAS,eAAehF,CAAA,CAAKqB,CAAA,SAAKrB,CAAA,CAAKsB,CAAA,GAAI;UAC3C8D,aAAA,EAAa,eAAepF,CAAA,CAAK+B,KAAA,SAAS/B,CAAA,CAAKgC,KAAA,GAAK,cAAY+D,CAAA,GAAY;QAAA,CAEpF;MAAA,GACA,CAACA,CAAA;MAECuC,EAAA,GAAuBlI,CAAA,CACzB,UAACJ,CAAA;QAAuB,OAAM;UAC1B6E,OAAA,EAAS;UACTG,SAAA,EAAS,eAAehF,CAAA,CAAKqB,CAAA,SAAKrB,CAAA,CAAKsB,CAAA,GAAI;UAC3C8D,aAAA,EAAa,eAAepF,CAAA,CAAK+B,KAAA,SAAS/B,CAAA,CAAKgC,KAAA,GAAK,cAAY+D,CAAA,GAAY;QAAA,CAC/E;MAAA,GACD,CAACA,CAAA;MAGCwC,EAAA,GAAanH,CAAA,CAGjBgG,CAAA,EAAO;QACLoB,IAAA,EAAM,SAAAA,CAAAxI,CAAA;UAAI,OAAIA,CAAA,CAAKoD,GAAG;QAAA;QACtBqF,OAAA,EAASJ,EAAA;QACTK,IAAA,EAAMJ,EAAA;QACNK,KAAA,EAAON,EAAA;QACPO,MAAA,EAAQP,EAAA;QACRQ,KAAA,EAAO;UACHhE,OAAA,EAAS;QAAA;QAEbmD,MAAA,EAAQD,EAAA;QACRK,SAAA,GAAYP;MAAA;IAGhB,OACIpG,CAAA,CAACT,CAAA,CAASW,CAAA,EAAC;MAACqD,SAAA,EAAWiD,EAAA,CAAcjD,SAAA;MAAW,eAAa8B,CAAA;MAAW7B,QAAA,GACnEsD,EAAA,CAAW,UAACtI,CAAA,EAAiBC,CAAA,EAAME,CAAA,EAAQE,CAAA;QACxC,OAAON,CAAA,CAAM8I,aAAA,CAAc3C,CAAA,EAAUhD,CAAA;UACjC4F,SAAA,EAAAzI,CAAA;UACAiE,MAAA,EAAQ2C,CAAA;UACR8B,MAAA,EAAQjD,CAAA;UACRtC,YAAA,EAAA6D,CAAA;UACA7C,UAAA,EAAY4C,CAAA;UACZpG,cAAA,EAAgBmF,CAAA;UAChB1B,aAAA,EAAezE;QAAA,GACZC,CAAA,EACC2G,CAAA,GAAU;UAAErC,OAAA,EAAAqC;QAAA,IAAY,IAEpC;MAAA,IACAlF,CAAA,CAACX,CAAA,CAAS2D,IAAA,EAAI;QACVG,KAAA,EAAOkC,CAAA,CAAM7G,IAAA,CAAK8I,MAAA,CAAOtE,IAAA;QACzBT,EAAA,EAAI;QACJC,EAAA,EAAI8D,EAAA,CAAcC,MAAA;QAClB9D,EAAA,EAAI;QACJC,EAAA,EAAI4D,EAAA,CAAcE;MAAA,IAErBZ,CAAA;IAAA,EAGb;EAAA;EAEa5B,CAAA,GAAO1F,CAAA,CAAKwF,CAAA;EC3LZG,CAAA,GAAY,CAAC,OAAO,SAAS,UAAU;ECMvCC,CAAA,GAAO5F,CAAA,CAChB,UAAAD,CAAA;IAkBM,IAjBFC,CAAA,GAAMD,CAAA,CAANkJ,MAAA;MACAhJ,CAAA,GAAMF,CAAA,CAANmJ,MAAA;MACA/I,CAAA,GAAKJ,CAAA,CAAL6D,KAAA;MACAvD,CAAA,GAAMN,CAAA,CAAN8D,MAAA;MAeMtC,CAAA,GAAO;QAAEiB,GAAA,EAdZzC,CAAA,CAAHyC,GAAA;QAcoBG,KAAA,EAbf5C,CAAA,CAAL4C,KAAA;QAa2BF,MAAA,EAZrB1C,CAAA,CAAN0C,MAAA;QAYmCC,IAAA,EAX/B3C,CAAA,CAAJ2C;MAAA;IAaA,OACIhB,CAAA,CAAAG,CAAA;MAAAmD,QAAA,EACKW,CAAA,CAAU9C,GAAA,CAAI,UAAA9C,CAAA;QACX,IAAMQ,CAAA,GAAOgB,CAAA,CAAKxB,CAAA;QAIlB,KAAKQ,CAAA,EAAM,OAAO;QAElB,IAAME,CAAA,GAAuB,UAAbV,CAAA,IAAmC,aAAbA,CAAA;QAItC,OACI2B,CAAA,CAACgE,CAAA,EAAIxC,CAAA,KAEG3C,CAAA,EAAI;UACRL,IAAA,EAAMO,CAAA,GAAU,MAAM;UACtBW,CAAA,EAAgB,YAAbrB,CAAA,GAAuBI,CAAA,GAAQ;UAClCkB,CAAA,EAAgB,aAAbtB,CAAA,GAAwBM,CAAA,GAAS;UACpCD,KAAA,EAAOK,CAAA,GAAUT,CAAA,GAASC,CAAA;UAC1B8C,MAAA,EAAQtC,CAAA,GAAUN,CAAA,GAAQE,CAAA;UAC1BC,aAAA,EAXS,UAAbP,CAAA,IAAmC,WAAbA,CAAA,GAAsB,WAAW;UAYnDiB,cAAA,EAAgBT,CAAA,CAAKS;QAAA,IARhBjB,CAAA;MAAA;IAAA,EAc7B;EAAA;ECrDS8F,CAAA,GAAW7F,CAAA,CACpB,UAAAD,CAAA;IAUM,IATFC,CAAA,GAAaD,CAAA,CAAb0E,aAAA;MAUMxE,CAAA,GAAQM,CAAA;IAEd,OACImB,CAAA,CAACX,CAAA,CAAS2D,IAAA,EAAIxB,CAAA,KACNlD,CAAA,EACCC,CAAA,CAAMkJ,IAAA,CAAKzE,IAAA,EAG5B;EAAA;EClBSoB,CAAA,GAAY9F,CAAA,CAAK,UAAAD,CAAA;IAAkC,IAA/BC,CAAA,GAAKD,CAAA,CAALqJ,KAAA;MAC7BnJ,CAAA,GAA0CU,CAAA;MAAlCR,CAAA,GAAOF,CAAA,CAAP4H,OAAA;MAAiBtG,CAAA,GAAYtB,CAAA,CAApB8H,MAAA;MAEXxH,CAAA,GAAaY,CAAA,CACfnB,CAAA,EACA;QACIuI,IAAA,EAAM,SAAAA,CAAAxI,CAAA;UAAI,OAAIA,CAAA,CAAKoD,GAAG;QAAA;QACtBqF,OAAA,EAAS,SAAAA,CAAAzI,CAAA;UAAI,OAAK;YACd6E,OAAA,EAAS;YACTX,EAAA,EAAIlE,CAAA,CAAKkE,EAAA;YACTC,EAAA,EAAInE,CAAA,CAAKmE,EAAA;YACTC,EAAA,EAAIpE,CAAA,CAAKoE,EAAA;YACTC,EAAA,EAAIrE,CAAA,CAAKqE;UAAA,CACX;QAAA;QACFqE,IAAA,EAAM,SAAAA,CAAA1I,CAAA;UAAI,OAAK;YACX6E,OAAA,EAAS;YACTX,EAAA,EAAIlE,CAAA,CAAKkE,EAAA;YACTC,EAAA,EAAInE,CAAA,CAAKmE,EAAA;YACTC,EAAA,EAAIpE,CAAA,CAAKoE,EAAA;YACTC,EAAA,EAAIrE,CAAA,CAAKqE;UAAA,CACX;QAAA;QACFsE,KAAA,EAAO,SAAAA,CAAA3I,CAAA;UAAI,OAAK;YACZ6E,OAAA,EAAS;YACTX,EAAA,EAAIlE,CAAA,CAAKkE,EAAA;YACTC,EAAA,EAAInE,CAAA,CAAKmE,EAAA;YACTC,EAAA,EAAIpE,CAAA,CAAKoE,EAAA;YACTC,EAAA,EAAIrE,CAAA,CAAKqE;UAAA,CACX;QAAA;QACFuE,MAAA,EAAQ,SAAAA,CAAA5I,CAAA;UAAI,OAAK;YACb6E,OAAA,EAAS;YACTX,EAAA,EAAIlE,CAAA,CAAKkE,EAAA;YACTC,EAAA,EAAInE,CAAA,CAAKmE,EAAA;YACTC,EAAA,EAAIpE,CAAA,CAAKoE,EAAA;YACTC,EAAA,EAAIrE,CAAA,CAAKqE;UAAA,CACX;QAAA;QACFwE,KAAA,EAAO;UACHhE,OAAA,EAAS;QAAA;QAEbmD,MAAA,EAAQxG,CAAA;QACR4G,SAAA,GAAYhI;MAAA;IAIpB,OACIuB,CAAA;MAAAsD,QAAA,EACKzE,CAAA,CAAW,UAACR,CAAA,EAAeC,CAAA;QAAI,OAC5BK,CAAA,CAACwF,CAAA,EAAQ3C,CAAA,KAAKlD,CAAA,EAAI;UAAEmD,GAAA,EAAKnD,CAAA,CAAKmD,GAAA;UAAKsB,aAAA,EAAe1E;QAAA;MAAA;IAAA,EAIlE;EAAA;ECnDagG,CAAA,GAAO/F,CAAA,CAChB,UAAAD,CAAA;IAcM,IAbFC,CAAA,GAAKD,CAAA,CAAL6D,KAAA;MACAzD,CAAA,GAAMJ,CAAA,CAAN8D,MAAA;MACAxD,CAAA,GAAMN,CAAA,CAANkJ,MAAA;MACA1H,CAAA,GAAMxB,CAAA,CAANmJ,MAAA;MACA3I,CAAA,GAAOR,CAAA,CAAPsJ,OAAA;MACA5I,CAAA,GAAOV,CAAA,CAAPuJ,OAAA;MASM3I,CAAA,GAASV,CAAA,CAAQ;QACnB,SAAKI,CAAA,IAEEgC,CAAA,CAAiB;UACpBuB,KAAA,EAAA5D,CAAA;UACA6D,MAAA,EAAA1D,CAAA;UACAC,KAAA,EAAOC,CAAA;UACPH,IAAA,EAAM;UACN4D,MAAA,EAAQvD;QAAA,EAEf;MAAA,GAAE,CAACF,CAAA,EAAQE,CAAA,EAASP,CAAA,EAAOG,CAAA;MAEtBU,CAAA,GAASZ,CAAA,CAAQ;QACnB,SAAKsB,CAAA,IAEEc,CAAA,CAAiB;UACpBuB,KAAA,EAAA5D,CAAA;UACA6D,MAAA,EAAA1D,CAAA;UACAC,KAAA,EAAOmB,CAAA;UACPrB,IAAA,EAAM;UACN4D,MAAA,EAAQrD;QAAA,EAEf;MAAA,GAAE,CAACN,CAAA,EAAQH,CAAA,EAAOuB,CAAA,EAAQd,CAAA;IAE3B,OACIe,CAAA,CAAAK,CAAA;MAAAmD,QAAA,EACK,CAAArE,CAAA,IAAUe,CAAA,CAACoE,CAAA,EAAS;QAACsD,KAAA,EAAOzI;MAAA,IAC5BE,CAAA,IAAUa,CAAA,CAACoE,CAAA,EAAS;QAACsD,KAAA,EAAOvI;MAAA;IAAA,EAGzC;EAAA;EC7CSmF,CAAA,GAAqB,SAAAuD,CAC9BxJ,CAAA,EAA6BC,CAAA;IAqC5B,IAAAC,CAAA;MAnCGE,CAAA,GAAIH,CAAA,CAAJE,IAAA;MACAG,CAAA,GAAKL,CAAA,CAALI,KAAA;MAAKmB,CAAA,GAAAvB,CAAA,CACLoB,CAAA;MAAAb,CAAA,QAAI,MAAHgB,CAAA,GAAG,IAACA,CAAA;MAAAd,CAAA,GAAAT,CAAA,CACLqB,CAAA;MAAAV,CAAA,QAAI,MAAHF,CAAA,GAAG,IAACA,CAAA;MACLM,CAAA,GAAMf,CAAA,CAAN+C,MAAA;MAEA9B,CAAA,GAAajB,CAAA,CAAbM,aAAA;MACAa,CAAA,GAAUnB,CAAA,CAAVQ,UAAA;MAAUY,CAAA,GAAApB,CAAA,CACVU,QAAA;MAAAY,CAAA,QAAW,MAAHF,CAAA,GAAG,IAACA,CAAA;MAAAC,CAAA,GAAArB,CAAA,CACZY,WAAA;MAAAa,CAAA,QAAc,MAAHJ,CAAA,GAAG,IAACA,CAAA;MAAAG,CAAA,GAAAxB,CAAA,CACfc,YAAA;MAAAY,CAAA,QAAe,MAAHF,CAAA,GAAG,IAACA,CAAA;MACRK,CAAA,GAAO7B,CAAA,CAAfsE,MAAA;MAEApB,CAAA,GAAMlD,CAAA,CAANqG,MAAA;MAAMnE,CAAA,GAAAlC,CAAA,CACNuG,cAAA;MAAAlE,CAAA,QAAiB,MAAHH,CAAA,GAAG,QAAKA,CAAA;MAAAmC,CAAA,GAAArE,CAAA,CACtB0G,YAAA;MAAAlB,CAAA,QAAe,MAAHnB,CAAA,GAAG,IAACA,CAAA;MAEhBqB,CAAA,GAAK1F,CAAA,CAALwJ,KAAA;MAmBJ7D,CAAA,GAA2C9F,CAAA,CAAsB;QAC7DK,IAAA,EAAAC,CAAA;QACAC,KAAA,EAAAC,CAAA;QACAC,aAAA,EAAAW,CAAA;QACAT,UAAA,EAAAW,CAAA;QACAT,QAAA,EAAAY,CAAA;QACAV,WAAA,EAAAa,CAAA;QACAX,YAAA,EAAAY,CAAA;QACAR,MAAA,EAAQ;MAAA;MARJ0E,CAAA,GAAKD,CAAA,CAAL/C,KAAA;MAAOiD,CAAA,GAASF,CAAA,CAATpC,SAAA;MAAWuC,CAAA,GAAYH,CAAA,CAAZnC,YAAA;IAW1BzD,CAAA,CAAI0J,IAAA,IACJ1J,CAAA,CAAIwC,SAAA,CAAUhC,CAAA,EAAGI,CAAA,GAEjBZ,CAAA,CAAIwD,SAAA,GAAYsC,CAAA,EAChB9F,CAAA,CAAIyD,YAAA,GAAesC,CAAA;IAEnB,IAAMC,CAAA,GAAYL,CAAA,CAAMxF,IAAA,CAAK0C,KAAA,CAAM+B,IAAA;IACnC5E,CAAA,CAAI2J,IAAA,IAAU3D,CAAA,CAAU4D,UAAA,GAAgB5D,CAAA,CAAU4D,UAAA,GAAgB,YAAK5D,CAAA,CAAU6D,QAAA,GAC7E,QAAA7D,CAAA,CAAU8D,UAAA,GAGyB,SAAnC5J,CAAA,GAACyF,CAAA,CAAMxF,IAAA,CAAK8I,MAAA,CAAOtE,IAAA,CAAKU,WAAA,IAAWnF,CAAA,GAAI,KAAK,MAC5CF,CAAA,CAAI+J,SAAA,GAAYC,MAAA,CAAOrE,CAAA,CAAMxF,IAAA,CAAK8I,MAAA,CAAOtE,IAAA,CAAKU,WAAA,GAC9CrF,CAAA,CAAIiK,OAAA,GAAU,UAEVtE,CAAA,CAAMxF,IAAA,CAAK8I,MAAA,CAAOtE,IAAA,CAAKW,MAAA,KACvBtF,CAAA,CAAIkK,WAAA,GAAcvE,CAAA,CAAMxF,IAAA,CAAK8I,MAAA,CAAOtE,IAAA,CAAKW,MAAA,GAG7CtF,CAAA,CAAImK,SAAA,IACJnK,CAAA,CAAIoK,MAAA,CAAO,GAAG,IACdpK,CAAA,CAAIqK,MAAA,CAAgB,QAATjK,CAAA,GAAeY,CAAA,GAAS,GAAY,QAATZ,CAAA,GAAe,IAAIY,CAAA,GACzDhB,CAAA,CAAIsF,MAAA;IAGR,IAAMW,CAAA,GAA4B,qBAAZnE,CAAA,GAAyBA,CAAA,GAAU,UAAC9B,CAAA;MAAc,YAAQA,CAAA;IAAA;IAsChF,IApCA6F,CAAA,CAAMyE,OAAA,CAAQ,UAAArK,CAAA;MAAQ,IAAAC,CAAA;MAAA,CACoB,SAAlCA,CAAA,GAACyF,CAAA,CAAMxF,IAAA,CAAK0C,KAAA,CAAM8B,IAAA,CAAKU,WAAA,IAAWnF,CAAA,GAAI,KAAK,MAC3CF,CAAA,CAAI+J,SAAA,GAAYC,MAAA,CAAOrE,CAAA,CAAMxF,IAAA,CAAK0C,KAAA,CAAM8B,IAAA,CAAKU,WAAA,GAC7CrF,CAAA,CAAIiK,OAAA,GAAU,UAEVtE,CAAA,CAAMxF,IAAA,CAAK0C,KAAA,CAAM8B,IAAA,CAAKW,MAAA,KACtBtF,CAAA,CAAIkK,WAAA,GAAcvE,CAAA,CAAMxF,IAAA,CAAK0C,KAAA,CAAM8B,IAAA,CAAKW,MAAA,GAG5CtF,CAAA,CAAImK,SAAA,IACJnK,CAAA,CAAIoK,MAAA,CAAOnK,CAAA,CAAKoB,CAAA,EAAGpB,CAAA,CAAKqB,CAAA,GACxBtB,CAAA,CAAIqK,MAAA,CAAOpK,CAAA,CAAKoB,CAAA,GAAIpB,CAAA,CAAK2B,KAAA,EAAO3B,CAAA,CAAKqB,CAAA,GAAIrB,CAAA,CAAK4B,KAAA,GAC9C7B,CAAA,CAAIsF,MAAA;MAGR,IAAMlF,CAAA,GAAQ6F,CAAA,CAAOhG,CAAA,CAAKsD,KAAA;MAE1BvD,CAAA,CAAI0J,IAAA,IACJ1J,CAAA,CAAIwC,SAAA,CAAUvC,CAAA,CAAKoB,CAAA,GAAIpB,CAAA,CAAK8B,KAAA,EAAO9B,CAAA,CAAKqB,CAAA,GAAIrB,CAAA,CAAK+B,KAAA,GACjDhC,CAAA,CAAIgJ,MAAA,CAAOlI,CAAA,CAAiBa,CAAA,IAExBqE,CAAA,CAAUd,YAAA,GAAe,MACzBlF,CAAA,CAAIkK,WAAA,GAAclE,CAAA,CAAUT,YAAA,EAC5BvF,CAAA,CAAI+J,SAAA,GAAqC,IAAzB/D,CAAA,CAAUd,YAAA,EAC1BlF,CAAA,CAAIuK,QAAA,GAAW,SACfvK,CAAA,CAAIwK,UAAA,CAAc,KAAApK,CAAA,EAAS,GAAG,KAG9BuF,CAAA,CAAMxF,IAAA,CAAK0C,KAAA,CAAM+B,IAAA,CAAK6F,IAAA,KACtBzK,CAAA,CAAI0K,SAAA,GAAY1E,CAAA,CAAUyE,IAAA,GAG9BzK,CAAA,CAAI2K,QAAA,CAAY,KAAAvK,CAAA,EAAS,GAAG,IAC5BJ,CAAA,CAAI4K,OAAA,EACR;IAAA,SAEe,MAAXzH,CAAA,EAAsB;MACtB,IAAIgD,CAAA,GAAU;QACVC,CAAA,GAAU;QACVC,CAAA,GAAiB;QACjBE,CAAA,GAA6B;MAEpB,QAATnG,CAAA,IACAiG,CAAA,IAAkB,IAClBF,CAAA,GAAUV,CAAA,EACa,YAAnBnD,CAAA,IACAiE,CAAA,GAAY,SACZH,CAAA,GAAUpF,CAAA,IACgB,aAAnBsB,CAAA,IACPiE,CAAA,GAAY,UACZH,CAAA,GAAUpF,CAAA,GAAS,KACO,UAAnBsB,CAAA,KACPiE,CAAA,GAAY,WAGhBH,CAAA,GAAUX,CAAA,EACa,YAAnBnD,CAAA,GACAiE,CAAA,GAAY,UACc,aAAnBjE,CAAA,IACPiE,CAAA,GAAY,UACZJ,CAAA,GAAUnF,CAAA,GAAS,KACO,UAAnBsB,CAAA,KACPiE,CAAA,GAAY,OACZJ,CAAA,GAAUnF,CAAA,IAIlBhB,CAAA,CAAIwC,SAAA,CAAU2D,CAAA,EAASC,CAAA,GACvBpG,CAAA,CAAIgJ,MAAA,CAAOlI,CAAA,CAAiBuF,CAAA,IAC5BrG,CAAA,CAAI2J,IAAA,IACAhE,CAAA,CAAMxF,IAAA,CAAKmG,MAAA,CAAO1B,IAAA,CAAKgF,UAAA,GAAgBjE,CAAA,CAAMxF,IAAA,CAAKmG,MAAA,CAAO1B,IAAA,CAAKgF,UAAA,GAAgB,YAC/EjE,CAAA,CAAMxF,IAAA,CAAKmG,MAAA,CAAO1B,IAAA,CAAKiF,QAAA,GAAc,QAAAlE,CAAA,CAAMxF,IAAA,CAAKmG,MAAA,CAAO1B,IAAA,CAAKkF,UAAA,EAE3DnE,CAAA,CAAMxF,IAAA,CAAKmG,MAAA,CAAO1B,IAAA,CAAK6F,IAAA,KACvBzK,CAAA,CAAI0K,SAAA,GAAY/E,CAAA,CAAMxF,IAAA,CAAKmG,MAAA,CAAO1B,IAAA,CAAK6F,IAAA,GAG3CzK,CAAA,CAAIwD,SAAA,GAAY+C,CAAA,EAChBvG,CAAA,CAAIyD,YAAA,GAAe,UACnBzD,CAAA,CAAI2K,QAAA,CAASxH,CAAA,EAAQ,GAAG,EAC5B;IAAA;IAEAnD,CAAA,CAAI4K,OAAA,EACR;EAAA;EAEazE,CAAA,GAAqB,SAAA0E,CAC9B7K,CAAA,EAA6BC,CAAA;IAwB5B,IAtBGC,CAAA,GAAMD,CAAA,CAANiJ,MAAA;MACA9I,CAAA,GAAMH,CAAA,CAANkJ,MAAA;MACA7I,CAAA,GAAKL,CAAA,CAAL4D,KAAA;MACArC,CAAA,GAAMvB,CAAA,CAAN6D,MAAA;MAEAtD,CAAA,GAAGP,CAAA,CAAHwC,GAAA;MACA/B,CAAA,GAAKT,CAAA,CAAL2C,KAAA;MACAhC,CAAA,GAAMX,CAAA,CAANyC,MAAA;MACA5B,CAAA,GAAIb,CAAA,CAAJ0C,IAAA;MAEA3B,CAAA,GAAKf,CAAA,CAALwJ,KAAA;MAaEvI,CAAA,GAAO;QAAEuB,GAAA,EAAAjC,CAAA;QAAKoC,KAAA,EAAAlC,CAAA;QAAOgC,MAAA,EAAA9B,CAAA;QAAQ+B,IAAA,EAAA7B;MAAA;IAEnC8E,CAAA,CAAU0E,OAAA,CAAQ,UAAArK,CAAA;MACd,IAAMO,CAAA,GAAOU,CAAA,CAAKjB,CAAA;MAIlB,KAAKO,CAAA,EAAM,OAAO;MAElB,IAAME,CAAA,GAAuB,UAAbT,CAAA,IAAmC,aAAbA,CAAA;QAChCW,CAAA,GAA6B,UAAbX,CAAA,IAAmC,WAAbA,CAAA,GAAsB,WAAW;QACvEa,CAAA,GAAQJ,CAAA,GAAUR,CAAA,GAASE,CAAA;QAC3BgB,CAAA,GAASe,CAAA,CAAa3B,CAAA,CAAK+D,MAAA,EAAQzD,CAAA;MAEzCmF,CAAA,CAAmBjG,CAAA,EAAGmD,CAAA,KACf3C,CAAA,EAAI;QACPL,IAAA,EAAMO,CAAA,GAAU,MAAM;QACtBW,CAAA,EAAgB,YAAbpB,CAAA,GAAuBK,CAAA,GAAQ;QAClCgB,CAAA,EAAgB,aAAbrB,CAAA,GAAwBuB,CAAA,GAAS;QACpCnB,KAAA,EAAAS,CAAA;QACAyD,MAAA,EAAAnD,CAAA;QACA4B,MAAA,EAAQtC,CAAA,GAAUJ,CAAA,GAAQkB,CAAA;QAC1BjB,aAAA,EAAAK,CAAA;QACA6I,KAAA,EAAAzI;MAAA,GAER;IAAA,EACJ;EAAA;EAEaoF,CAAA,GAA0B,SAAA0E,CACnC9K,CAAA,EAA6BC,CAAA;IAc5B,IAZGC,CAAA,GAAKD,CAAA,CAAL4D,KAAA;MACAzD,CAAA,GAAMH,CAAA,CAAN6D,MAAA;MACAxD,CAAA,GAAKL,CAAA,CAALI,KAAA;MACAmB,CAAA,GAAIvB,CAAA,CAAJE,IAAA;MACAK,CAAA,GAAMP,CAAA,CAAN8D,MAAA;IASUzB,CAAA,CAAiB;MAAEuB,KAAA,EAAA3D,CAAA;MAAO4D,MAAA,EAAA1D,CAAA;MAAQC,KAAA,EAAAC,CAAA;MAAOH,IAAA,EAAAqB,CAAA;MAAMuC,MAAA,EAAAvD;IAAA,GAEvD8J,OAAA,CAAQ,UAAArK,CAAA;MACVD,CAAA,CAAImK,SAAA,IACJnK,CAAA,CAAIoK,MAAA,CAAOnK,CAAA,CAAKiE,EAAA,EAAIjE,CAAA,CAAKmE,EAAA,GACzBpE,CAAA,CAAIqK,MAAA,CAAOpK,CAAA,CAAKkE,EAAA,EAAIlE,CAAA,CAAKoE,EAAA,GACzBrE,CAAA,CAAIsF,MAAA,EACR;IAAA,EACJ;EAAA;AAAA,SAAAO,CAAA,IAAAkF,IAAA,EAAApF,CAAA,IAAAqF,IAAA,EAAA1G,CAAA,IAAA2G,QAAA,EAAAjF,CAAA,IAAAkF,IAAA,EAAApF,CAAA,IAAAqF,QAAA,EAAApF,CAAA,IAAAqF,SAAA,EAAA3F,CAAA,IAAAC,eAAA,EAAAE,CAAA,IAAAyF,SAAA,EAAAlF,CAAA,IAAA0E,kBAAA,EAAA5E,CAAA,IAAAuD,kBAAA,EAAApD,CAAA,IAAA0E,uBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}