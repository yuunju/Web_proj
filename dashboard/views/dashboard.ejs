<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>공정현황 대시보드</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css"
      integrity="sha512-10/jx2EXwxxWqCLX/hHth/vu2KY3jCF70dCQB8TSgNjbCVAC/8vai53GfMDrO2Emgwccf2pJqxct9ehpzG+MTw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      .center {
        display: flex;
        justify-content: center;
        align-items: center;
      }
      canvas {
        height: 100px;
      }
    </style>
  </head>
  <body>
    <div class="container-fluid p-4" style="background-color: #eee">
      <div class="row">
        <div
          class="container-fluid p-4"
          style="
            background-color: white;
            max-width: 1200px;
            border-radius: 20px;
          "
        >
          <div class="row">
            <div class="center" style="height: 100px">
              <h4
                class="center p-2 border border-2 rounded-pill"
                style="width: 100%"
              >
                공정현황 대시보드
              </h4>
            </div>
          </div>

          <div class="row">
            <div
              id="aside"
              class="col-4 d-flex flex-column justify-content-between"
            >
              <div class="aside-top">
                <div
                  class="accordion accordion-flush"
                  id="accordionFlushExample"
                >
                  <div class="accordion-item">
                    <h2 class="accordion-header">
                      <button
                        class="accordion-button collapsed"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#flush-collapseOne"
                        aria-expanded="false"
                        aria-controls="flush-collapseOne"
                      >
                        용접현황
                      </button>
                    </h2>
                    <div
                      id="flush-collapseOne"
                      class="accordion-collapse collapse"
                      data-bs-parent="#accordionFlushExample"
                    >
                      <div class="accordion-body">
                        <ul>
                          <li><a href="">현황1</a></li>
                          <li><a href="">현황2</a></li>
                          <li><a href="">현황3</a></li>
                        </ul>
                      </div>
                    </div>
                  </div>
                  <div class="accordion-item">
                    <h2 class="accordion-header">
                      <button
                        class="accordion-button collapsed"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#flush-collapseTwo"
                        aria-expanded="false"
                        aria-controls="flush-collapseTwo"
                      >
                        설계변경 현황
                      </button>
                    </h2>
                    <div
                      id="flush-collapseTwo"
                      class="accordion-collapse collapse"
                      data-bs-parent="#accordionFlushExample"
                    >
                      <div class="accordion-body">
                        <ul>
                          <li><a href="">현황1</a></li>
                          <li><a href="">현황2</a></li>
                          <li><a href="">현황3</a></li>
                        </ul>
                      </div>
                    </div>
                  </div>
                  <div class="accordion-item">
                    <h2 class="accordion-header">
                      <button
                        class="accordion-button collapsed"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#flush-collapseThree"
                        aria-expanded="false"
                        aria-controls="flush-collapseThree"
                      >
                        개정도 현황
                      </button>
                    </h2>
                    <div
                      id="flush-collapseThree"
                      class="accordion-collapse collapse"
                      data-bs-parent="#accordionFlushExample"
                    >
                      <div class="accordion-body">
                        <ul>
                          <li><a href="">현황1</a></li>
                          <li><a href="">현황2</a></li>
                          <li><a href="">현황3</a></li>
                        </ul>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="aside-bottom">
                <p>홍길동 님, 환영합니다.</p>
                <a href="">로그아웃</a>
              </div>
            </div>
            <div id="section" class="col-8">
              <div class="row">
                <h3 class="center mb-3">용접현황</h3>
              </div>
              <div class="row">
                <div class="col-6 border center" style="height: 300px">
                  <canvas id="myChart1"></canvas>
                </div>
                <div class="col-6 border center" style="height: 300px">
                  <canvas id="myChart2"></canvas>
                </div>
                <div class="col-6 border center" style="height: 300px">
                  <canvas id="myChart3"></canvas>
                </div>
                <div class="col-6 border" style="height: 300px">
                  <canvas id="myChart4"></canvas>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- <script>
      const ctx1 = document.getElementById("myChart1");
      const ctx2 = document.getElementById("myChart2");
      const ctx3 = document.getElementById("myChart3");
      const ctx4 = document.getElementById("myChart4");
      drawChart(ctx1, "line");
      drawChart(ctx2, "bar");
      drawChart(ctx3, "pie");
      drawChart(ctx4, "line");

      function drawChart(ctx, type) {
        new Chart(ctx, {
          type: type,
          data: {
            labels: ["FCAW", "EGW", "FCSA", "FAB", "SAW"],
            datasets: [
              {
                label: "용접불량률%",
                data: [12, 19, 3, 5, 2],
                borderWidth: 1,
              },
            ],
          },
          options: {
            scales: {
              y: {
                beginAtZero: true,
              },
            },
          },
        });
      }
    </script> -->

    <script>
      // 서버에서 용접 데이터를 가져오는 함수
      async function fetchWeldingData1() {
        try {
          // API 호출 (실제 API 경로로 변경 필요)
          const response = await fetch("http://localhost:3030/list1");
          const result = await response.json();

          console.log(result);

          // 에러가 없을 경우 데이터 처리
          if (!result.error) {
            const weldingData = result.data; //배열데이터

            //{"error":false,
            // "message":"Successfully retrived all welding",
            // "data":[{"w_no":1,"w_method":"FCAW","w_defect_rate":10,"w_date":"2023-12-31T15:00:00.000Z"},
            //         {"w_no":2,"w_method":"EGW","w_defect_rate":5,"w_date":"2024-09-08T15:00:00.000Z"},{"w_no":3,"w_method":"FCSA","w_defect_rate":15,"w_date":"2024-09-08T15:00:00.000Z"},{"w_no":4,"w_method":"FAB","w_defect_rate":25,"w_date":"2024-09-08T15:00:00.000Z"},{"w_no":5,"w_method":"SAW","w_defect_rate":12,"w_date":"2024-09-08T15:00:00.000Z"}]}

            // 용접 방식을 라벨로 사용
            const labels = weldingData.map((item) => {
              return item.reason_code;
            });
            //["FCAW", "EGW", ... ]

            // 불량률 데이터를 추출
            const defectRates = weldingData.map((item) => item.count);
            //[10, 5, ....]

            // 차트 그리기 (line, bar, pie)
            drawChart1(
              document.getElementById("myChart1"),
              "line",
              labels,
              defectRates
            );
            // drawChart(
            //   document.getElementById("myChart2"),
            //   "bar",
            //   labels,
            //   defectRates
            // );
            // drawChart(
            //   document.getElementById("myChart3"),
            //   "pie",
            //   labels,
            //   defectRates
            // );
            // drawChart(
            //   document.getElementById("myChart4"),
            //   "line",
            //   labels,
            //   defectRates
            // );
          } else {
            console.error("Error:", result.message);
          }
        } catch (error) {
          // 데이터 요청 실패 시 에러 처리
          console.error("Fetch error:", error);
        }
      }

      // 차트를 그리는 함수
      function drawChart1(ctx, type, labels, data) {
        new Chart(ctx, {
          type: type, // 차트 종류 (line, bar, pie 등)
          data: {
            labels: labels, // 차트의 라벨 (용접 방식)
            datasets: [
              {
                label: "용접불량률%", // 데이터 라벨
                data: data, // 불량률 데이터
                borderWidth: 1,
              },
            ],
          },
          options: {
            scales: {
              y: {
                beginAtZero: true, // y축이 0부터 시작
              },
            },
          },
        });
      }

      async function fetchWeldingData2() {
        try {
          // API 호출 (실제 API 경로로 변경 필요)
          const response = await fetch("http://localhost:3030/list2");
          const result = await response.json();

          console.log(result);

          // 에러가 없을 경우 데이터 처리
          if (!result.error) {
            const weldingData = result.data; //배열데이터

            console.log(weldingData);

            // 용접 방식을 라벨로 사용
            const labels = [
              ...new Set(weldingData.map((item) => item.inspection_method)),
            ];

            // 불량률 데이터를 추출
            const defectRates1 = weldingData.filter((item) => {
              if (item.usage_decision == "보류") {
                return item.count;
              }
            });
            const defectRates2 = weldingData.filter((item) => {
              if (item.usage_decision == "승인") {
                return item.count;
              }
            });
            console.log("lable" + labels);
            console.log(defectRates1);

            // 차트 그리기 (line, bar, pie)
            drawChart2(
              document.getElementById("myChart2"),
              "line",
              labels,
              defectRates1,
              defectRates2
            );
          } else {
            console.error("Error:", result.message);
          }
        } catch (error) {
          // 데이터 요청 실패 시 에러 처리
          console.error("Fetch error:", error);
        }
      }
      function drawChart2(ctx, type, labels, data1, data2) {
        new Chart(ctx, {
          type: type, // 차트 종류 (line, bar, pie 등)
          data: {
            labels: labels, // 차트의 라벨 (용접 방식)
            datasets: [
              {
                label: "보류", // 데이터 라벨
                data: data1, // 불량률 데이터
                borderWidth: 1,
              },
              {
                label: "승인", // 데이터 라벨
                data: data2, // 불량률 데이터
                borderWidth: 1,
              },
            ],
          },
          options: {
            scales: {
              y: {
                beginAtZero: true, // y축이 0부터 시작
              },
            },
          },
        });
      }

      // 페이지가 로드되면 데이터 요청 시작
      window.onload = function () {
        fetchWeldingData1(); // 데이터 요청 함수 실행
        fetchWeldingData2();
        //fetchWeldingData3();
        //fetchWeldingData4();
      };
    </script>

    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.min.js"
      integrity="sha384-Rx+T1VzGupg4BHQYs2gCW9It+akI2MM/mndMCy36UVfodzcJcF0GGLxZIzObiEfa"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
